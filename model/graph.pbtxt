node {
  name: "module/hub_input/images"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "module/hub_input/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "module/hub_input/Mul"
  op: "Mul"
  input: "module/hub_input/images"
  input: "module/hub_input/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/hub_input/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/hub_input/Sub"
  op: "Sub"
  input: "module/hub_input/Mul"
  input: "module/hub_input/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/input"
  op: "Identity"
  input: "module/hub_input/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/Conv/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/Conv/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/Conv/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/Conv/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/Conv/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/Conv/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv/weights"
}
node {
  name: "module/MobilenetV2/Conv/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/weights"
  input: "module/MobilenetV2/Conv/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/input"
  input: "module/MobilenetV2/Conv/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/beta"
  input: "module/MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/Conv/Conv2D"
  input: "module/MobilenetV2/Conv/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/Conv/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/input"
  op: "Identity"
  input: "module/MobilenetV2/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv/input"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
  input: "module/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv/depthwise_output"
  input: "module/MobilenetV2/expanded_conv/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\010\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_1/input"
  input: "module/MobilenetV2/expanded_conv_1/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_1/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_1/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_1/expansion_output"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
  input: "module/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_1/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_1/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_1/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_1/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_1/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_1/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\010\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_2/input"
  input: "module/MobilenetV2/expanded_conv_2/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_2/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_2/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_2/expansion_output"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
  input: "module/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_2/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_2/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_2/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/add"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_2/project/Identity"
  input: "module/MobilenetV2/expanded_conv_2/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_2/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_2/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\010\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_3/input"
  input: "module/MobilenetV2/expanded_conv_3/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_3/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_3/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_3/expansion_output"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
  input: "module/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_3/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_3/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_3/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_3/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_3/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_3/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_4/input"
  input: "module/MobilenetV2/expanded_conv_4/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_4/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_4/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_4/expansion_output"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
  input: "module/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_4/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_4/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_4/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/add"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_4/project/Identity"
  input: "module/MobilenetV2/expanded_conv_4/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_4/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_4/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_5/input"
  input: "module/MobilenetV2/expanded_conv_5/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_5/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_5/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_5/expansion_output"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
  input: "module/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_5/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_5/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_5/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/add"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_5/project/Identity"
  input: "module/MobilenetV2/expanded_conv_5/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_5/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_5/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_6/input"
  input: "module/MobilenetV2/expanded_conv_6/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_6/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_6/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_6/expansion_output"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
  input: "module/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_6/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_6/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_6/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_6/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_6/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_6/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_7/input"
  input: "module/MobilenetV2/expanded_conv_7/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_7/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_7/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_7/expansion_output"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
  input: "module/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_7/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_7/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_7/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/add"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_7/project/Identity"
  input: "module/MobilenetV2/expanded_conv_7/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_7/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_7/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_7/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_8/input"
  input: "module/MobilenetV2/expanded_conv_8/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_8/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_8/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_8/expansion_output"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
  input: "module/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_8/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_8/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_8/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/add"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_8/project/Identity"
  input: "module/MobilenetV2/expanded_conv_8/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_8/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_8/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_8/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_9/input"
  input: "module/MobilenetV2/expanded_conv_9/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_9/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_9/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_9/expansion_output"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
  input: "module/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_9/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_9/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_9/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/add"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_9/project/Identity"
  input: "module/MobilenetV2/expanded_conv_9/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_9/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_9/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_9/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_10/input"
  input: "module/MobilenetV2/expanded_conv_10/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_10/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_10/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_10/expansion_output"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
  input: "module/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_10/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_10/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_10/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_10/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_10/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_10/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_11/input"
  input: "module/MobilenetV2/expanded_conv_11/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_11/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_11/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_11/expansion_output"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
  input: "module/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_11/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_11/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_11/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/add"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_11/project/Identity"
  input: "module/MobilenetV2/expanded_conv_11/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_11/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_11/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_11/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_12/input"
  input: "module/MobilenetV2/expanded_conv_12/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_12/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_12/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_12/expansion_output"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
  input: "module/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_12/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_12/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_12/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/add"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_12/project/Identity"
  input: "module/MobilenetV2/expanded_conv_12/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_12/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_12/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_12/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_13/input"
  input: "module/MobilenetV2/expanded_conv_13/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_13/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_13/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_13/expansion_output"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\0008\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
  input: "module/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_13/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_13/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_13/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_13/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_13/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_13/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\000\000\000P\001\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 56
        }
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_14/input"
  input: "module/MobilenetV2/expanded_conv_14/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_14/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_14/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 336
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_14/expansion_output"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000P\001\000\0008\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 336
        }
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
  input: "module/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_14/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_14/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_14/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/add"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_14/project/Identity"
  input: "module/MobilenetV2/expanded_conv_14/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_14/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_14/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_14/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\000\000\000P\001\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 56
        }
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_15/input"
  input: "module/MobilenetV2/expanded_conv_15/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_15/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_15/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 336
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_15/expansion_output"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000P\001\000\0008\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 336
        }
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
  input: "module/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_15/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_15/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_15/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/add"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_15/project/Identity"
  input: "module/MobilenetV2/expanded_conv_15/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_15/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_15/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/input"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_15/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\000\000\000P\001\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 56
        }
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_16/input"
  input: "module/MobilenetV2/expanded_conv_16/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_16/expand/Conv2D"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expand/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/expansion_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_16/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 336
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module/MobilenetV2/expanded_conv_16/expansion_output"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/depthwise_output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000P\001\000\000p\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 336
        }
        dim {
          size: 112
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
  input: "module/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_16/depthwise_output"
  input: "module/MobilenetV2/expanded_conv_16/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 112
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 112
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 112
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 112
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/expanded_conv_16/project/Conv2D"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/project/Identity"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/expanded_conv_16/output"
  op: "Identity"
  input: "module/MobilenetV2/expanded_conv_16/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000p\000\000\000\000\005\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/mul"
  input: "module/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 112
        }
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/Conv_1/weights"
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv_1/weights"
}
node {
  name: "module/MobilenetV2/Conv_1/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/weights"
  input: "module/MobilenetV2/Conv_1/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/scale"
  input: "module/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/Conv2D"
  op: "Conv2D"
  input: "module/MobilenetV2/expanded_conv_16/output"
  input: "module/MobilenetV2/Conv_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta"
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module/MobilenetV2/Conv_1/Conv2D"
  input: "module/MobilenetV2/Conv_1/BatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/ReadVariableOp_1"
  input: "module/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module/MobilenetV2/Conv_1/Relu6"
  op: "Relu6"
  input: "module/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/embedding"
  op: "Identity"
  input: "module/MobilenetV2/Conv_1/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module/MobilenetV2/Logits/AvgPool"
  op: "AvgPool"
  input: "module/MobilenetV2/embedding"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module/hub_output/feature_vector/SpatialSqueeze"
  op: "Squeeze"
  input: "module/MobilenetV2/Logits/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 260
          }
        }
        string_val: "module/MobilenetV2/Conv/BatchNorm/beta"
        string_val: "module/MobilenetV2/Conv/BatchNorm/gamma"
        string_val: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/Conv/weights"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/beta"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/Conv_1/weights"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_1/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_10/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_11/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_12/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_13/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_14/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_15/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_16/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_2/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_3/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_4/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_5/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_6/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_7/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_8/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 260
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "module/MobilenetV2/Conv/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 260
          }
        }
        string_val: "module/MobilenetV2/Conv/BatchNorm/beta"
        string_val: "module/MobilenetV2/Conv/BatchNorm/gamma"
        string_val: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/Conv/weights"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/beta"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/Conv_1/weights"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_1/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_10/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_11/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_12/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_13/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_14/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_15/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_16/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_2/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_3/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_4/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_5/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_6/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_7/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_8/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 260
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/beta"
  input: "save/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/weights"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/weights"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  input: "save/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
  input: "save/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  input: "save/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  input: "save/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  input: "save/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  input: "save/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
  input: "save/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  input: "save/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  input: "save/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  input: "save/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  input: "save/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  input: "save/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  input: "save/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  input: "save/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
  input: "save/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  input: "save/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  input: "save/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  input: "save/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  input: "save/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
  input: "save/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  input: "save/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  input: "save/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_99"
  op: "Identity"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  input: "save/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_100"
  op: "Identity"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  input: "save/Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_101"
  op: "Identity"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  input: "save/Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_102"
  op: "Identity"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  input: "save/Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_103"
  op: "Identity"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  input: "save/Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_104"
  op: "Identity"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
  input: "save/Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_105"
  op: "Identity"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  input: "save/Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_106"
  op: "Identity"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  input: "save/Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_107"
  op: "Identity"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  input: "save/Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_108"
  op: "Identity"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  input: "save/Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_109"
  op: "Identity"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
  input: "save/Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_110"
  op: "Identity"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  input: "save/Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_111"
  op: "Identity"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  input: "save/Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_112"
  op: "Identity"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_113"
  op: "Identity"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_114"
  op: "Identity"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  input: "save/Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_115"
  op: "Identity"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  input: "save/Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_116"
  op: "Identity"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  input: "save/Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_117"
  op: "Identity"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  input: "save/Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_118"
  op: "Identity"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  input: "save/Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_119"
  op: "Identity"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
  input: "save/Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_120"
  op: "Identity"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  input: "save/Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_121"
  op: "Identity"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  input: "save/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_122"
  op: "Identity"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  input: "save/Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_123"
  op: "Identity"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  input: "save/Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_124"
  op: "Identity"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
  input: "save/Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_125"
  op: "Identity"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  input: "save/Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_126"
  op: "Identity"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  input: "save/Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_127"
  op: "Identity"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_128"
  op: "Identity"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_129"
  op: "Identity"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  input: "save/Identity_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_130"
  op: "Identity"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  input: "save/Identity_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_131"
  op: "Identity"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  input: "save/Identity_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_132"
  op: "Identity"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  input: "save/Identity_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_133"
  op: "Identity"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  input: "save/Identity_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_134"
  op: "Identity"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
  input: "save/Identity_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_135"
  op: "Identity"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  input: "save/Identity_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_136"
  op: "Identity"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  input: "save/Identity_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_137"
  op: "Identity"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  input: "save/Identity_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_138"
  op: "Identity"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  input: "save/Identity_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_139"
  op: "Identity"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
  input: "save/Identity_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_140"
  op: "Identity"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  input: "save/Identity_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_141"
  op: "Identity"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  input: "save/Identity_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_142"
  op: "Identity"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_143"
  op: "Identity"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_144"
  op: "Identity"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  input: "save/Identity_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_145"
  op: "Identity"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  input: "save/Identity_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_146"
  op: "Identity"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  input: "save/Identity_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_147"
  op: "Identity"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  input: "save/Identity_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_148"
  op: "Identity"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  input: "save/Identity_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_149"
  op: "Identity"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
  input: "save/Identity_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_150"
  op: "Identity"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  input: "save/Identity_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_151"
  op: "Identity"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  input: "save/Identity_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_152"
  op: "Identity"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  input: "save/Identity_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_153"
  op: "Identity"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  input: "save/Identity_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_154"
  op: "Identity"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
  input: "save/Identity_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_155"
  op: "Identity"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  input: "save/Identity_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_156"
  op: "Identity"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  input: "save/Identity_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_157"
  op: "Identity"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_158"
  op: "Identity"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_159"
  op: "Identity"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  input: "save/Identity_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_160"
  op: "Identity"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  input: "save/Identity_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_161"
  op: "Identity"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  input: "save/Identity_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_162"
  op: "Identity"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  input: "save/Identity_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_163"
  op: "Identity"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  input: "save/Identity_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_164"
  op: "Identity"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
  input: "save/Identity_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_165"
  op: "Identity"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  input: "save/Identity_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_166"
  op: "Identity"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  input: "save/Identity_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_167"
  op: "Identity"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  input: "save/Identity_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_168"
  op: "Identity"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  input: "save/Identity_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_169"
  op: "Identity"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
  input: "save/Identity_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_170"
  op: "Identity"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  input: "save/Identity_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_171"
  op: "Identity"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  input: "save/Identity_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_172"
  op: "Identity"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_173"
  op: "Identity"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_174"
  op: "Identity"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  input: "save/Identity_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_175"
  op: "Identity"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  input: "save/Identity_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_176"
  op: "Identity"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  input: "save/Identity_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_177"
  op: "Identity"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  input: "save/Identity_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_178"
  op: "Identity"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  input: "save/Identity_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_179"
  op: "Identity"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
  input: "save/Identity_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_180"
  op: "Identity"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  input: "save/Identity_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_181"
  op: "Identity"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  input: "save/Identity_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_182"
  op: "Identity"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  input: "save/Identity_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_183"
  op: "Identity"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  input: "save/Identity_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_184"
  op: "Identity"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
  input: "save/Identity_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_185"
  op: "Identity"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  input: "save/Identity_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_186"
  op: "Identity"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  input: "save/Identity_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_187"
  op: "Identity"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_188"
  op: "Identity"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_189"
  op: "Identity"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  input: "save/Identity_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_190"
  op: "Identity"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  input: "save/Identity_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_191"
  op: "Identity"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  input: "save/Identity_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_192"
  op: "Identity"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  input: "save/Identity_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_193"
  op: "Identity"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  input: "save/Identity_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_194"
  op: "Identity"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
  input: "save/Identity_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_195"
  op: "Identity"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  input: "save/Identity_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_196"
  op: "Identity"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  input: "save/Identity_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_197"
  op: "Identity"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  input: "save/Identity_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_198"
  op: "Identity"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  input: "save/Identity_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_199"
  op: "Identity"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_199"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
  input: "save/Identity_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_200"
  op: "Identity"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_200"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  input: "save/Identity_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_201"
  op: "Identity"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_201"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  input: "save/Identity_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_202"
  op: "Identity"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_202"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_203"
  op: "Identity"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_203"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_204"
  op: "Identity"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_204"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  input: "save/Identity_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_205"
  op: "Identity"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_205"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  input: "save/Identity_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_206"
  op: "Identity"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_206"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  input: "save/Identity_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_207"
  op: "Identity"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_207"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  input: "save/Identity_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_208"
  op: "Identity"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_208"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  input: "save/Identity_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_209"
  op: "Identity"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_209"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
  input: "save/Identity_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_210"
  op: "Identity"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_210"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  input: "save/Identity_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_211"
  op: "Identity"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_211"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  input: "save/Identity_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_212"
  op: "Identity"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_212"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  input: "save/Identity_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_213"
  op: "Identity"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_213"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  input: "save/Identity_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_214"
  op: "Identity"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_214"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
  input: "save/Identity_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_215"
  op: "Identity"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_215"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  input: "save/Identity_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_216"
  op: "Identity"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_216"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  input: "save/Identity_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_217"
  op: "Identity"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_217"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_218"
  op: "Identity"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_218"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_219"
  op: "Identity"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_219"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  input: "save/Identity_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_220"
  op: "Identity"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_220"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  input: "save/Identity_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_221"
  op: "Identity"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_221"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  input: "save/Identity_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_222"
  op: "Identity"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_222"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  input: "save/Identity_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_223"
  op: "Identity"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_223"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  input: "save/Identity_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_224"
  op: "Identity"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_224"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
  input: "save/Identity_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_225"
  op: "Identity"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_225"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  input: "save/Identity_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_226"
  op: "Identity"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_226"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  input: "save/Identity_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_227"
  op: "Identity"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_227"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  input: "save/Identity_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_228"
  op: "Identity"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_228"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  input: "save/Identity_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_229"
  op: "Identity"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_229"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
  input: "save/Identity_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_230"
  op: "Identity"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_230"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  input: "save/Identity_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_231"
  op: "Identity"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_231"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  input: "save/Identity_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_232"
  op: "Identity"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_232"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_233"
  op: "Identity"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_233"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_234"
  op: "Identity"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_234"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  input: "save/Identity_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_235"
  op: "Identity"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_235"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  input: "save/Identity_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_236"
  op: "Identity"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_236"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  input: "save/Identity_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_237"
  op: "Identity"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_237"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  input: "save/Identity_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_238"
  op: "Identity"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_238"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  input: "save/Identity_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_239"
  op: "Identity"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_239"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
  input: "save/Identity_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_240"
  op: "Identity"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_240"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  input: "save/Identity_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_241"
  op: "Identity"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_241"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  input: "save/Identity_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_242"
  op: "Identity"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_242"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  input: "save/Identity_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_243"
  op: "Identity"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_243"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  input: "save/Identity_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_244"
  op: "Identity"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_244"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
  input: "save/Identity_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_245"
  op: "Identity"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_245"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  input: "save/Identity_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_246"
  op: "Identity"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_246"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  input: "save/Identity_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_247"
  op: "Identity"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_247"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  input: "save/Identity_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_248"
  op: "Identity"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_248"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  input: "save/Identity_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_249"
  op: "Identity"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_249"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  input: "save/Identity_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_250"
  op: "Identity"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_250"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  input: "save/Identity_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_251"
  op: "Identity"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_251"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  input: "save/Identity_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_252"
  op: "Identity"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_252"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  input: "save/Identity_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_253"
  op: "Identity"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_253"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  input: "save/Identity_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_254"
  op: "Identity"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_254"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
  input: "save/Identity_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_255"
  op: "Identity"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_255"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  input: "save/Identity_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_256"
  op: "Identity"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_256"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  input: "save/Identity_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_257"
  op: "Identity"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_257"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  input: "save/Identity_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_258"
  op: "Identity"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_258"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  input: "save/Identity_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_259"
  op: "Identity"
  input: "save/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_259"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
  input: "save/Identity_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_100"
  input: "^save/AssignVariableOp_101"
  input: "^save/AssignVariableOp_102"
  input: "^save/AssignVariableOp_103"
  input: "^save/AssignVariableOp_104"
  input: "^save/AssignVariableOp_105"
  input: "^save/AssignVariableOp_106"
  input: "^save/AssignVariableOp_107"
  input: "^save/AssignVariableOp_108"
  input: "^save/AssignVariableOp_109"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_110"
  input: "^save/AssignVariableOp_111"
  input: "^save/AssignVariableOp_112"
  input: "^save/AssignVariableOp_113"
  input: "^save/AssignVariableOp_114"
  input: "^save/AssignVariableOp_115"
  input: "^save/AssignVariableOp_116"
  input: "^save/AssignVariableOp_117"
  input: "^save/AssignVariableOp_118"
  input: "^save/AssignVariableOp_119"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_120"
  input: "^save/AssignVariableOp_121"
  input: "^save/AssignVariableOp_122"
  input: "^save/AssignVariableOp_123"
  input: "^save/AssignVariableOp_124"
  input: "^save/AssignVariableOp_125"
  input: "^save/AssignVariableOp_126"
  input: "^save/AssignVariableOp_127"
  input: "^save/AssignVariableOp_128"
  input: "^save/AssignVariableOp_129"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_130"
  input: "^save/AssignVariableOp_131"
  input: "^save/AssignVariableOp_132"
  input: "^save/AssignVariableOp_133"
  input: "^save/AssignVariableOp_134"
  input: "^save/AssignVariableOp_135"
  input: "^save/AssignVariableOp_136"
  input: "^save/AssignVariableOp_137"
  input: "^save/AssignVariableOp_138"
  input: "^save/AssignVariableOp_139"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_140"
  input: "^save/AssignVariableOp_141"
  input: "^save/AssignVariableOp_142"
  input: "^save/AssignVariableOp_143"
  input: "^save/AssignVariableOp_144"
  input: "^save/AssignVariableOp_145"
  input: "^save/AssignVariableOp_146"
  input: "^save/AssignVariableOp_147"
  input: "^save/AssignVariableOp_148"
  input: "^save/AssignVariableOp_149"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_150"
  input: "^save/AssignVariableOp_151"
  input: "^save/AssignVariableOp_152"
  input: "^save/AssignVariableOp_153"
  input: "^save/AssignVariableOp_154"
  input: "^save/AssignVariableOp_155"
  input: "^save/AssignVariableOp_156"
  input: "^save/AssignVariableOp_157"
  input: "^save/AssignVariableOp_158"
  input: "^save/AssignVariableOp_159"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_160"
  input: "^save/AssignVariableOp_161"
  input: "^save/AssignVariableOp_162"
  input: "^save/AssignVariableOp_163"
  input: "^save/AssignVariableOp_164"
  input: "^save/AssignVariableOp_165"
  input: "^save/AssignVariableOp_166"
  input: "^save/AssignVariableOp_167"
  input: "^save/AssignVariableOp_168"
  input: "^save/AssignVariableOp_169"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_170"
  input: "^save/AssignVariableOp_171"
  input: "^save/AssignVariableOp_172"
  input: "^save/AssignVariableOp_173"
  input: "^save/AssignVariableOp_174"
  input: "^save/AssignVariableOp_175"
  input: "^save/AssignVariableOp_176"
  input: "^save/AssignVariableOp_177"
  input: "^save/AssignVariableOp_178"
  input: "^save/AssignVariableOp_179"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_180"
  input: "^save/AssignVariableOp_181"
  input: "^save/AssignVariableOp_182"
  input: "^save/AssignVariableOp_183"
  input: "^save/AssignVariableOp_184"
  input: "^save/AssignVariableOp_185"
  input: "^save/AssignVariableOp_186"
  input: "^save/AssignVariableOp_187"
  input: "^save/AssignVariableOp_188"
  input: "^save/AssignVariableOp_189"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_190"
  input: "^save/AssignVariableOp_191"
  input: "^save/AssignVariableOp_192"
  input: "^save/AssignVariableOp_193"
  input: "^save/AssignVariableOp_194"
  input: "^save/AssignVariableOp_195"
  input: "^save/AssignVariableOp_196"
  input: "^save/AssignVariableOp_197"
  input: "^save/AssignVariableOp_198"
  input: "^save/AssignVariableOp_199"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_200"
  input: "^save/AssignVariableOp_201"
  input: "^save/AssignVariableOp_202"
  input: "^save/AssignVariableOp_203"
  input: "^save/AssignVariableOp_204"
  input: "^save/AssignVariableOp_205"
  input: "^save/AssignVariableOp_206"
  input: "^save/AssignVariableOp_207"
  input: "^save/AssignVariableOp_208"
  input: "^save/AssignVariableOp_209"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_210"
  input: "^save/AssignVariableOp_211"
  input: "^save/AssignVariableOp_212"
  input: "^save/AssignVariableOp_213"
  input: "^save/AssignVariableOp_214"
  input: "^save/AssignVariableOp_215"
  input: "^save/AssignVariableOp_216"
  input: "^save/AssignVariableOp_217"
  input: "^save/AssignVariableOp_218"
  input: "^save/AssignVariableOp_219"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_220"
  input: "^save/AssignVariableOp_221"
  input: "^save/AssignVariableOp_222"
  input: "^save/AssignVariableOp_223"
  input: "^save/AssignVariableOp_224"
  input: "^save/AssignVariableOp_225"
  input: "^save/AssignVariableOp_226"
  input: "^save/AssignVariableOp_227"
  input: "^save/AssignVariableOp_228"
  input: "^save/AssignVariableOp_229"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_230"
  input: "^save/AssignVariableOp_231"
  input: "^save/AssignVariableOp_232"
  input: "^save/AssignVariableOp_233"
  input: "^save/AssignVariableOp_234"
  input: "^save/AssignVariableOp_235"
  input: "^save/AssignVariableOp_236"
  input: "^save/AssignVariableOp_237"
  input: "^save/AssignVariableOp_238"
  input: "^save/AssignVariableOp_239"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_240"
  input: "^save/AssignVariableOp_241"
  input: "^save/AssignVariableOp_242"
  input: "^save/AssignVariableOp_243"
  input: "^save/AssignVariableOp_244"
  input: "^save/AssignVariableOp_245"
  input: "^save/AssignVariableOp_246"
  input: "^save/AssignVariableOp_247"
  input: "^save/AssignVariableOp_248"
  input: "^save/AssignVariableOp_249"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_250"
  input: "^save/AssignVariableOp_251"
  input: "^save/AssignVariableOp_252"
  input: "^save/AssignVariableOp_253"
  input: "^save/AssignVariableOp_254"
  input: "^save/AssignVariableOp_255"
  input: "^save/AssignVariableOp_256"
  input: "^save/AssignVariableOp_257"
  input: "^save/AssignVariableOp_258"
  input: "^save/AssignVariableOp_259"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_77"
  input: "^save/AssignVariableOp_78"
  input: "^save/AssignVariableOp_79"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_80"
  input: "^save/AssignVariableOp_81"
  input: "^save/AssignVariableOp_82"
  input: "^save/AssignVariableOp_83"
  input: "^save/AssignVariableOp_84"
  input: "^save/AssignVariableOp_85"
  input: "^save/AssignVariableOp_86"
  input: "^save/AssignVariableOp_87"
  input: "^save/AssignVariableOp_88"
  input: "^save/AssignVariableOp_89"
  input: "^save/AssignVariableOp_9"
  input: "^save/AssignVariableOp_90"
  input: "^save/AssignVariableOp_91"
  input: "^save/AssignVariableOp_92"
  input: "^save/AssignVariableOp_93"
  input: "^save/AssignVariableOp_94"
  input: "^save/AssignVariableOp_95"
  input: "^save/AssignVariableOp_96"
  input: "^save/AssignVariableOp_97"
  input: "^save/AssignVariableOp_98"
  input: "^save/AssignVariableOp_99"
}
node {
  name: "checkpoint_initializer/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer"
  op: "RestoreV2"
  input: "checkpoint_initializer/prefix"
  input: "checkpoint_initializer/tensor_names"
  input: "checkpoint_initializer/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "checkpoint_initializer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/beta"
  input: "Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_1/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/Conv/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_1"
  op: "RestoreV2"
  input: "checkpoint_initializer_1/prefix"
  input: "checkpoint_initializer_1/tensor_names"
  input: "checkpoint_initializer_1/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_1"
  op: "Identity"
  input: "checkpoint_initializer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma"
  input: "Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_2/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_2"
  op: "RestoreV2"
  input: "checkpoint_initializer_2/prefix"
  input: "checkpoint_initializer_2/tensor_names"
  input: "checkpoint_initializer_2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_2"
  op: "Identity"
  input: "checkpoint_initializer_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
  input: "Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_3/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_3/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_3/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_3"
  op: "RestoreV2"
  input: "checkpoint_initializer_3/prefix"
  input: "checkpoint_initializer_3/tensor_names"
  input: "checkpoint_initializer_3/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_3"
  op: "Identity"
  input: "checkpoint_initializer_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
  input: "Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_4/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_4/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/Conv/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_4/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_4"
  op: "RestoreV2"
  input: "checkpoint_initializer_4/prefix"
  input: "checkpoint_initializer_4/tensor_names"
  input: "checkpoint_initializer_4/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_4"
  op: "Identity"
  input: "checkpoint_initializer_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/weights"
  input: "Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_5/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_5/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_5/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_5"
  op: "RestoreV2"
  input: "checkpoint_initializer_5/prefix"
  input: "checkpoint_initializer_5/tensor_names"
  input: "checkpoint_initializer_5/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_5"
  op: "Identity"
  input: "checkpoint_initializer_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta"
  input: "Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_6/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_6/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_6/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_6"
  op: "RestoreV2"
  input: "checkpoint_initializer_6/prefix"
  input: "checkpoint_initializer_6/tensor_names"
  input: "checkpoint_initializer_6/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_6"
  op: "Identity"
  input: "checkpoint_initializer_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
  input: "Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_7/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_7/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_7/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_7"
  op: "RestoreV2"
  input: "checkpoint_initializer_7/prefix"
  input: "checkpoint_initializer_7/tensor_names"
  input: "checkpoint_initializer_7/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_7"
  op: "Identity"
  input: "checkpoint_initializer_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  input: "Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_8/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_8/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_8/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_8"
  op: "RestoreV2"
  input: "checkpoint_initializer_8/prefix"
  input: "checkpoint_initializer_8/tensor_names"
  input: "checkpoint_initializer_8/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_8"
  op: "Identity"
  input: "checkpoint_initializer_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  input: "Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_9/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_9/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/Conv_1/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_9/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_9"
  op: "RestoreV2"
  input: "checkpoint_initializer_9/prefix"
  input: "checkpoint_initializer_9/tensor_names"
  input: "checkpoint_initializer_9/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_9"
  op: "Identity"
  input: "checkpoint_initializer_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/weights"
  input: "Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_10/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_10/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_10/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_10"
  op: "RestoreV2"
  input: "checkpoint_initializer_10/prefix"
  input: "checkpoint_initializer_10/tensor_names"
  input: "checkpoint_initializer_10/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_10"
  op: "Identity"
  input: "checkpoint_initializer_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  input: "Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_11/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_11/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_11/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_11"
  op: "RestoreV2"
  input: "checkpoint_initializer_11/prefix"
  input: "checkpoint_initializer_11/tensor_names"
  input: "checkpoint_initializer_11/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_11"
  op: "Identity"
  input: "checkpoint_initializer_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  input: "Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_12/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_12/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_12/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_12"
  op: "RestoreV2"
  input: "checkpoint_initializer_12/prefix"
  input: "checkpoint_initializer_12/tensor_names"
  input: "checkpoint_initializer_12/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_12"
  op: "Identity"
  input: "checkpoint_initializer_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  input: "Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_13/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_13/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_13/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_13"
  op: "RestoreV2"
  input: "checkpoint_initializer_13/prefix"
  input: "checkpoint_initializer_13/tensor_names"
  input: "checkpoint_initializer_13/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_13"
  op: "Identity"
  input: "checkpoint_initializer_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  input: "Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_14/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_14/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_14/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_14"
  op: "RestoreV2"
  input: "checkpoint_initializer_14/prefix"
  input: "checkpoint_initializer_14/tensor_names"
  input: "checkpoint_initializer_14/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_14"
  op: "Identity"
  input: "checkpoint_initializer_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  input: "Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_15/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_15/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_15/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_15"
  op: "RestoreV2"
  input: "checkpoint_initializer_15/prefix"
  input: "checkpoint_initializer_15/tensor_names"
  input: "checkpoint_initializer_15/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_15"
  op: "Identity"
  input: "checkpoint_initializer_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  input: "Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_16/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_16/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_16/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_16"
  op: "RestoreV2"
  input: "checkpoint_initializer_16/prefix"
  input: "checkpoint_initializer_16/tensor_names"
  input: "checkpoint_initializer_16/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_16"
  op: "Identity"
  input: "checkpoint_initializer_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  input: "Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_17/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_17/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_17/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_17"
  op: "RestoreV2"
  input: "checkpoint_initializer_17/prefix"
  input: "checkpoint_initializer_17/tensor_names"
  input: "checkpoint_initializer_17/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_17"
  op: "Identity"
  input: "checkpoint_initializer_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  input: "Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_18/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_18/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_18/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_18"
  op: "RestoreV2"
  input: "checkpoint_initializer_18/prefix"
  input: "checkpoint_initializer_18/tensor_names"
  input: "checkpoint_initializer_18/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_18"
  op: "Identity"
  input: "checkpoint_initializer_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  input: "Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_19/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_19/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_19/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_19"
  op: "RestoreV2"
  input: "checkpoint_initializer_19/prefix"
  input: "checkpoint_initializer_19/tensor_names"
  input: "checkpoint_initializer_19/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_19"
  op: "Identity"
  input: "checkpoint_initializer_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
  input: "Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_20/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_20/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_20/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_20"
  op: "RestoreV2"
  input: "checkpoint_initializer_20/prefix"
  input: "checkpoint_initializer_20/tensor_names"
  input: "checkpoint_initializer_20/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_20"
  op: "Identity"
  input: "checkpoint_initializer_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  input: "Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_21/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_21/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_21/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_21"
  op: "RestoreV2"
  input: "checkpoint_initializer_21/prefix"
  input: "checkpoint_initializer_21/tensor_names"
  input: "checkpoint_initializer_21/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_21"
  op: "Identity"
  input: "checkpoint_initializer_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  input: "Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_22/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_22/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_22/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_22"
  op: "RestoreV2"
  input: "checkpoint_initializer_22/prefix"
  input: "checkpoint_initializer_22/tensor_names"
  input: "checkpoint_initializer_22/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_22"
  op: "Identity"
  input: "checkpoint_initializer_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  input: "Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_23/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_23/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_23/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_23"
  op: "RestoreV2"
  input: "checkpoint_initializer_23/prefix"
  input: "checkpoint_initializer_23/tensor_names"
  input: "checkpoint_initializer_23/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_23"
  op: "Identity"
  input: "checkpoint_initializer_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  input: "Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_24/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_24/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_24/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_24"
  op: "RestoreV2"
  input: "checkpoint_initializer_24/prefix"
  input: "checkpoint_initializer_24/tensor_names"
  input: "checkpoint_initializer_24/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_24"
  op: "Identity"
  input: "checkpoint_initializer_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  input: "Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_25/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_25/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_25/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_25"
  op: "RestoreV2"
  input: "checkpoint_initializer_25/prefix"
  input: "checkpoint_initializer_25/tensor_names"
  input: "checkpoint_initializer_25/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_25"
  op: "Identity"
  input: "checkpoint_initializer_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  input: "Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_26/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_26/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_26/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_26"
  op: "RestoreV2"
  input: "checkpoint_initializer_26/prefix"
  input: "checkpoint_initializer_26/tensor_names"
  input: "checkpoint_initializer_26/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_26"
  op: "Identity"
  input: "checkpoint_initializer_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  input: "Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_27/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_27/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_27/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_27"
  op: "RestoreV2"
  input: "checkpoint_initializer_27/prefix"
  input: "checkpoint_initializer_27/tensor_names"
  input: "checkpoint_initializer_27/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_27"
  op: "Identity"
  input: "checkpoint_initializer_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  input: "Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_28/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_28/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_28/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_28"
  op: "RestoreV2"
  input: "checkpoint_initializer_28/prefix"
  input: "checkpoint_initializer_28/tensor_names"
  input: "checkpoint_initializer_28/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_28"
  op: "Identity"
  input: "checkpoint_initializer_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  input: "Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_29/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_29/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_29/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_29"
  op: "RestoreV2"
  input: "checkpoint_initializer_29/prefix"
  input: "checkpoint_initializer_29/tensor_names"
  input: "checkpoint_initializer_29/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_29"
  op: "Identity"
  input: "checkpoint_initializer_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
  input: "Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_30/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_30/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_30/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_30"
  op: "RestoreV2"
  input: "checkpoint_initializer_30/prefix"
  input: "checkpoint_initializer_30/tensor_names"
  input: "checkpoint_initializer_30/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_30"
  op: "Identity"
  input: "checkpoint_initializer_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  input: "Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_31/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_31/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_31/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_31"
  op: "RestoreV2"
  input: "checkpoint_initializer_31/prefix"
  input: "checkpoint_initializer_31/tensor_names"
  input: "checkpoint_initializer_31/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_31"
  op: "Identity"
  input: "checkpoint_initializer_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  input: "Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_32/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_32/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_32/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_32"
  op: "RestoreV2"
  input: "checkpoint_initializer_32/prefix"
  input: "checkpoint_initializer_32/tensor_names"
  input: "checkpoint_initializer_32/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_32"
  op: "Identity"
  input: "checkpoint_initializer_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  input: "Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_33/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_33/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_33/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_33"
  op: "RestoreV2"
  input: "checkpoint_initializer_33/prefix"
  input: "checkpoint_initializer_33/tensor_names"
  input: "checkpoint_initializer_33/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_33"
  op: "Identity"
  input: "checkpoint_initializer_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  input: "Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_34/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_34/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_34/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_34"
  op: "RestoreV2"
  input: "checkpoint_initializer_34/prefix"
  input: "checkpoint_initializer_34/tensor_names"
  input: "checkpoint_initializer_34/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_34"
  op: "Identity"
  input: "checkpoint_initializer_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
  input: "Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_35/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_35/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_35/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_35"
  op: "RestoreV2"
  input: "checkpoint_initializer_35/prefix"
  input: "checkpoint_initializer_35/tensor_names"
  input: "checkpoint_initializer_35/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_35"
  op: "Identity"
  input: "checkpoint_initializer_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  input: "Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_36/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_36/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_36/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_36"
  op: "RestoreV2"
  input: "checkpoint_initializer_36/prefix"
  input: "checkpoint_initializer_36/tensor_names"
  input: "checkpoint_initializer_36/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_36"
  op: "Identity"
  input: "checkpoint_initializer_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  input: "Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_37/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_37/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_37/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_37"
  op: "RestoreV2"
  input: "checkpoint_initializer_37/prefix"
  input: "checkpoint_initializer_37/tensor_names"
  input: "checkpoint_initializer_37/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_37"
  op: "Identity"
  input: "checkpoint_initializer_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  input: "Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_38/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_38/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_38/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_38"
  op: "RestoreV2"
  input: "checkpoint_initializer_38/prefix"
  input: "checkpoint_initializer_38/tensor_names"
  input: "checkpoint_initializer_38/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_38"
  op: "Identity"
  input: "checkpoint_initializer_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  input: "Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_39/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_39/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_39/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_39"
  op: "RestoreV2"
  input: "checkpoint_initializer_39/prefix"
  input: "checkpoint_initializer_39/tensor_names"
  input: "checkpoint_initializer_39/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_39"
  op: "Identity"
  input: "checkpoint_initializer_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  input: "Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_40/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_40/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_40/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_40"
  op: "RestoreV2"
  input: "checkpoint_initializer_40/prefix"
  input: "checkpoint_initializer_40/tensor_names"
  input: "checkpoint_initializer_40/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_40"
  op: "Identity"
  input: "checkpoint_initializer_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  input: "Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_41/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_41/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_41/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_41"
  op: "RestoreV2"
  input: "checkpoint_initializer_41/prefix"
  input: "checkpoint_initializer_41/tensor_names"
  input: "checkpoint_initializer_41/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_41"
  op: "Identity"
  input: "checkpoint_initializer_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  input: "Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_42/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_42/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_42/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_42"
  op: "RestoreV2"
  input: "checkpoint_initializer_42/prefix"
  input: "checkpoint_initializer_42/tensor_names"
  input: "checkpoint_initializer_42/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_42"
  op: "Identity"
  input: "checkpoint_initializer_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  input: "Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_43/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_43/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_43/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_43"
  op: "RestoreV2"
  input: "checkpoint_initializer_43/prefix"
  input: "checkpoint_initializer_43/tensor_names"
  input: "checkpoint_initializer_43/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_43"
  op: "Identity"
  input: "checkpoint_initializer_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  input: "Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_44/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_44/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_44/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_44"
  op: "RestoreV2"
  input: "checkpoint_initializer_44/prefix"
  input: "checkpoint_initializer_44/tensor_names"
  input: "checkpoint_initializer_44/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_44"
  op: "Identity"
  input: "checkpoint_initializer_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
  input: "Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_45/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_45/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_45/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_45"
  op: "RestoreV2"
  input: "checkpoint_initializer_45/prefix"
  input: "checkpoint_initializer_45/tensor_names"
  input: "checkpoint_initializer_45/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_45"
  op: "Identity"
  input: "checkpoint_initializer_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  input: "Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_46/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_46/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_46/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_46"
  op: "RestoreV2"
  input: "checkpoint_initializer_46/prefix"
  input: "checkpoint_initializer_46/tensor_names"
  input: "checkpoint_initializer_46/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_46"
  op: "Identity"
  input: "checkpoint_initializer_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  input: "Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_47/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_47/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_47/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_47"
  op: "RestoreV2"
  input: "checkpoint_initializer_47/prefix"
  input: "checkpoint_initializer_47/tensor_names"
  input: "checkpoint_initializer_47/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_47"
  op: "Identity"
  input: "checkpoint_initializer_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  input: "Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_48/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_48/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_48/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_48"
  op: "RestoreV2"
  input: "checkpoint_initializer_48/prefix"
  input: "checkpoint_initializer_48/tensor_names"
  input: "checkpoint_initializer_48/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_48"
  op: "Identity"
  input: "checkpoint_initializer_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  input: "Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_49/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_49/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_49/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_49"
  op: "RestoreV2"
  input: "checkpoint_initializer_49/prefix"
  input: "checkpoint_initializer_49/tensor_names"
  input: "checkpoint_initializer_49/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_49"
  op: "Identity"
  input: "checkpoint_initializer_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
  input: "Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_50/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_50/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_50/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_50"
  op: "RestoreV2"
  input: "checkpoint_initializer_50/prefix"
  input: "checkpoint_initializer_50/tensor_names"
  input: "checkpoint_initializer_50/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_50"
  op: "Identity"
  input: "checkpoint_initializer_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  input: "Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_51/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_51/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_51/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_51"
  op: "RestoreV2"
  input: "checkpoint_initializer_51/prefix"
  input: "checkpoint_initializer_51/tensor_names"
  input: "checkpoint_initializer_51/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_51"
  op: "Identity"
  input: "checkpoint_initializer_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  input: "Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_52/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_52/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_52/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_52"
  op: "RestoreV2"
  input: "checkpoint_initializer_52/prefix"
  input: "checkpoint_initializer_52/tensor_names"
  input: "checkpoint_initializer_52/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_52"
  op: "Identity"
  input: "checkpoint_initializer_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  input: "Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_53/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_53/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_53/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_53"
  op: "RestoreV2"
  input: "checkpoint_initializer_53/prefix"
  input: "checkpoint_initializer_53/tensor_names"
  input: "checkpoint_initializer_53/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_53"
  op: "Identity"
  input: "checkpoint_initializer_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  input: "Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_54/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_54/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_54/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_54"
  op: "RestoreV2"
  input: "checkpoint_initializer_54/prefix"
  input: "checkpoint_initializer_54/tensor_names"
  input: "checkpoint_initializer_54/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_54"
  op: "Identity"
  input: "checkpoint_initializer_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  input: "Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_55/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_55/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_55/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_55"
  op: "RestoreV2"
  input: "checkpoint_initializer_55/prefix"
  input: "checkpoint_initializer_55/tensor_names"
  input: "checkpoint_initializer_55/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_55"
  op: "Identity"
  input: "checkpoint_initializer_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  input: "Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_56/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_56/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_56/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_56"
  op: "RestoreV2"
  input: "checkpoint_initializer_56/prefix"
  input: "checkpoint_initializer_56/tensor_names"
  input: "checkpoint_initializer_56/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_56"
  op: "Identity"
  input: "checkpoint_initializer_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  input: "Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_57/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_57/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_57/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_57"
  op: "RestoreV2"
  input: "checkpoint_initializer_57/prefix"
  input: "checkpoint_initializer_57/tensor_names"
  input: "checkpoint_initializer_57/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_57"
  op: "Identity"
  input: "checkpoint_initializer_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  input: "Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_58/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_58/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_58/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_58"
  op: "RestoreV2"
  input: "checkpoint_initializer_58/prefix"
  input: "checkpoint_initializer_58/tensor_names"
  input: "checkpoint_initializer_58/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_58"
  op: "Identity"
  input: "checkpoint_initializer_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  input: "Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_59/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_59/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_59/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_59"
  op: "RestoreV2"
  input: "checkpoint_initializer_59/prefix"
  input: "checkpoint_initializer_59/tensor_names"
  input: "checkpoint_initializer_59/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_59"
  op: "Identity"
  input: "checkpoint_initializer_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
  input: "Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_60/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_60/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_60/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_60"
  op: "RestoreV2"
  input: "checkpoint_initializer_60/prefix"
  input: "checkpoint_initializer_60/tensor_names"
  input: "checkpoint_initializer_60/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_60"
  op: "Identity"
  input: "checkpoint_initializer_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  input: "Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_61/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_61/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_61/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_61"
  op: "RestoreV2"
  input: "checkpoint_initializer_61/prefix"
  input: "checkpoint_initializer_61/tensor_names"
  input: "checkpoint_initializer_61/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_61"
  op: "Identity"
  input: "checkpoint_initializer_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  input: "Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_62/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_62/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_62/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_62"
  op: "RestoreV2"
  input: "checkpoint_initializer_62/prefix"
  input: "checkpoint_initializer_62/tensor_names"
  input: "checkpoint_initializer_62/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_62"
  op: "Identity"
  input: "checkpoint_initializer_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  input: "Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_63/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_63/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_63/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_63"
  op: "RestoreV2"
  input: "checkpoint_initializer_63/prefix"
  input: "checkpoint_initializer_63/tensor_names"
  input: "checkpoint_initializer_63/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_63"
  op: "Identity"
  input: "checkpoint_initializer_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  input: "Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_64/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_64/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_64/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_64"
  op: "RestoreV2"
  input: "checkpoint_initializer_64/prefix"
  input: "checkpoint_initializer_64/tensor_names"
  input: "checkpoint_initializer_64/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_64"
  op: "Identity"
  input: "checkpoint_initializer_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
  input: "Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_65/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_65/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_65/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_65"
  op: "RestoreV2"
  input: "checkpoint_initializer_65/prefix"
  input: "checkpoint_initializer_65/tensor_names"
  input: "checkpoint_initializer_65/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_65"
  op: "Identity"
  input: "checkpoint_initializer_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  input: "Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_66/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_66/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_66/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_66"
  op: "RestoreV2"
  input: "checkpoint_initializer_66/prefix"
  input: "checkpoint_initializer_66/tensor_names"
  input: "checkpoint_initializer_66/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_66"
  op: "Identity"
  input: "checkpoint_initializer_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  input: "Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_67/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_67/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_67/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_67"
  op: "RestoreV2"
  input: "checkpoint_initializer_67/prefix"
  input: "checkpoint_initializer_67/tensor_names"
  input: "checkpoint_initializer_67/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_67"
  op: "Identity"
  input: "checkpoint_initializer_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  input: "Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_68/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_68/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_68/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_68"
  op: "RestoreV2"
  input: "checkpoint_initializer_68/prefix"
  input: "checkpoint_initializer_68/tensor_names"
  input: "checkpoint_initializer_68/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_68"
  op: "Identity"
  input: "checkpoint_initializer_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  input: "Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_69/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_69/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_69/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_69"
  op: "RestoreV2"
  input: "checkpoint_initializer_69/prefix"
  input: "checkpoint_initializer_69/tensor_names"
  input: "checkpoint_initializer_69/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_69"
  op: "Identity"
  input: "checkpoint_initializer_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  input: "Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_70/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_70/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_70/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_70"
  op: "RestoreV2"
  input: "checkpoint_initializer_70/prefix"
  input: "checkpoint_initializer_70/tensor_names"
  input: "checkpoint_initializer_70/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_70"
  op: "Identity"
  input: "checkpoint_initializer_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  input: "Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_71/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_71/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_71/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_71"
  op: "RestoreV2"
  input: "checkpoint_initializer_71/prefix"
  input: "checkpoint_initializer_71/tensor_names"
  input: "checkpoint_initializer_71/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_71"
  op: "Identity"
  input: "checkpoint_initializer_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  input: "Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_72/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_72/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_72/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_72"
  op: "RestoreV2"
  input: "checkpoint_initializer_72/prefix"
  input: "checkpoint_initializer_72/tensor_names"
  input: "checkpoint_initializer_72/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_72"
  op: "Identity"
  input: "checkpoint_initializer_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  input: "Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_73/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_73/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_73/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_73"
  op: "RestoreV2"
  input: "checkpoint_initializer_73/prefix"
  input: "checkpoint_initializer_73/tensor_names"
  input: "checkpoint_initializer_73/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_73"
  op: "Identity"
  input: "checkpoint_initializer_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  input: "Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_74/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_74/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_74/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_74"
  op: "RestoreV2"
  input: "checkpoint_initializer_74/prefix"
  input: "checkpoint_initializer_74/tensor_names"
  input: "checkpoint_initializer_74/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_74"
  op: "Identity"
  input: "checkpoint_initializer_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
  input: "Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_75/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_75/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_75/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_75"
  op: "RestoreV2"
  input: "checkpoint_initializer_75/prefix"
  input: "checkpoint_initializer_75/tensor_names"
  input: "checkpoint_initializer_75/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_75"
  op: "Identity"
  input: "checkpoint_initializer_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  input: "Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_76/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_76/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_76/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_76"
  op: "RestoreV2"
  input: "checkpoint_initializer_76/prefix"
  input: "checkpoint_initializer_76/tensor_names"
  input: "checkpoint_initializer_76/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_76"
  op: "Identity"
  input: "checkpoint_initializer_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  input: "Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_77/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_77/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_77/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_77"
  op: "RestoreV2"
  input: "checkpoint_initializer_77/prefix"
  input: "checkpoint_initializer_77/tensor_names"
  input: "checkpoint_initializer_77/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_77"
  op: "Identity"
  input: "checkpoint_initializer_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  input: "Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_78/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_78/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_78/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_78"
  op: "RestoreV2"
  input: "checkpoint_initializer_78/prefix"
  input: "checkpoint_initializer_78/tensor_names"
  input: "checkpoint_initializer_78/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_78"
  op: "Identity"
  input: "checkpoint_initializer_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  input: "Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_79/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_79/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_79/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_79"
  op: "RestoreV2"
  input: "checkpoint_initializer_79/prefix"
  input: "checkpoint_initializer_79/tensor_names"
  input: "checkpoint_initializer_79/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_79"
  op: "Identity"
  input: "checkpoint_initializer_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
  input: "Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_80/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_80/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_80/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_80"
  op: "RestoreV2"
  input: "checkpoint_initializer_80/prefix"
  input: "checkpoint_initializer_80/tensor_names"
  input: "checkpoint_initializer_80/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_80"
  op: "Identity"
  input: "checkpoint_initializer_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  input: "Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_81/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_81/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_81/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_81"
  op: "RestoreV2"
  input: "checkpoint_initializer_81/prefix"
  input: "checkpoint_initializer_81/tensor_names"
  input: "checkpoint_initializer_81/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_81"
  op: "Identity"
  input: "checkpoint_initializer_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  input: "Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_82/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_82/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_82/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_82"
  op: "RestoreV2"
  input: "checkpoint_initializer_82/prefix"
  input: "checkpoint_initializer_82/tensor_names"
  input: "checkpoint_initializer_82/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_82"
  op: "Identity"
  input: "checkpoint_initializer_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  input: "Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_83/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_83/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_83/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_83"
  op: "RestoreV2"
  input: "checkpoint_initializer_83/prefix"
  input: "checkpoint_initializer_83/tensor_names"
  input: "checkpoint_initializer_83/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_83"
  op: "Identity"
  input: "checkpoint_initializer_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  input: "Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_84/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_84/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_84/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_84"
  op: "RestoreV2"
  input: "checkpoint_initializer_84/prefix"
  input: "checkpoint_initializer_84/tensor_names"
  input: "checkpoint_initializer_84/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_84"
  op: "Identity"
  input: "checkpoint_initializer_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  input: "Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_85/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_85/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_85/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_85"
  op: "RestoreV2"
  input: "checkpoint_initializer_85/prefix"
  input: "checkpoint_initializer_85/tensor_names"
  input: "checkpoint_initializer_85/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_85"
  op: "Identity"
  input: "checkpoint_initializer_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  input: "Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_86/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_86/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_86/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_86"
  op: "RestoreV2"
  input: "checkpoint_initializer_86/prefix"
  input: "checkpoint_initializer_86/tensor_names"
  input: "checkpoint_initializer_86/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_86"
  op: "Identity"
  input: "checkpoint_initializer_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  input: "Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_87/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_87/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_87/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_87"
  op: "RestoreV2"
  input: "checkpoint_initializer_87/prefix"
  input: "checkpoint_initializer_87/tensor_names"
  input: "checkpoint_initializer_87/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_87"
  op: "Identity"
  input: "checkpoint_initializer_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  input: "Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_88/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_88/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_88/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_88"
  op: "RestoreV2"
  input: "checkpoint_initializer_88/prefix"
  input: "checkpoint_initializer_88/tensor_names"
  input: "checkpoint_initializer_88/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_88"
  op: "Identity"
  input: "checkpoint_initializer_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  input: "Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_89/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_89/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_89/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_89"
  op: "RestoreV2"
  input: "checkpoint_initializer_89/prefix"
  input: "checkpoint_initializer_89/tensor_names"
  input: "checkpoint_initializer_89/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_89"
  op: "Identity"
  input: "checkpoint_initializer_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
  input: "Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_90/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_90/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_90/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_90"
  op: "RestoreV2"
  input: "checkpoint_initializer_90/prefix"
  input: "checkpoint_initializer_90/tensor_names"
  input: "checkpoint_initializer_90/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_90"
  op: "Identity"
  input: "checkpoint_initializer_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  input: "Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_91/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_91/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_91/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_91"
  op: "RestoreV2"
  input: "checkpoint_initializer_91/prefix"
  input: "checkpoint_initializer_91/tensor_names"
  input: "checkpoint_initializer_91/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_91"
  op: "Identity"
  input: "checkpoint_initializer_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  input: "Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_92/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_92/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_92/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_92"
  op: "RestoreV2"
  input: "checkpoint_initializer_92/prefix"
  input: "checkpoint_initializer_92/tensor_names"
  input: "checkpoint_initializer_92/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_92"
  op: "Identity"
  input: "checkpoint_initializer_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  input: "Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_93/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_93/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_93/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_93"
  op: "RestoreV2"
  input: "checkpoint_initializer_93/prefix"
  input: "checkpoint_initializer_93/tensor_names"
  input: "checkpoint_initializer_93/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_93"
  op: "Identity"
  input: "checkpoint_initializer_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  input: "Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_94/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_94/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_94/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_94"
  op: "RestoreV2"
  input: "checkpoint_initializer_94/prefix"
  input: "checkpoint_initializer_94/tensor_names"
  input: "checkpoint_initializer_94/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_94"
  op: "Identity"
  input: "checkpoint_initializer_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
  input: "Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_95/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_95/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_95/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_95"
  op: "RestoreV2"
  input: "checkpoint_initializer_95/prefix"
  input: "checkpoint_initializer_95/tensor_names"
  input: "checkpoint_initializer_95/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_95"
  op: "Identity"
  input: "checkpoint_initializer_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  input: "Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_96/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_96/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_96/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_96"
  op: "RestoreV2"
  input: "checkpoint_initializer_96/prefix"
  input: "checkpoint_initializer_96/tensor_names"
  input: "checkpoint_initializer_96/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_96"
  op: "Identity"
  input: "checkpoint_initializer_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  input: "Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_97/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_97/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_97/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_97"
  op: "RestoreV2"
  input: "checkpoint_initializer_97/prefix"
  input: "checkpoint_initializer_97/tensor_names"
  input: "checkpoint_initializer_97/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_97"
  op: "Identity"
  input: "checkpoint_initializer_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  input: "Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_98/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_98/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_98/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_98"
  op: "RestoreV2"
  input: "checkpoint_initializer_98/prefix"
  input: "checkpoint_initializer_98/tensor_names"
  input: "checkpoint_initializer_98/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_98"
  op: "Identity"
  input: "checkpoint_initializer_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  input: "Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_99/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_99/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_99/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_99"
  op: "RestoreV2"
  input: "checkpoint_initializer_99/prefix"
  input: "checkpoint_initializer_99/tensor_names"
  input: "checkpoint_initializer_99/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_99"
  op: "Identity"
  input: "checkpoint_initializer_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  input: "Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_100/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_100/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_100/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_100"
  op: "RestoreV2"
  input: "checkpoint_initializer_100/prefix"
  input: "checkpoint_initializer_100/tensor_names"
  input: "checkpoint_initializer_100/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_100"
  op: "Identity"
  input: "checkpoint_initializer_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  input: "Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_101/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_101/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_101/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_101"
  op: "RestoreV2"
  input: "checkpoint_initializer_101/prefix"
  input: "checkpoint_initializer_101/tensor_names"
  input: "checkpoint_initializer_101/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_101"
  op: "Identity"
  input: "checkpoint_initializer_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  input: "Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_102/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_102/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_102/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_102"
  op: "RestoreV2"
  input: "checkpoint_initializer_102/prefix"
  input: "checkpoint_initializer_102/tensor_names"
  input: "checkpoint_initializer_102/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_102"
  op: "Identity"
  input: "checkpoint_initializer_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  input: "Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_103/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_103/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_103/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_103"
  op: "RestoreV2"
  input: "checkpoint_initializer_103/prefix"
  input: "checkpoint_initializer_103/tensor_names"
  input: "checkpoint_initializer_103/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_103"
  op: "Identity"
  input: "checkpoint_initializer_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  input: "Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_104/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_104/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_104/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_104"
  op: "RestoreV2"
  input: "checkpoint_initializer_104/prefix"
  input: "checkpoint_initializer_104/tensor_names"
  input: "checkpoint_initializer_104/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_104"
  op: "Identity"
  input: "checkpoint_initializer_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
  input: "Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_105/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_105/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_105/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_105"
  op: "RestoreV2"
  input: "checkpoint_initializer_105/prefix"
  input: "checkpoint_initializer_105/tensor_names"
  input: "checkpoint_initializer_105/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_105"
  op: "Identity"
  input: "checkpoint_initializer_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  input: "Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_106/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_106/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_106/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_106"
  op: "RestoreV2"
  input: "checkpoint_initializer_106/prefix"
  input: "checkpoint_initializer_106/tensor_names"
  input: "checkpoint_initializer_106/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_106"
  op: "Identity"
  input: "checkpoint_initializer_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  input: "Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_107/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_107/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_107/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_107"
  op: "RestoreV2"
  input: "checkpoint_initializer_107/prefix"
  input: "checkpoint_initializer_107/tensor_names"
  input: "checkpoint_initializer_107/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_107"
  op: "Identity"
  input: "checkpoint_initializer_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  input: "Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_108/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_108/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_108/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_108"
  op: "RestoreV2"
  input: "checkpoint_initializer_108/prefix"
  input: "checkpoint_initializer_108/tensor_names"
  input: "checkpoint_initializer_108/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_108"
  op: "Identity"
  input: "checkpoint_initializer_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  input: "Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_109/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_109/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_109/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_109"
  op: "RestoreV2"
  input: "checkpoint_initializer_109/prefix"
  input: "checkpoint_initializer_109/tensor_names"
  input: "checkpoint_initializer_109/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_109"
  op: "Identity"
  input: "checkpoint_initializer_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
  input: "Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_110/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_110/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_110/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_110"
  op: "RestoreV2"
  input: "checkpoint_initializer_110/prefix"
  input: "checkpoint_initializer_110/tensor_names"
  input: "checkpoint_initializer_110/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_110"
  op: "Identity"
  input: "checkpoint_initializer_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  input: "Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_111/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_111/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_111/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_111"
  op: "RestoreV2"
  input: "checkpoint_initializer_111/prefix"
  input: "checkpoint_initializer_111/tensor_names"
  input: "checkpoint_initializer_111/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_111"
  op: "Identity"
  input: "checkpoint_initializer_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  input: "Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_112/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_112/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_112/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_112"
  op: "RestoreV2"
  input: "checkpoint_initializer_112/prefix"
  input: "checkpoint_initializer_112/tensor_names"
  input: "checkpoint_initializer_112/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_112"
  op: "Identity"
  input: "checkpoint_initializer_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  input: "Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_113/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_113/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_113/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_113"
  op: "RestoreV2"
  input: "checkpoint_initializer_113/prefix"
  input: "checkpoint_initializer_113/tensor_names"
  input: "checkpoint_initializer_113/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_113"
  op: "Identity"
  input: "checkpoint_initializer_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  input: "Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_114/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_114/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_114/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_114"
  op: "RestoreV2"
  input: "checkpoint_initializer_114/prefix"
  input: "checkpoint_initializer_114/tensor_names"
  input: "checkpoint_initializer_114/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_114"
  op: "Identity"
  input: "checkpoint_initializer_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  input: "Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_115/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_115/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_115/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_115"
  op: "RestoreV2"
  input: "checkpoint_initializer_115/prefix"
  input: "checkpoint_initializer_115/tensor_names"
  input: "checkpoint_initializer_115/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_115"
  op: "Identity"
  input: "checkpoint_initializer_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  input: "Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_116/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_116/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_116/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_116"
  op: "RestoreV2"
  input: "checkpoint_initializer_116/prefix"
  input: "checkpoint_initializer_116/tensor_names"
  input: "checkpoint_initializer_116/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_116"
  op: "Identity"
  input: "checkpoint_initializer_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  input: "Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_117/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_117/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_117/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_117"
  op: "RestoreV2"
  input: "checkpoint_initializer_117/prefix"
  input: "checkpoint_initializer_117/tensor_names"
  input: "checkpoint_initializer_117/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_117"
  op: "Identity"
  input: "checkpoint_initializer_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  input: "Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_118/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_118/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_118/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_118"
  op: "RestoreV2"
  input: "checkpoint_initializer_118/prefix"
  input: "checkpoint_initializer_118/tensor_names"
  input: "checkpoint_initializer_118/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_118"
  op: "Identity"
  input: "checkpoint_initializer_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  input: "Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_119/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_119/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_119/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_119"
  op: "RestoreV2"
  input: "checkpoint_initializer_119/prefix"
  input: "checkpoint_initializer_119/tensor_names"
  input: "checkpoint_initializer_119/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_119"
  op: "Identity"
  input: "checkpoint_initializer_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
  input: "Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_120/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_120/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_120/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_120"
  op: "RestoreV2"
  input: "checkpoint_initializer_120/prefix"
  input: "checkpoint_initializer_120/tensor_names"
  input: "checkpoint_initializer_120/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_120"
  op: "Identity"
  input: "checkpoint_initializer_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  input: "Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_121/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_121/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_121/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_121"
  op: "RestoreV2"
  input: "checkpoint_initializer_121/prefix"
  input: "checkpoint_initializer_121/tensor_names"
  input: "checkpoint_initializer_121/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_121"
  op: "Identity"
  input: "checkpoint_initializer_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  input: "Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_122/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_122/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_122/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_122"
  op: "RestoreV2"
  input: "checkpoint_initializer_122/prefix"
  input: "checkpoint_initializer_122/tensor_names"
  input: "checkpoint_initializer_122/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_122"
  op: "Identity"
  input: "checkpoint_initializer_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  input: "Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_123/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_123/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_123/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_123"
  op: "RestoreV2"
  input: "checkpoint_initializer_123/prefix"
  input: "checkpoint_initializer_123/tensor_names"
  input: "checkpoint_initializer_123/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_123"
  op: "Identity"
  input: "checkpoint_initializer_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  input: "Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_124/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_124/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_124/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_124"
  op: "RestoreV2"
  input: "checkpoint_initializer_124/prefix"
  input: "checkpoint_initializer_124/tensor_names"
  input: "checkpoint_initializer_124/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_124"
  op: "Identity"
  input: "checkpoint_initializer_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
  input: "Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_125/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_125/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_125/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_125"
  op: "RestoreV2"
  input: "checkpoint_initializer_125/prefix"
  input: "checkpoint_initializer_125/tensor_names"
  input: "checkpoint_initializer_125/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_125"
  op: "Identity"
  input: "checkpoint_initializer_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  input: "Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_126/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_126/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_126/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_126"
  op: "RestoreV2"
  input: "checkpoint_initializer_126/prefix"
  input: "checkpoint_initializer_126/tensor_names"
  input: "checkpoint_initializer_126/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_126"
  op: "Identity"
  input: "checkpoint_initializer_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  input: "Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_127/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_127/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_127/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_127"
  op: "RestoreV2"
  input: "checkpoint_initializer_127/prefix"
  input: "checkpoint_initializer_127/tensor_names"
  input: "checkpoint_initializer_127/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_127"
  op: "Identity"
  input: "checkpoint_initializer_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  input: "Identity_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_128/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_128/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_128/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_128"
  op: "RestoreV2"
  input: "checkpoint_initializer_128/prefix"
  input: "checkpoint_initializer_128/tensor_names"
  input: "checkpoint_initializer_128/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_128"
  op: "Identity"
  input: "checkpoint_initializer_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  input: "Identity_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_129/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_129/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_129/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_129"
  op: "RestoreV2"
  input: "checkpoint_initializer_129/prefix"
  input: "checkpoint_initializer_129/tensor_names"
  input: "checkpoint_initializer_129/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_129"
  op: "Identity"
  input: "checkpoint_initializer_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  input: "Identity_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_130/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_130/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_130/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_130"
  op: "RestoreV2"
  input: "checkpoint_initializer_130/prefix"
  input: "checkpoint_initializer_130/tensor_names"
  input: "checkpoint_initializer_130/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_130"
  op: "Identity"
  input: "checkpoint_initializer_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  input: "Identity_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_131/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_131/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_131/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_131"
  op: "RestoreV2"
  input: "checkpoint_initializer_131/prefix"
  input: "checkpoint_initializer_131/tensor_names"
  input: "checkpoint_initializer_131/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_131"
  op: "Identity"
  input: "checkpoint_initializer_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  input: "Identity_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_132/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_132/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_132/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_132"
  op: "RestoreV2"
  input: "checkpoint_initializer_132/prefix"
  input: "checkpoint_initializer_132/tensor_names"
  input: "checkpoint_initializer_132/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_132"
  op: "Identity"
  input: "checkpoint_initializer_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  input: "Identity_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_133/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_133/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_133/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_133"
  op: "RestoreV2"
  input: "checkpoint_initializer_133/prefix"
  input: "checkpoint_initializer_133/tensor_names"
  input: "checkpoint_initializer_133/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_133"
  op: "Identity"
  input: "checkpoint_initializer_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  input: "Identity_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_134/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_134/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_134/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_134"
  op: "RestoreV2"
  input: "checkpoint_initializer_134/prefix"
  input: "checkpoint_initializer_134/tensor_names"
  input: "checkpoint_initializer_134/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_134"
  op: "Identity"
  input: "checkpoint_initializer_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
  input: "Identity_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_135/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_135/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_135/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_135"
  op: "RestoreV2"
  input: "checkpoint_initializer_135/prefix"
  input: "checkpoint_initializer_135/tensor_names"
  input: "checkpoint_initializer_135/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_135"
  op: "Identity"
  input: "checkpoint_initializer_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  input: "Identity_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_136/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_136/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_136/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_136"
  op: "RestoreV2"
  input: "checkpoint_initializer_136/prefix"
  input: "checkpoint_initializer_136/tensor_names"
  input: "checkpoint_initializer_136/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_136"
  op: "Identity"
  input: "checkpoint_initializer_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  input: "Identity_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_137/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_137/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_137/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_137"
  op: "RestoreV2"
  input: "checkpoint_initializer_137/prefix"
  input: "checkpoint_initializer_137/tensor_names"
  input: "checkpoint_initializer_137/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_137"
  op: "Identity"
  input: "checkpoint_initializer_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  input: "Identity_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_138/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_138/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_138/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_138"
  op: "RestoreV2"
  input: "checkpoint_initializer_138/prefix"
  input: "checkpoint_initializer_138/tensor_names"
  input: "checkpoint_initializer_138/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_138"
  op: "Identity"
  input: "checkpoint_initializer_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  input: "Identity_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_139/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_139/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_139/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_139"
  op: "RestoreV2"
  input: "checkpoint_initializer_139/prefix"
  input: "checkpoint_initializer_139/tensor_names"
  input: "checkpoint_initializer_139/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_139"
  op: "Identity"
  input: "checkpoint_initializer_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
  input: "Identity_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_140/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_140/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_140/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_140"
  op: "RestoreV2"
  input: "checkpoint_initializer_140/prefix"
  input: "checkpoint_initializer_140/tensor_names"
  input: "checkpoint_initializer_140/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_140"
  op: "Identity"
  input: "checkpoint_initializer_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  input: "Identity_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_141/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_141/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_141/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_141"
  op: "RestoreV2"
  input: "checkpoint_initializer_141/prefix"
  input: "checkpoint_initializer_141/tensor_names"
  input: "checkpoint_initializer_141/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_141"
  op: "Identity"
  input: "checkpoint_initializer_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  input: "Identity_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_142/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_142/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_142/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_142"
  op: "RestoreV2"
  input: "checkpoint_initializer_142/prefix"
  input: "checkpoint_initializer_142/tensor_names"
  input: "checkpoint_initializer_142/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_142"
  op: "Identity"
  input: "checkpoint_initializer_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  input: "Identity_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_143/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_143/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_143/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_143"
  op: "RestoreV2"
  input: "checkpoint_initializer_143/prefix"
  input: "checkpoint_initializer_143/tensor_names"
  input: "checkpoint_initializer_143/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_143"
  op: "Identity"
  input: "checkpoint_initializer_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  input: "Identity_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_144/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_144/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_144/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_144"
  op: "RestoreV2"
  input: "checkpoint_initializer_144/prefix"
  input: "checkpoint_initializer_144/tensor_names"
  input: "checkpoint_initializer_144/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_144"
  op: "Identity"
  input: "checkpoint_initializer_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  input: "Identity_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_145/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_145/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_145/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_145"
  op: "RestoreV2"
  input: "checkpoint_initializer_145/prefix"
  input: "checkpoint_initializer_145/tensor_names"
  input: "checkpoint_initializer_145/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_145"
  op: "Identity"
  input: "checkpoint_initializer_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  input: "Identity_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_146/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_146/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_146/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_146"
  op: "RestoreV2"
  input: "checkpoint_initializer_146/prefix"
  input: "checkpoint_initializer_146/tensor_names"
  input: "checkpoint_initializer_146/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_146"
  op: "Identity"
  input: "checkpoint_initializer_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  input: "Identity_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_147/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_147/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_147/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_147"
  op: "RestoreV2"
  input: "checkpoint_initializer_147/prefix"
  input: "checkpoint_initializer_147/tensor_names"
  input: "checkpoint_initializer_147/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_147"
  op: "Identity"
  input: "checkpoint_initializer_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  input: "Identity_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_148/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_148/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_148/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_148"
  op: "RestoreV2"
  input: "checkpoint_initializer_148/prefix"
  input: "checkpoint_initializer_148/tensor_names"
  input: "checkpoint_initializer_148/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_148"
  op: "Identity"
  input: "checkpoint_initializer_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  input: "Identity_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_149/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_149/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_149/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_149"
  op: "RestoreV2"
  input: "checkpoint_initializer_149/prefix"
  input: "checkpoint_initializer_149/tensor_names"
  input: "checkpoint_initializer_149/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_149"
  op: "Identity"
  input: "checkpoint_initializer_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
  input: "Identity_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_150/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_150/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_150/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_150"
  op: "RestoreV2"
  input: "checkpoint_initializer_150/prefix"
  input: "checkpoint_initializer_150/tensor_names"
  input: "checkpoint_initializer_150/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_150"
  op: "Identity"
  input: "checkpoint_initializer_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  input: "Identity_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_151/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_151/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_151/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_151"
  op: "RestoreV2"
  input: "checkpoint_initializer_151/prefix"
  input: "checkpoint_initializer_151/tensor_names"
  input: "checkpoint_initializer_151/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_151"
  op: "Identity"
  input: "checkpoint_initializer_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  input: "Identity_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_152/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_152/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_152/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_152"
  op: "RestoreV2"
  input: "checkpoint_initializer_152/prefix"
  input: "checkpoint_initializer_152/tensor_names"
  input: "checkpoint_initializer_152/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_152"
  op: "Identity"
  input: "checkpoint_initializer_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  input: "Identity_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_153/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_153/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_153/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_153"
  op: "RestoreV2"
  input: "checkpoint_initializer_153/prefix"
  input: "checkpoint_initializer_153/tensor_names"
  input: "checkpoint_initializer_153/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_153"
  op: "Identity"
  input: "checkpoint_initializer_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  input: "Identity_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_154/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_154/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_154/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_154"
  op: "RestoreV2"
  input: "checkpoint_initializer_154/prefix"
  input: "checkpoint_initializer_154/tensor_names"
  input: "checkpoint_initializer_154/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_154"
  op: "Identity"
  input: "checkpoint_initializer_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
  input: "Identity_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_155/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_155/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_155/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_155"
  op: "RestoreV2"
  input: "checkpoint_initializer_155/prefix"
  input: "checkpoint_initializer_155/tensor_names"
  input: "checkpoint_initializer_155/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_155"
  op: "Identity"
  input: "checkpoint_initializer_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  input: "Identity_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_156/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_156/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_156/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_156"
  op: "RestoreV2"
  input: "checkpoint_initializer_156/prefix"
  input: "checkpoint_initializer_156/tensor_names"
  input: "checkpoint_initializer_156/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_156"
  op: "Identity"
  input: "checkpoint_initializer_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  input: "Identity_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_157/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_157/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_157/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_157"
  op: "RestoreV2"
  input: "checkpoint_initializer_157/prefix"
  input: "checkpoint_initializer_157/tensor_names"
  input: "checkpoint_initializer_157/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_157"
  op: "Identity"
  input: "checkpoint_initializer_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  input: "Identity_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_158/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_158/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_158/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_158"
  op: "RestoreV2"
  input: "checkpoint_initializer_158/prefix"
  input: "checkpoint_initializer_158/tensor_names"
  input: "checkpoint_initializer_158/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_158"
  op: "Identity"
  input: "checkpoint_initializer_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  input: "Identity_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_159/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_159/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_159/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_159"
  op: "RestoreV2"
  input: "checkpoint_initializer_159/prefix"
  input: "checkpoint_initializer_159/tensor_names"
  input: "checkpoint_initializer_159/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_159"
  op: "Identity"
  input: "checkpoint_initializer_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  input: "Identity_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_160/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_160/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_160/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_160"
  op: "RestoreV2"
  input: "checkpoint_initializer_160/prefix"
  input: "checkpoint_initializer_160/tensor_names"
  input: "checkpoint_initializer_160/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_160"
  op: "Identity"
  input: "checkpoint_initializer_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  input: "Identity_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_161/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_161/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_161/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_161"
  op: "RestoreV2"
  input: "checkpoint_initializer_161/prefix"
  input: "checkpoint_initializer_161/tensor_names"
  input: "checkpoint_initializer_161/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_161"
  op: "Identity"
  input: "checkpoint_initializer_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  input: "Identity_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_162/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_162/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_162/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_162"
  op: "RestoreV2"
  input: "checkpoint_initializer_162/prefix"
  input: "checkpoint_initializer_162/tensor_names"
  input: "checkpoint_initializer_162/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_162"
  op: "Identity"
  input: "checkpoint_initializer_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  input: "Identity_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_163/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_163/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_163/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_163"
  op: "RestoreV2"
  input: "checkpoint_initializer_163/prefix"
  input: "checkpoint_initializer_163/tensor_names"
  input: "checkpoint_initializer_163/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_163"
  op: "Identity"
  input: "checkpoint_initializer_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  input: "Identity_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_164/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_164/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_164/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_164"
  op: "RestoreV2"
  input: "checkpoint_initializer_164/prefix"
  input: "checkpoint_initializer_164/tensor_names"
  input: "checkpoint_initializer_164/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_164"
  op: "Identity"
  input: "checkpoint_initializer_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
  input: "Identity_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_165/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_165/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_165/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_165"
  op: "RestoreV2"
  input: "checkpoint_initializer_165/prefix"
  input: "checkpoint_initializer_165/tensor_names"
  input: "checkpoint_initializer_165/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_165"
  op: "Identity"
  input: "checkpoint_initializer_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  input: "Identity_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_166/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_166/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_166/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_166"
  op: "RestoreV2"
  input: "checkpoint_initializer_166/prefix"
  input: "checkpoint_initializer_166/tensor_names"
  input: "checkpoint_initializer_166/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_166"
  op: "Identity"
  input: "checkpoint_initializer_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  input: "Identity_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_167/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_167/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_167/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_167"
  op: "RestoreV2"
  input: "checkpoint_initializer_167/prefix"
  input: "checkpoint_initializer_167/tensor_names"
  input: "checkpoint_initializer_167/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_167"
  op: "Identity"
  input: "checkpoint_initializer_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  input: "Identity_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_168/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_168/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_168/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_168"
  op: "RestoreV2"
  input: "checkpoint_initializer_168/prefix"
  input: "checkpoint_initializer_168/tensor_names"
  input: "checkpoint_initializer_168/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_168"
  op: "Identity"
  input: "checkpoint_initializer_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  input: "Identity_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_169/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_169/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_169/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_169"
  op: "RestoreV2"
  input: "checkpoint_initializer_169/prefix"
  input: "checkpoint_initializer_169/tensor_names"
  input: "checkpoint_initializer_169/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_169"
  op: "Identity"
  input: "checkpoint_initializer_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
  input: "Identity_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_170/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_170/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_170/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_170"
  op: "RestoreV2"
  input: "checkpoint_initializer_170/prefix"
  input: "checkpoint_initializer_170/tensor_names"
  input: "checkpoint_initializer_170/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_170"
  op: "Identity"
  input: "checkpoint_initializer_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  input: "Identity_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_171/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_171/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_171/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_171"
  op: "RestoreV2"
  input: "checkpoint_initializer_171/prefix"
  input: "checkpoint_initializer_171/tensor_names"
  input: "checkpoint_initializer_171/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_171"
  op: "Identity"
  input: "checkpoint_initializer_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  input: "Identity_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_172/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_172/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_172/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_172"
  op: "RestoreV2"
  input: "checkpoint_initializer_172/prefix"
  input: "checkpoint_initializer_172/tensor_names"
  input: "checkpoint_initializer_172/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_172"
  op: "Identity"
  input: "checkpoint_initializer_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  input: "Identity_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_173/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_173/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_173/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_173"
  op: "RestoreV2"
  input: "checkpoint_initializer_173/prefix"
  input: "checkpoint_initializer_173/tensor_names"
  input: "checkpoint_initializer_173/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_173"
  op: "Identity"
  input: "checkpoint_initializer_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  input: "Identity_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_174/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_174/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_174/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_174"
  op: "RestoreV2"
  input: "checkpoint_initializer_174/prefix"
  input: "checkpoint_initializer_174/tensor_names"
  input: "checkpoint_initializer_174/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_174"
  op: "Identity"
  input: "checkpoint_initializer_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  input: "Identity_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_175/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_175/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_175/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_175"
  op: "RestoreV2"
  input: "checkpoint_initializer_175/prefix"
  input: "checkpoint_initializer_175/tensor_names"
  input: "checkpoint_initializer_175/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_175"
  op: "Identity"
  input: "checkpoint_initializer_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  input: "Identity_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_176/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_176/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_176/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_176"
  op: "RestoreV2"
  input: "checkpoint_initializer_176/prefix"
  input: "checkpoint_initializer_176/tensor_names"
  input: "checkpoint_initializer_176/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_176"
  op: "Identity"
  input: "checkpoint_initializer_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  input: "Identity_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_177/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_177/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_177/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_177"
  op: "RestoreV2"
  input: "checkpoint_initializer_177/prefix"
  input: "checkpoint_initializer_177/tensor_names"
  input: "checkpoint_initializer_177/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_177"
  op: "Identity"
  input: "checkpoint_initializer_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  input: "Identity_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_178/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_178/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_178/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_178"
  op: "RestoreV2"
  input: "checkpoint_initializer_178/prefix"
  input: "checkpoint_initializer_178/tensor_names"
  input: "checkpoint_initializer_178/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_178"
  op: "Identity"
  input: "checkpoint_initializer_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  input: "Identity_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_179/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_179/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_179/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_179"
  op: "RestoreV2"
  input: "checkpoint_initializer_179/prefix"
  input: "checkpoint_initializer_179/tensor_names"
  input: "checkpoint_initializer_179/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_179"
  op: "Identity"
  input: "checkpoint_initializer_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
  input: "Identity_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_180/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_180/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_180/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_180"
  op: "RestoreV2"
  input: "checkpoint_initializer_180/prefix"
  input: "checkpoint_initializer_180/tensor_names"
  input: "checkpoint_initializer_180/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_180"
  op: "Identity"
  input: "checkpoint_initializer_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  input: "Identity_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_181/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_181/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_181/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_181"
  op: "RestoreV2"
  input: "checkpoint_initializer_181/prefix"
  input: "checkpoint_initializer_181/tensor_names"
  input: "checkpoint_initializer_181/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_181"
  op: "Identity"
  input: "checkpoint_initializer_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  input: "Identity_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_182/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_182/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_182/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_182"
  op: "RestoreV2"
  input: "checkpoint_initializer_182/prefix"
  input: "checkpoint_initializer_182/tensor_names"
  input: "checkpoint_initializer_182/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_182"
  op: "Identity"
  input: "checkpoint_initializer_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  input: "Identity_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_183/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_183/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_183/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_183"
  op: "RestoreV2"
  input: "checkpoint_initializer_183/prefix"
  input: "checkpoint_initializer_183/tensor_names"
  input: "checkpoint_initializer_183/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_183"
  op: "Identity"
  input: "checkpoint_initializer_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  input: "Identity_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_184/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_184/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_184/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_184"
  op: "RestoreV2"
  input: "checkpoint_initializer_184/prefix"
  input: "checkpoint_initializer_184/tensor_names"
  input: "checkpoint_initializer_184/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_184"
  op: "Identity"
  input: "checkpoint_initializer_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
  input: "Identity_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_185/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_185/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_185/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_185"
  op: "RestoreV2"
  input: "checkpoint_initializer_185/prefix"
  input: "checkpoint_initializer_185/tensor_names"
  input: "checkpoint_initializer_185/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_185"
  op: "Identity"
  input: "checkpoint_initializer_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  input: "Identity_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_186/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_186/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_186/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_186"
  op: "RestoreV2"
  input: "checkpoint_initializer_186/prefix"
  input: "checkpoint_initializer_186/tensor_names"
  input: "checkpoint_initializer_186/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_186"
  op: "Identity"
  input: "checkpoint_initializer_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  input: "Identity_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_187/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_187/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_187/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_187"
  op: "RestoreV2"
  input: "checkpoint_initializer_187/prefix"
  input: "checkpoint_initializer_187/tensor_names"
  input: "checkpoint_initializer_187/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_187"
  op: "Identity"
  input: "checkpoint_initializer_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  input: "Identity_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_188/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_188/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_188/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_188"
  op: "RestoreV2"
  input: "checkpoint_initializer_188/prefix"
  input: "checkpoint_initializer_188/tensor_names"
  input: "checkpoint_initializer_188/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_188"
  op: "Identity"
  input: "checkpoint_initializer_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  input: "Identity_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_189/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_189/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_189/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_189"
  op: "RestoreV2"
  input: "checkpoint_initializer_189/prefix"
  input: "checkpoint_initializer_189/tensor_names"
  input: "checkpoint_initializer_189/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_189"
  op: "Identity"
  input: "checkpoint_initializer_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  input: "Identity_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_190/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_190/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_190/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_190"
  op: "RestoreV2"
  input: "checkpoint_initializer_190/prefix"
  input: "checkpoint_initializer_190/tensor_names"
  input: "checkpoint_initializer_190/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_190"
  op: "Identity"
  input: "checkpoint_initializer_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  input: "Identity_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_191/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_191/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_191/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_191"
  op: "RestoreV2"
  input: "checkpoint_initializer_191/prefix"
  input: "checkpoint_initializer_191/tensor_names"
  input: "checkpoint_initializer_191/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_191"
  op: "Identity"
  input: "checkpoint_initializer_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  input: "Identity_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_192/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_192/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_192/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_192"
  op: "RestoreV2"
  input: "checkpoint_initializer_192/prefix"
  input: "checkpoint_initializer_192/tensor_names"
  input: "checkpoint_initializer_192/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_192"
  op: "Identity"
  input: "checkpoint_initializer_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  input: "Identity_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_193/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_193/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_193/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_193"
  op: "RestoreV2"
  input: "checkpoint_initializer_193/prefix"
  input: "checkpoint_initializer_193/tensor_names"
  input: "checkpoint_initializer_193/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_193"
  op: "Identity"
  input: "checkpoint_initializer_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  input: "Identity_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_194/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_194/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_194/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_194"
  op: "RestoreV2"
  input: "checkpoint_initializer_194/prefix"
  input: "checkpoint_initializer_194/tensor_names"
  input: "checkpoint_initializer_194/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_194"
  op: "Identity"
  input: "checkpoint_initializer_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
  input: "Identity_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_195/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_195/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_195/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_195"
  op: "RestoreV2"
  input: "checkpoint_initializer_195/prefix"
  input: "checkpoint_initializer_195/tensor_names"
  input: "checkpoint_initializer_195/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_195"
  op: "Identity"
  input: "checkpoint_initializer_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  input: "Identity_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_196/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_196/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_196/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_196"
  op: "RestoreV2"
  input: "checkpoint_initializer_196/prefix"
  input: "checkpoint_initializer_196/tensor_names"
  input: "checkpoint_initializer_196/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_196"
  op: "Identity"
  input: "checkpoint_initializer_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  input: "Identity_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_197/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_197/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_197/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_197"
  op: "RestoreV2"
  input: "checkpoint_initializer_197/prefix"
  input: "checkpoint_initializer_197/tensor_names"
  input: "checkpoint_initializer_197/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_197"
  op: "Identity"
  input: "checkpoint_initializer_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  input: "Identity_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_198/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_198/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_198/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_198"
  op: "RestoreV2"
  input: "checkpoint_initializer_198/prefix"
  input: "checkpoint_initializer_198/tensor_names"
  input: "checkpoint_initializer_198/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_198"
  op: "Identity"
  input: "checkpoint_initializer_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  input: "Identity_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_199/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_199/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_199/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_199"
  op: "RestoreV2"
  input: "checkpoint_initializer_199/prefix"
  input: "checkpoint_initializer_199/tensor_names"
  input: "checkpoint_initializer_199/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_199"
  op: "Identity"
  input: "checkpoint_initializer_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_199"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
  input: "Identity_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_200/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_200/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_200/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_200"
  op: "RestoreV2"
  input: "checkpoint_initializer_200/prefix"
  input: "checkpoint_initializer_200/tensor_names"
  input: "checkpoint_initializer_200/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_200"
  op: "Identity"
  input: "checkpoint_initializer_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_200"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  input: "Identity_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_201/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_201/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_201/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_201"
  op: "RestoreV2"
  input: "checkpoint_initializer_201/prefix"
  input: "checkpoint_initializer_201/tensor_names"
  input: "checkpoint_initializer_201/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_201"
  op: "Identity"
  input: "checkpoint_initializer_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_201"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  input: "Identity_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_202/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_202/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_202/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_202"
  op: "RestoreV2"
  input: "checkpoint_initializer_202/prefix"
  input: "checkpoint_initializer_202/tensor_names"
  input: "checkpoint_initializer_202/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_202"
  op: "Identity"
  input: "checkpoint_initializer_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_202"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  input: "Identity_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_203/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_203/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_203/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_203"
  op: "RestoreV2"
  input: "checkpoint_initializer_203/prefix"
  input: "checkpoint_initializer_203/tensor_names"
  input: "checkpoint_initializer_203/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_203"
  op: "Identity"
  input: "checkpoint_initializer_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_203"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  input: "Identity_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_204/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_204/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_204/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_204"
  op: "RestoreV2"
  input: "checkpoint_initializer_204/prefix"
  input: "checkpoint_initializer_204/tensor_names"
  input: "checkpoint_initializer_204/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_204"
  op: "Identity"
  input: "checkpoint_initializer_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_204"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  input: "Identity_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_205/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_205/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_205/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_205"
  op: "RestoreV2"
  input: "checkpoint_initializer_205/prefix"
  input: "checkpoint_initializer_205/tensor_names"
  input: "checkpoint_initializer_205/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_205"
  op: "Identity"
  input: "checkpoint_initializer_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_205"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  input: "Identity_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_206/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_206/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_206/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_206"
  op: "RestoreV2"
  input: "checkpoint_initializer_206/prefix"
  input: "checkpoint_initializer_206/tensor_names"
  input: "checkpoint_initializer_206/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_206"
  op: "Identity"
  input: "checkpoint_initializer_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_206"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  input: "Identity_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_207/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_207/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_207/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_207"
  op: "RestoreV2"
  input: "checkpoint_initializer_207/prefix"
  input: "checkpoint_initializer_207/tensor_names"
  input: "checkpoint_initializer_207/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_207"
  op: "Identity"
  input: "checkpoint_initializer_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_207"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  input: "Identity_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_208/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_208/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_208/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_208"
  op: "RestoreV2"
  input: "checkpoint_initializer_208/prefix"
  input: "checkpoint_initializer_208/tensor_names"
  input: "checkpoint_initializer_208/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_208"
  op: "Identity"
  input: "checkpoint_initializer_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_208"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  input: "Identity_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_209/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_209/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_209/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_209"
  op: "RestoreV2"
  input: "checkpoint_initializer_209/prefix"
  input: "checkpoint_initializer_209/tensor_names"
  input: "checkpoint_initializer_209/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_209"
  op: "Identity"
  input: "checkpoint_initializer_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_209"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
  input: "Identity_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_210/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_210/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_210/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_210"
  op: "RestoreV2"
  input: "checkpoint_initializer_210/prefix"
  input: "checkpoint_initializer_210/tensor_names"
  input: "checkpoint_initializer_210/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_210"
  op: "Identity"
  input: "checkpoint_initializer_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_210"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  input: "Identity_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_211/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_211/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_211/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_211"
  op: "RestoreV2"
  input: "checkpoint_initializer_211/prefix"
  input: "checkpoint_initializer_211/tensor_names"
  input: "checkpoint_initializer_211/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_211"
  op: "Identity"
  input: "checkpoint_initializer_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_211"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  input: "Identity_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_212/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_212/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_212/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_212"
  op: "RestoreV2"
  input: "checkpoint_initializer_212/prefix"
  input: "checkpoint_initializer_212/tensor_names"
  input: "checkpoint_initializer_212/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_212"
  op: "Identity"
  input: "checkpoint_initializer_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_212"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  input: "Identity_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_213/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_213/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_213/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_213"
  op: "RestoreV2"
  input: "checkpoint_initializer_213/prefix"
  input: "checkpoint_initializer_213/tensor_names"
  input: "checkpoint_initializer_213/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_213"
  op: "Identity"
  input: "checkpoint_initializer_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_213"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  input: "Identity_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_214/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_214/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_214/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_214"
  op: "RestoreV2"
  input: "checkpoint_initializer_214/prefix"
  input: "checkpoint_initializer_214/tensor_names"
  input: "checkpoint_initializer_214/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_214"
  op: "Identity"
  input: "checkpoint_initializer_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_214"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
  input: "Identity_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_215/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_215/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_215/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_215"
  op: "RestoreV2"
  input: "checkpoint_initializer_215/prefix"
  input: "checkpoint_initializer_215/tensor_names"
  input: "checkpoint_initializer_215/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_215"
  op: "Identity"
  input: "checkpoint_initializer_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_215"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  input: "Identity_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_216/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_216/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_216/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_216"
  op: "RestoreV2"
  input: "checkpoint_initializer_216/prefix"
  input: "checkpoint_initializer_216/tensor_names"
  input: "checkpoint_initializer_216/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_216"
  op: "Identity"
  input: "checkpoint_initializer_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_216"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  input: "Identity_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_217/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_217/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_217/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_217"
  op: "RestoreV2"
  input: "checkpoint_initializer_217/prefix"
  input: "checkpoint_initializer_217/tensor_names"
  input: "checkpoint_initializer_217/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_217"
  op: "Identity"
  input: "checkpoint_initializer_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_217"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  input: "Identity_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_218/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_218/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_218/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_218"
  op: "RestoreV2"
  input: "checkpoint_initializer_218/prefix"
  input: "checkpoint_initializer_218/tensor_names"
  input: "checkpoint_initializer_218/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_218"
  op: "Identity"
  input: "checkpoint_initializer_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_218"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  input: "Identity_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_219/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_219/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_219/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_219"
  op: "RestoreV2"
  input: "checkpoint_initializer_219/prefix"
  input: "checkpoint_initializer_219/tensor_names"
  input: "checkpoint_initializer_219/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_219"
  op: "Identity"
  input: "checkpoint_initializer_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_219"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  input: "Identity_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_220/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_220/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_220/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_220"
  op: "RestoreV2"
  input: "checkpoint_initializer_220/prefix"
  input: "checkpoint_initializer_220/tensor_names"
  input: "checkpoint_initializer_220/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_220"
  op: "Identity"
  input: "checkpoint_initializer_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_220"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  input: "Identity_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_221/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_221/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_221/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_221"
  op: "RestoreV2"
  input: "checkpoint_initializer_221/prefix"
  input: "checkpoint_initializer_221/tensor_names"
  input: "checkpoint_initializer_221/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_221"
  op: "Identity"
  input: "checkpoint_initializer_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_221"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  input: "Identity_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_222/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_222/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_222/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_222"
  op: "RestoreV2"
  input: "checkpoint_initializer_222/prefix"
  input: "checkpoint_initializer_222/tensor_names"
  input: "checkpoint_initializer_222/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_222"
  op: "Identity"
  input: "checkpoint_initializer_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_222"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  input: "Identity_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_223/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_223/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_223/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_223"
  op: "RestoreV2"
  input: "checkpoint_initializer_223/prefix"
  input: "checkpoint_initializer_223/tensor_names"
  input: "checkpoint_initializer_223/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_223"
  op: "Identity"
  input: "checkpoint_initializer_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_223"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  input: "Identity_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_224/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_224/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_224/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_224"
  op: "RestoreV2"
  input: "checkpoint_initializer_224/prefix"
  input: "checkpoint_initializer_224/tensor_names"
  input: "checkpoint_initializer_224/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_224"
  op: "Identity"
  input: "checkpoint_initializer_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_224"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
  input: "Identity_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_225/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_225/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_225/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_225"
  op: "RestoreV2"
  input: "checkpoint_initializer_225/prefix"
  input: "checkpoint_initializer_225/tensor_names"
  input: "checkpoint_initializer_225/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_225"
  op: "Identity"
  input: "checkpoint_initializer_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_225"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  input: "Identity_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_226/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_226/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_226/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_226"
  op: "RestoreV2"
  input: "checkpoint_initializer_226/prefix"
  input: "checkpoint_initializer_226/tensor_names"
  input: "checkpoint_initializer_226/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_226"
  op: "Identity"
  input: "checkpoint_initializer_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_226"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  input: "Identity_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_227/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_227/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_227/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_227"
  op: "RestoreV2"
  input: "checkpoint_initializer_227/prefix"
  input: "checkpoint_initializer_227/tensor_names"
  input: "checkpoint_initializer_227/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_227"
  op: "Identity"
  input: "checkpoint_initializer_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_227"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  input: "Identity_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_228/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_228/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_228/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_228"
  op: "RestoreV2"
  input: "checkpoint_initializer_228/prefix"
  input: "checkpoint_initializer_228/tensor_names"
  input: "checkpoint_initializer_228/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_228"
  op: "Identity"
  input: "checkpoint_initializer_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_228"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  input: "Identity_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_229/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_229/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_229/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_229"
  op: "RestoreV2"
  input: "checkpoint_initializer_229/prefix"
  input: "checkpoint_initializer_229/tensor_names"
  input: "checkpoint_initializer_229/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_229"
  op: "Identity"
  input: "checkpoint_initializer_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_229"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
  input: "Identity_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_230/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_230/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_230/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_230"
  op: "RestoreV2"
  input: "checkpoint_initializer_230/prefix"
  input: "checkpoint_initializer_230/tensor_names"
  input: "checkpoint_initializer_230/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_230"
  op: "Identity"
  input: "checkpoint_initializer_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_230"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  input: "Identity_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_231/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_231/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_231/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_231"
  op: "RestoreV2"
  input: "checkpoint_initializer_231/prefix"
  input: "checkpoint_initializer_231/tensor_names"
  input: "checkpoint_initializer_231/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_231"
  op: "Identity"
  input: "checkpoint_initializer_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_231"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  input: "Identity_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_232/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_232/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_232/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_232"
  op: "RestoreV2"
  input: "checkpoint_initializer_232/prefix"
  input: "checkpoint_initializer_232/tensor_names"
  input: "checkpoint_initializer_232/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_232"
  op: "Identity"
  input: "checkpoint_initializer_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_232"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  input: "Identity_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_233/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_233/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_233/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_233"
  op: "RestoreV2"
  input: "checkpoint_initializer_233/prefix"
  input: "checkpoint_initializer_233/tensor_names"
  input: "checkpoint_initializer_233/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_233"
  op: "Identity"
  input: "checkpoint_initializer_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_233"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  input: "Identity_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_234/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_234/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_234/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_234"
  op: "RestoreV2"
  input: "checkpoint_initializer_234/prefix"
  input: "checkpoint_initializer_234/tensor_names"
  input: "checkpoint_initializer_234/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_234"
  op: "Identity"
  input: "checkpoint_initializer_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_234"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  input: "Identity_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_235/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_235/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_235/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_235"
  op: "RestoreV2"
  input: "checkpoint_initializer_235/prefix"
  input: "checkpoint_initializer_235/tensor_names"
  input: "checkpoint_initializer_235/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_235"
  op: "Identity"
  input: "checkpoint_initializer_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_235"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  input: "Identity_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_236/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_236/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_236/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_236"
  op: "RestoreV2"
  input: "checkpoint_initializer_236/prefix"
  input: "checkpoint_initializer_236/tensor_names"
  input: "checkpoint_initializer_236/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_236"
  op: "Identity"
  input: "checkpoint_initializer_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_236"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  input: "Identity_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_237/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_237/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_237/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_237"
  op: "RestoreV2"
  input: "checkpoint_initializer_237/prefix"
  input: "checkpoint_initializer_237/tensor_names"
  input: "checkpoint_initializer_237/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_237"
  op: "Identity"
  input: "checkpoint_initializer_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_237"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  input: "Identity_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_238/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_238/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_238/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_238"
  op: "RestoreV2"
  input: "checkpoint_initializer_238/prefix"
  input: "checkpoint_initializer_238/tensor_names"
  input: "checkpoint_initializer_238/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_238"
  op: "Identity"
  input: "checkpoint_initializer_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_238"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  input: "Identity_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_239/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_239/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_239/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_239"
  op: "RestoreV2"
  input: "checkpoint_initializer_239/prefix"
  input: "checkpoint_initializer_239/tensor_names"
  input: "checkpoint_initializer_239/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_239"
  op: "Identity"
  input: "checkpoint_initializer_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_239"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
  input: "Identity_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_240/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_240/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_240/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_240"
  op: "RestoreV2"
  input: "checkpoint_initializer_240/prefix"
  input: "checkpoint_initializer_240/tensor_names"
  input: "checkpoint_initializer_240/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_240"
  op: "Identity"
  input: "checkpoint_initializer_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_240"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  input: "Identity_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_241/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_241/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_241/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_241"
  op: "RestoreV2"
  input: "checkpoint_initializer_241/prefix"
  input: "checkpoint_initializer_241/tensor_names"
  input: "checkpoint_initializer_241/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_241"
  op: "Identity"
  input: "checkpoint_initializer_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_241"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  input: "Identity_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_242/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_242/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_242/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_242"
  op: "RestoreV2"
  input: "checkpoint_initializer_242/prefix"
  input: "checkpoint_initializer_242/tensor_names"
  input: "checkpoint_initializer_242/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_242"
  op: "Identity"
  input: "checkpoint_initializer_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_242"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  input: "Identity_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_243/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_243/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_243/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_243"
  op: "RestoreV2"
  input: "checkpoint_initializer_243/prefix"
  input: "checkpoint_initializer_243/tensor_names"
  input: "checkpoint_initializer_243/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_243"
  op: "Identity"
  input: "checkpoint_initializer_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_243"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  input: "Identity_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_244/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_244/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_244/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_244"
  op: "RestoreV2"
  input: "checkpoint_initializer_244/prefix"
  input: "checkpoint_initializer_244/tensor_names"
  input: "checkpoint_initializer_244/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_244"
  op: "Identity"
  input: "checkpoint_initializer_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_244"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
  input: "Identity_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_245/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_245/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_245/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_245"
  op: "RestoreV2"
  input: "checkpoint_initializer_245/prefix"
  input: "checkpoint_initializer_245/tensor_names"
  input: "checkpoint_initializer_245/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_245"
  op: "Identity"
  input: "checkpoint_initializer_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_245"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  input: "Identity_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_246/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_246/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_246/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_246"
  op: "RestoreV2"
  input: "checkpoint_initializer_246/prefix"
  input: "checkpoint_initializer_246/tensor_names"
  input: "checkpoint_initializer_246/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_246"
  op: "Identity"
  input: "checkpoint_initializer_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_246"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  input: "Identity_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_247/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_247/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_247/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_247"
  op: "RestoreV2"
  input: "checkpoint_initializer_247/prefix"
  input: "checkpoint_initializer_247/tensor_names"
  input: "checkpoint_initializer_247/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_247"
  op: "Identity"
  input: "checkpoint_initializer_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_247"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  input: "Identity_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_248/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_248/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_248/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_248"
  op: "RestoreV2"
  input: "checkpoint_initializer_248/prefix"
  input: "checkpoint_initializer_248/tensor_names"
  input: "checkpoint_initializer_248/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_248"
  op: "Identity"
  input: "checkpoint_initializer_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_248"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  input: "Identity_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_249/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_249/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_249/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_249"
  op: "RestoreV2"
  input: "checkpoint_initializer_249/prefix"
  input: "checkpoint_initializer_249/tensor_names"
  input: "checkpoint_initializer_249/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_249"
  op: "Identity"
  input: "checkpoint_initializer_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_249"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  input: "Identity_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_250/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_250/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_250/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_250"
  op: "RestoreV2"
  input: "checkpoint_initializer_250/prefix"
  input: "checkpoint_initializer_250/tensor_names"
  input: "checkpoint_initializer_250/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_250"
  op: "Identity"
  input: "checkpoint_initializer_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_250"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  input: "Identity_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_251/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_251/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_251/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_251"
  op: "RestoreV2"
  input: "checkpoint_initializer_251/prefix"
  input: "checkpoint_initializer_251/tensor_names"
  input: "checkpoint_initializer_251/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_251"
  op: "Identity"
  input: "checkpoint_initializer_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_251"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  input: "Identity_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_252/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_252/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_252/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_252"
  op: "RestoreV2"
  input: "checkpoint_initializer_252/prefix"
  input: "checkpoint_initializer_252/tensor_names"
  input: "checkpoint_initializer_252/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_252"
  op: "Identity"
  input: "checkpoint_initializer_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_252"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  input: "Identity_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_253/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_253/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_253/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_253"
  op: "RestoreV2"
  input: "checkpoint_initializer_253/prefix"
  input: "checkpoint_initializer_253/tensor_names"
  input: "checkpoint_initializer_253/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_253"
  op: "Identity"
  input: "checkpoint_initializer_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_253"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  input: "Identity_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_254/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_254/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_254/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_254"
  op: "RestoreV2"
  input: "checkpoint_initializer_254/prefix"
  input: "checkpoint_initializer_254/tensor_names"
  input: "checkpoint_initializer_254/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_254"
  op: "Identity"
  input: "checkpoint_initializer_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_254"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
  input: "Identity_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_255/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_255/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_255/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_255"
  op: "RestoreV2"
  input: "checkpoint_initializer_255/prefix"
  input: "checkpoint_initializer_255/tensor_names"
  input: "checkpoint_initializer_255/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_255"
  op: "Identity"
  input: "checkpoint_initializer_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_255"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  input: "Identity_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_256/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_256/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_256/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_256"
  op: "RestoreV2"
  input: "checkpoint_initializer_256/prefix"
  input: "checkpoint_initializer_256/tensor_names"
  input: "checkpoint_initializer_256/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_256"
  op: "Identity"
  input: "checkpoint_initializer_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_256"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  input: "Identity_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_257/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_257/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_257/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_257"
  op: "RestoreV2"
  input: "checkpoint_initializer_257/prefix"
  input: "checkpoint_initializer_257/tensor_names"
  input: "checkpoint_initializer_257/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_257"
  op: "Identity"
  input: "checkpoint_initializer_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_257"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  input: "Identity_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_258/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_258/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_258/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_258"
  op: "RestoreV2"
  input: "checkpoint_initializer_258/prefix"
  input: "checkpoint_initializer_258/tensor_names"
  input: "checkpoint_initializer_258/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_258"
  op: "Identity"
  input: "checkpoint_initializer_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_258"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  input: "Identity_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "checkpoint_initializer_259/prefix"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/var/folders/y9/tb8mmll538v_79_21qkzwpm00000gn/T/tfhub_modules/fc01024a51a258a6b55de3b239ffce4649443041/variables/variables"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_259/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "checkpoint_initializer_259/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "checkpoint_initializer_259"
  op: "RestoreV2"
  input: "checkpoint_initializer_259/prefix"
  input: "checkpoint_initializer_259/tensor_names"
  input: "checkpoint_initializer_259/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Identity_259"
  op: "Identity"
  input: "checkpoint_initializer_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_259"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
  input: "Identity_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_1/filename"
  op: "PlaceholderWithDefault"
  input: "save_1/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_1/Const"
  op: "PlaceholderWithDefault"
  input: "save_1/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_1/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_b60f375f67394f7fa21378500515116a/part"
      }
    }
  }
}
node {
  name: "save_1/StringJoin"
  op: "StringJoin"
  input: "save_1/Const"
  input: "save_1/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save_1/num_shards"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save_1/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save_1/ShardedFilename"
  op: "ShardedFilename"
  input: "save_1/StringJoin"
  input: "save_1/ShardedFilename/shard"
  input: "save_1/num_shards"
  device: "/device:CPU:0"
}
node {
  name: "save_1/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 260
          }
        }
        string_val: "MobilenetV2/Conv/BatchNorm/beta"
        string_val: "MobilenetV2/Conv/BatchNorm/gamma"
        string_val: "MobilenetV2/Conv/BatchNorm/moving_mean"
        string_val: "MobilenetV2/Conv/BatchNorm/moving_variance"
        string_val: "MobilenetV2/Conv/weights"
        string_val: "MobilenetV2/Conv_1/BatchNorm/beta"
        string_val: "MobilenetV2/Conv_1/BatchNorm/gamma"
        string_val: "MobilenetV2/Conv_1/BatchNorm/moving_mean"
        string_val: "MobilenetV2/Conv_1/BatchNorm/moving_variance"
        string_val: "MobilenetV2/Conv_1/weights"
        string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv/project/weights"
        string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_1/expand/weights"
        string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_1/project/weights"
        string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_10/expand/weights"
        string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_10/project/weights"
        string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_11/expand/weights"
        string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_11/project/weights"
        string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_12/expand/weights"
        string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_12/project/weights"
        string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_13/expand/weights"
        string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_13/project/weights"
        string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_14/expand/weights"
        string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_14/project/weights"
        string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_15/expand/weights"
        string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_15/project/weights"
        string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_16/expand/weights"
        string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_16/project/weights"
        string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_2/expand/weights"
        string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_2/project/weights"
        string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_3/expand/weights"
        string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_3/project/weights"
        string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_4/expand/weights"
        string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_4/project/weights"
        string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_5/expand/weights"
        string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_5/project/weights"
        string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_6/expand/weights"
        string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_6/project/weights"
        string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_7/expand/weights"
        string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_7/project/weights"
        string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_8/expand/weights"
        string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_8/project/weights"
        string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_9/expand/weights"
        string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "save_1/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 260
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/SaveV2"
  op: "SaveV2"
  input: "save_1/ShardedFilename"
  input: "save_1/SaveV2/tensor_names"
  input: "save_1/SaveV2/shape_and_slices"
  input: "module/MobilenetV2/Conv/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/control_dependency"
  op: "Identity"
  input: "save_1/ShardedFilename"
  input: "^save_1/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_1/ShardedFilename"
      }
    }
  }
}
node {
  name: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save_1/ShardedFilename"
  input: "^save_1/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save_1/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Identity"
  op: "Identity"
  input: "save_1/Const"
  input: "^save_1/MergeV2Checkpoints"
  input: "^save_1/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save_1/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 260
          }
        }
        string_val: "MobilenetV2/Conv/BatchNorm/beta"
        string_val: "MobilenetV2/Conv/BatchNorm/gamma"
        string_val: "MobilenetV2/Conv/BatchNorm/moving_mean"
        string_val: "MobilenetV2/Conv/BatchNorm/moving_variance"
        string_val: "MobilenetV2/Conv/weights"
        string_val: "MobilenetV2/Conv_1/BatchNorm/beta"
        string_val: "MobilenetV2/Conv_1/BatchNorm/gamma"
        string_val: "MobilenetV2/Conv_1/BatchNorm/moving_mean"
        string_val: "MobilenetV2/Conv_1/BatchNorm/moving_variance"
        string_val: "MobilenetV2/Conv_1/weights"
        string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv/project/weights"
        string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_1/expand/weights"
        string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_1/project/weights"
        string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_10/expand/weights"
        string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_10/project/weights"
        string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_11/expand/weights"
        string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_11/project/weights"
        string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_12/expand/weights"
        string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_12/project/weights"
        string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_13/expand/weights"
        string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_13/project/weights"
        string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_14/expand/weights"
        string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_14/project/weights"
        string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_15/expand/weights"
        string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_15/project/weights"
        string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_16/expand/weights"
        string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_16/project/weights"
        string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_2/expand/weights"
        string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_2/project/weights"
        string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_3/expand/weights"
        string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_3/project/weights"
        string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_4/expand/weights"
        string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_4/project/weights"
        string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_5/expand/weights"
        string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_5/project/weights"
        string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_6/expand/weights"
        string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_6/project/weights"
        string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_7/expand/weights"
        string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_7/project/weights"
        string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_8/expand/weights"
        string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_8/project/weights"
        string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
        string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_9/expand/weights"
        string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
        string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
        string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
        string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
        string_val: "MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 260
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2/tensor_names"
  input: "save_1/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Identity_1"
  op: "Identity"
  input: "save_1/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/beta"
  input: "save_1/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_2"
  op: "Identity"
  input: "save_1/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma"
  input: "save_1/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_3"
  op: "Identity"
  input: "save_1/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
  input: "save_1/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_4"
  op: "Identity"
  input: "save_1/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
  input: "save_1/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_5"
  op: "Identity"
  input: "save_1/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/weights"
  input: "save_1/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_6"
  op: "Identity"
  input: "save_1/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta"
  input: "save_1/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_7"
  op: "Identity"
  input: "save_1/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
  input: "save_1/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_8"
  op: "Identity"
  input: "save_1/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  input: "save_1/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_9"
  op: "Identity"
  input: "save_1/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  input: "save_1/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_10"
  op: "Identity"
  input: "save_1/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/weights"
  input: "save_1/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_11"
  op: "Identity"
  input: "save_1/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  input: "save_1/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_12"
  op: "Identity"
  input: "save_1/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_13"
  op: "Identity"
  input: "save_1/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_14"
  op: "Identity"
  input: "save_1/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_15"
  op: "Identity"
  input: "save_1/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  input: "save_1/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_16"
  op: "Identity"
  input: "save_1/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  input: "save_1/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_17"
  op: "Identity"
  input: "save_1/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  input: "save_1/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_18"
  op: "Identity"
  input: "save_1/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  input: "save_1/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_19"
  op: "Identity"
  input: "save_1/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  input: "save_1/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_20"
  op: "Identity"
  input: "save_1/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
  input: "save_1/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_21"
  op: "Identity"
  input: "save_1/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  input: "save_1/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_22"
  op: "Identity"
  input: "save_1/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_23"
  op: "Identity"
  input: "save_1/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_24"
  op: "Identity"
  input: "save_1/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_25"
  op: "Identity"
  input: "save_1/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  input: "save_1/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_26"
  op: "Identity"
  input: "save_1/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  input: "save_1/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_27"
  op: "Identity"
  input: "save_1/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  input: "save_1/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_28"
  op: "Identity"
  input: "save_1/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_29"
  op: "Identity"
  input: "save_1/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_30"
  op: "Identity"
  input: "save_1/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
  input: "save_1/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_31"
  op: "Identity"
  input: "save_1/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  input: "save_1/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_32"
  op: "Identity"
  input: "save_1/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  input: "save_1/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_33"
  op: "Identity"
  input: "save_1/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  input: "save_1/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_34"
  op: "Identity"
  input: "save_1/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  input: "save_1/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_35"
  op: "Identity"
  input: "save_1/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
  input: "save_1/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_36"
  op: "Identity"
  input: "save_1/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  input: "save_1/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_37"
  op: "Identity"
  input: "save_1/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_38"
  op: "Identity"
  input: "save_1/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_39"
  op: "Identity"
  input: "save_1/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_40"
  op: "Identity"
  input: "save_1/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  input: "save_1/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_41"
  op: "Identity"
  input: "save_1/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  input: "save_1/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_42"
  op: "Identity"
  input: "save_1/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  input: "save_1/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_43"
  op: "Identity"
  input: "save_1/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_44"
  op: "Identity"
  input: "save_1/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_45"
  op: "Identity"
  input: "save_1/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
  input: "save_1/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_46"
  op: "Identity"
  input: "save_1/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  input: "save_1/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_47"
  op: "Identity"
  input: "save_1/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  input: "save_1/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_48"
  op: "Identity"
  input: "save_1/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  input: "save_1/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_49"
  op: "Identity"
  input: "save_1/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  input: "save_1/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_50"
  op: "Identity"
  input: "save_1/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
  input: "save_1/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_51"
  op: "Identity"
  input: "save_1/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  input: "save_1/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_52"
  op: "Identity"
  input: "save_1/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_53"
  op: "Identity"
  input: "save_1/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_54"
  op: "Identity"
  input: "save_1/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_55"
  op: "Identity"
  input: "save_1/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  input: "save_1/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_56"
  op: "Identity"
  input: "save_1/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  input: "save_1/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_57"
  op: "Identity"
  input: "save_1/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  input: "save_1/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_58"
  op: "Identity"
  input: "save_1/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_59"
  op: "Identity"
  input: "save_1/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_60"
  op: "Identity"
  input: "save_1/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
  input: "save_1/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_61"
  op: "Identity"
  input: "save_1/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  input: "save_1/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_62"
  op: "Identity"
  input: "save_1/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  input: "save_1/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_63"
  op: "Identity"
  input: "save_1/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  input: "save_1/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_64"
  op: "Identity"
  input: "save_1/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  input: "save_1/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_65"
  op: "Identity"
  input: "save_1/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
  input: "save_1/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_66"
  op: "Identity"
  input: "save_1/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  input: "save_1/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_67"
  op: "Identity"
  input: "save_1/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_68"
  op: "Identity"
  input: "save_1/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_69"
  op: "Identity"
  input: "save_1/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_70"
  op: "Identity"
  input: "save_1/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  input: "save_1/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_71"
  op: "Identity"
  input: "save_1/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  input: "save_1/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_72"
  op: "Identity"
  input: "save_1/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  input: "save_1/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_73"
  op: "Identity"
  input: "save_1/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_74"
  op: "Identity"
  input: "save_1/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_75"
  op: "Identity"
  input: "save_1/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
  input: "save_1/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_76"
  op: "Identity"
  input: "save_1/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  input: "save_1/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_77"
  op: "Identity"
  input: "save_1/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  input: "save_1/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_78"
  op: "Identity"
  input: "save_1/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  input: "save_1/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_79"
  op: "Identity"
  input: "save_1/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  input: "save_1/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_80"
  op: "Identity"
  input: "save_1/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
  input: "save_1/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_81"
  op: "Identity"
  input: "save_1/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  input: "save_1/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_82"
  op: "Identity"
  input: "save_1/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_83"
  op: "Identity"
  input: "save_1/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_84"
  op: "Identity"
  input: "save_1/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_85"
  op: "Identity"
  input: "save_1/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  input: "save_1/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_86"
  op: "Identity"
  input: "save_1/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  input: "save_1/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_87"
  op: "Identity"
  input: "save_1/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  input: "save_1/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_88"
  op: "Identity"
  input: "save_1/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_89"
  op: "Identity"
  input: "save_1/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_90"
  op: "Identity"
  input: "save_1/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
  input: "save_1/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_91"
  op: "Identity"
  input: "save_1/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  input: "save_1/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_92"
  op: "Identity"
  input: "save_1/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  input: "save_1/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_93"
  op: "Identity"
  input: "save_1/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  input: "save_1/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_94"
  op: "Identity"
  input: "save_1/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  input: "save_1/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_95"
  op: "Identity"
  input: "save_1/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
  input: "save_1/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_96"
  op: "Identity"
  input: "save_1/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  input: "save_1/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_97"
  op: "Identity"
  input: "save_1/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_98"
  op: "Identity"
  input: "save_1/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_99"
  op: "Identity"
  input: "save_1/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_100"
  op: "Identity"
  input: "save_1/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  input: "save_1/Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_101"
  op: "Identity"
  input: "save_1/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  input: "save_1/Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_102"
  op: "Identity"
  input: "save_1/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  input: "save_1/Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_103"
  op: "Identity"
  input: "save_1/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_104"
  op: "Identity"
  input: "save_1/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_105"
  op: "Identity"
  input: "save_1/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
  input: "save_1/Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_106"
  op: "Identity"
  input: "save_1/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  input: "save_1/Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_107"
  op: "Identity"
  input: "save_1/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  input: "save_1/Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_108"
  op: "Identity"
  input: "save_1/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  input: "save_1/Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_109"
  op: "Identity"
  input: "save_1/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  input: "save_1/Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_110"
  op: "Identity"
  input: "save_1/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
  input: "save_1/Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_111"
  op: "Identity"
  input: "save_1/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  input: "save_1/Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_112"
  op: "Identity"
  input: "save_1/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_113"
  op: "Identity"
  input: "save_1/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_114"
  op: "Identity"
  input: "save_1/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_115"
  op: "Identity"
  input: "save_1/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  input: "save_1/Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_116"
  op: "Identity"
  input: "save_1/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  input: "save_1/Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_117"
  op: "Identity"
  input: "save_1/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  input: "save_1/Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_118"
  op: "Identity"
  input: "save_1/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_119"
  op: "Identity"
  input: "save_1/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_120"
  op: "Identity"
  input: "save_1/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
  input: "save_1/Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_121"
  op: "Identity"
  input: "save_1/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  input: "save_1/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_122"
  op: "Identity"
  input: "save_1/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  input: "save_1/Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_123"
  op: "Identity"
  input: "save_1/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  input: "save_1/Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_124"
  op: "Identity"
  input: "save_1/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  input: "save_1/Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_125"
  op: "Identity"
  input: "save_1/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
  input: "save_1/Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_126"
  op: "Identity"
  input: "save_1/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  input: "save_1/Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_127"
  op: "Identity"
  input: "save_1/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_128"
  op: "Identity"
  input: "save_1/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_129"
  op: "Identity"
  input: "save_1/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_130"
  op: "Identity"
  input: "save_1/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  input: "save_1/Identity_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_131"
  op: "Identity"
  input: "save_1/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  input: "save_1/Identity_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_132"
  op: "Identity"
  input: "save_1/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  input: "save_1/Identity_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_133"
  op: "Identity"
  input: "save_1/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_134"
  op: "Identity"
  input: "save_1/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_135"
  op: "Identity"
  input: "save_1/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
  input: "save_1/Identity_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_136"
  op: "Identity"
  input: "save_1/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  input: "save_1/Identity_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_137"
  op: "Identity"
  input: "save_1/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  input: "save_1/Identity_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_138"
  op: "Identity"
  input: "save_1/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  input: "save_1/Identity_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_139"
  op: "Identity"
  input: "save_1/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  input: "save_1/Identity_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_140"
  op: "Identity"
  input: "save_1/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
  input: "save_1/Identity_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_141"
  op: "Identity"
  input: "save_1/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  input: "save_1/Identity_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_142"
  op: "Identity"
  input: "save_1/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_143"
  op: "Identity"
  input: "save_1/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_144"
  op: "Identity"
  input: "save_1/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_145"
  op: "Identity"
  input: "save_1/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  input: "save_1/Identity_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_146"
  op: "Identity"
  input: "save_1/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  input: "save_1/Identity_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_147"
  op: "Identity"
  input: "save_1/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  input: "save_1/Identity_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_148"
  op: "Identity"
  input: "save_1/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_149"
  op: "Identity"
  input: "save_1/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_150"
  op: "Identity"
  input: "save_1/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
  input: "save_1/Identity_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_151"
  op: "Identity"
  input: "save_1/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  input: "save_1/Identity_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_152"
  op: "Identity"
  input: "save_1/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  input: "save_1/Identity_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_153"
  op: "Identity"
  input: "save_1/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  input: "save_1/Identity_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_154"
  op: "Identity"
  input: "save_1/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  input: "save_1/Identity_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_155"
  op: "Identity"
  input: "save_1/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
  input: "save_1/Identity_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_156"
  op: "Identity"
  input: "save_1/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  input: "save_1/Identity_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_157"
  op: "Identity"
  input: "save_1/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_158"
  op: "Identity"
  input: "save_1/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_159"
  op: "Identity"
  input: "save_1/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_160"
  op: "Identity"
  input: "save_1/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  input: "save_1/Identity_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_161"
  op: "Identity"
  input: "save_1/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  input: "save_1/Identity_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_162"
  op: "Identity"
  input: "save_1/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  input: "save_1/Identity_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_163"
  op: "Identity"
  input: "save_1/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_164"
  op: "Identity"
  input: "save_1/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_165"
  op: "Identity"
  input: "save_1/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
  input: "save_1/Identity_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_166"
  op: "Identity"
  input: "save_1/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  input: "save_1/Identity_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_167"
  op: "Identity"
  input: "save_1/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  input: "save_1/Identity_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_168"
  op: "Identity"
  input: "save_1/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  input: "save_1/Identity_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_169"
  op: "Identity"
  input: "save_1/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  input: "save_1/Identity_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_170"
  op: "Identity"
  input: "save_1/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
  input: "save_1/Identity_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_171"
  op: "Identity"
  input: "save_1/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  input: "save_1/Identity_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_172"
  op: "Identity"
  input: "save_1/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_173"
  op: "Identity"
  input: "save_1/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_174"
  op: "Identity"
  input: "save_1/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_175"
  op: "Identity"
  input: "save_1/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  input: "save_1/Identity_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_176"
  op: "Identity"
  input: "save_1/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  input: "save_1/Identity_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_177"
  op: "Identity"
  input: "save_1/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  input: "save_1/Identity_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_178"
  op: "Identity"
  input: "save_1/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_179"
  op: "Identity"
  input: "save_1/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_180"
  op: "Identity"
  input: "save_1/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
  input: "save_1/Identity_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_181"
  op: "Identity"
  input: "save_1/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  input: "save_1/Identity_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_182"
  op: "Identity"
  input: "save_1/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  input: "save_1/Identity_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_183"
  op: "Identity"
  input: "save_1/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  input: "save_1/Identity_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_184"
  op: "Identity"
  input: "save_1/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  input: "save_1/Identity_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_185"
  op: "Identity"
  input: "save_1/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
  input: "save_1/Identity_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_186"
  op: "Identity"
  input: "save_1/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  input: "save_1/Identity_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_187"
  op: "Identity"
  input: "save_1/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_188"
  op: "Identity"
  input: "save_1/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_189"
  op: "Identity"
  input: "save_1/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_190"
  op: "Identity"
  input: "save_1/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  input: "save_1/Identity_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_191"
  op: "Identity"
  input: "save_1/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  input: "save_1/Identity_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_192"
  op: "Identity"
  input: "save_1/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  input: "save_1/Identity_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_193"
  op: "Identity"
  input: "save_1/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_194"
  op: "Identity"
  input: "save_1/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_195"
  op: "Identity"
  input: "save_1/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
  input: "save_1/Identity_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_196"
  op: "Identity"
  input: "save_1/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  input: "save_1/Identity_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_197"
  op: "Identity"
  input: "save_1/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  input: "save_1/Identity_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_198"
  op: "Identity"
  input: "save_1/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  input: "save_1/Identity_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_199"
  op: "Identity"
  input: "save_1/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  input: "save_1/Identity_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_200"
  op: "Identity"
  input: "save_1/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_199"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
  input: "save_1/Identity_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_201"
  op: "Identity"
  input: "save_1/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_200"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  input: "save_1/Identity_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_202"
  op: "Identity"
  input: "save_1/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_201"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_203"
  op: "Identity"
  input: "save_1/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_202"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_204"
  op: "Identity"
  input: "save_1/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_203"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_205"
  op: "Identity"
  input: "save_1/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_204"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  input: "save_1/Identity_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_206"
  op: "Identity"
  input: "save_1/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_205"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  input: "save_1/Identity_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_207"
  op: "Identity"
  input: "save_1/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_206"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  input: "save_1/Identity_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_208"
  op: "Identity"
  input: "save_1/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_207"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_209"
  op: "Identity"
  input: "save_1/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_208"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_210"
  op: "Identity"
  input: "save_1/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_209"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
  input: "save_1/Identity_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_211"
  op: "Identity"
  input: "save_1/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_210"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  input: "save_1/Identity_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_212"
  op: "Identity"
  input: "save_1/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_211"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  input: "save_1/Identity_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_213"
  op: "Identity"
  input: "save_1/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_212"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  input: "save_1/Identity_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_214"
  op: "Identity"
  input: "save_1/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_213"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  input: "save_1/Identity_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_215"
  op: "Identity"
  input: "save_1/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_214"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
  input: "save_1/Identity_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_216"
  op: "Identity"
  input: "save_1/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_215"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  input: "save_1/Identity_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_217"
  op: "Identity"
  input: "save_1/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_216"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_218"
  op: "Identity"
  input: "save_1/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_217"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_219"
  op: "Identity"
  input: "save_1/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_218"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_220"
  op: "Identity"
  input: "save_1/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_219"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  input: "save_1/Identity_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_221"
  op: "Identity"
  input: "save_1/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_220"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  input: "save_1/Identity_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_222"
  op: "Identity"
  input: "save_1/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_221"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  input: "save_1/Identity_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_223"
  op: "Identity"
  input: "save_1/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_222"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_224"
  op: "Identity"
  input: "save_1/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_223"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_225"
  op: "Identity"
  input: "save_1/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_224"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
  input: "save_1/Identity_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_226"
  op: "Identity"
  input: "save_1/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_225"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  input: "save_1/Identity_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_227"
  op: "Identity"
  input: "save_1/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_226"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  input: "save_1/Identity_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_228"
  op: "Identity"
  input: "save_1/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_227"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  input: "save_1/Identity_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_229"
  op: "Identity"
  input: "save_1/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_228"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  input: "save_1/Identity_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_230"
  op: "Identity"
  input: "save_1/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_229"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
  input: "save_1/Identity_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_231"
  op: "Identity"
  input: "save_1/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_230"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  input: "save_1/Identity_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_232"
  op: "Identity"
  input: "save_1/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_231"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_233"
  op: "Identity"
  input: "save_1/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_232"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_234"
  op: "Identity"
  input: "save_1/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_233"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_235"
  op: "Identity"
  input: "save_1/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_234"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  input: "save_1/Identity_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_236"
  op: "Identity"
  input: "save_1/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_235"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  input: "save_1/Identity_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_237"
  op: "Identity"
  input: "save_1/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_236"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  input: "save_1/Identity_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_238"
  op: "Identity"
  input: "save_1/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_237"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_239"
  op: "Identity"
  input: "save_1/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_238"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_240"
  op: "Identity"
  input: "save_1/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_239"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
  input: "save_1/Identity_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_241"
  op: "Identity"
  input: "save_1/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_240"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  input: "save_1/Identity_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_242"
  op: "Identity"
  input: "save_1/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_241"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  input: "save_1/Identity_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_243"
  op: "Identity"
  input: "save_1/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_242"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  input: "save_1/Identity_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_244"
  op: "Identity"
  input: "save_1/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_243"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  input: "save_1/Identity_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_245"
  op: "Identity"
  input: "save_1/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_244"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
  input: "save_1/Identity_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_246"
  op: "Identity"
  input: "save_1/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_245"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  input: "save_1/Identity_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_247"
  op: "Identity"
  input: "save_1/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_246"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  input: "save_1/Identity_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_248"
  op: "Identity"
  input: "save_1/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_247"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  input: "save_1/Identity_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_249"
  op: "Identity"
  input: "save_1/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_248"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  input: "save_1/Identity_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_250"
  op: "Identity"
  input: "save_1/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_249"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  input: "save_1/Identity_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_251"
  op: "Identity"
  input: "save_1/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_250"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  input: "save_1/Identity_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_252"
  op: "Identity"
  input: "save_1/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_251"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  input: "save_1/Identity_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_253"
  op: "Identity"
  input: "save_1/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_252"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  input: "save_1/Identity_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_254"
  op: "Identity"
  input: "save_1/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_253"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  input: "save_1/Identity_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_255"
  op: "Identity"
  input: "save_1/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_254"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
  input: "save_1/Identity_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_256"
  op: "Identity"
  input: "save_1/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_255"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  input: "save_1/Identity_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_257"
  op: "Identity"
  input: "save_1/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_256"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  input: "save_1/Identity_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_258"
  op: "Identity"
  input: "save_1/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_257"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  input: "save_1/Identity_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_259"
  op: "Identity"
  input: "save_1/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_258"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  input: "save_1/Identity_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_260"
  op: "Identity"
  input: "save_1/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_259"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
  input: "save_1/Identity_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/restore_shard"
  op: "NoOp"
  input: "^save_1/AssignVariableOp"
  input: "^save_1/AssignVariableOp_1"
  input: "^save_1/AssignVariableOp_10"
  input: "^save_1/AssignVariableOp_100"
  input: "^save_1/AssignVariableOp_101"
  input: "^save_1/AssignVariableOp_102"
  input: "^save_1/AssignVariableOp_103"
  input: "^save_1/AssignVariableOp_104"
  input: "^save_1/AssignVariableOp_105"
  input: "^save_1/AssignVariableOp_106"
  input: "^save_1/AssignVariableOp_107"
  input: "^save_1/AssignVariableOp_108"
  input: "^save_1/AssignVariableOp_109"
  input: "^save_1/AssignVariableOp_11"
  input: "^save_1/AssignVariableOp_110"
  input: "^save_1/AssignVariableOp_111"
  input: "^save_1/AssignVariableOp_112"
  input: "^save_1/AssignVariableOp_113"
  input: "^save_1/AssignVariableOp_114"
  input: "^save_1/AssignVariableOp_115"
  input: "^save_1/AssignVariableOp_116"
  input: "^save_1/AssignVariableOp_117"
  input: "^save_1/AssignVariableOp_118"
  input: "^save_1/AssignVariableOp_119"
  input: "^save_1/AssignVariableOp_12"
  input: "^save_1/AssignVariableOp_120"
  input: "^save_1/AssignVariableOp_121"
  input: "^save_1/AssignVariableOp_122"
  input: "^save_1/AssignVariableOp_123"
  input: "^save_1/AssignVariableOp_124"
  input: "^save_1/AssignVariableOp_125"
  input: "^save_1/AssignVariableOp_126"
  input: "^save_1/AssignVariableOp_127"
  input: "^save_1/AssignVariableOp_128"
  input: "^save_1/AssignVariableOp_129"
  input: "^save_1/AssignVariableOp_13"
  input: "^save_1/AssignVariableOp_130"
  input: "^save_1/AssignVariableOp_131"
  input: "^save_1/AssignVariableOp_132"
  input: "^save_1/AssignVariableOp_133"
  input: "^save_1/AssignVariableOp_134"
  input: "^save_1/AssignVariableOp_135"
  input: "^save_1/AssignVariableOp_136"
  input: "^save_1/AssignVariableOp_137"
  input: "^save_1/AssignVariableOp_138"
  input: "^save_1/AssignVariableOp_139"
  input: "^save_1/AssignVariableOp_14"
  input: "^save_1/AssignVariableOp_140"
  input: "^save_1/AssignVariableOp_141"
  input: "^save_1/AssignVariableOp_142"
  input: "^save_1/AssignVariableOp_143"
  input: "^save_1/AssignVariableOp_144"
  input: "^save_1/AssignVariableOp_145"
  input: "^save_1/AssignVariableOp_146"
  input: "^save_1/AssignVariableOp_147"
  input: "^save_1/AssignVariableOp_148"
  input: "^save_1/AssignVariableOp_149"
  input: "^save_1/AssignVariableOp_15"
  input: "^save_1/AssignVariableOp_150"
  input: "^save_1/AssignVariableOp_151"
  input: "^save_1/AssignVariableOp_152"
  input: "^save_1/AssignVariableOp_153"
  input: "^save_1/AssignVariableOp_154"
  input: "^save_1/AssignVariableOp_155"
  input: "^save_1/AssignVariableOp_156"
  input: "^save_1/AssignVariableOp_157"
  input: "^save_1/AssignVariableOp_158"
  input: "^save_1/AssignVariableOp_159"
  input: "^save_1/AssignVariableOp_16"
  input: "^save_1/AssignVariableOp_160"
  input: "^save_1/AssignVariableOp_161"
  input: "^save_1/AssignVariableOp_162"
  input: "^save_1/AssignVariableOp_163"
  input: "^save_1/AssignVariableOp_164"
  input: "^save_1/AssignVariableOp_165"
  input: "^save_1/AssignVariableOp_166"
  input: "^save_1/AssignVariableOp_167"
  input: "^save_1/AssignVariableOp_168"
  input: "^save_1/AssignVariableOp_169"
  input: "^save_1/AssignVariableOp_17"
  input: "^save_1/AssignVariableOp_170"
  input: "^save_1/AssignVariableOp_171"
  input: "^save_1/AssignVariableOp_172"
  input: "^save_1/AssignVariableOp_173"
  input: "^save_1/AssignVariableOp_174"
  input: "^save_1/AssignVariableOp_175"
  input: "^save_1/AssignVariableOp_176"
  input: "^save_1/AssignVariableOp_177"
  input: "^save_1/AssignVariableOp_178"
  input: "^save_1/AssignVariableOp_179"
  input: "^save_1/AssignVariableOp_18"
  input: "^save_1/AssignVariableOp_180"
  input: "^save_1/AssignVariableOp_181"
  input: "^save_1/AssignVariableOp_182"
  input: "^save_1/AssignVariableOp_183"
  input: "^save_1/AssignVariableOp_184"
  input: "^save_1/AssignVariableOp_185"
  input: "^save_1/AssignVariableOp_186"
  input: "^save_1/AssignVariableOp_187"
  input: "^save_1/AssignVariableOp_188"
  input: "^save_1/AssignVariableOp_189"
  input: "^save_1/AssignVariableOp_19"
  input: "^save_1/AssignVariableOp_190"
  input: "^save_1/AssignVariableOp_191"
  input: "^save_1/AssignVariableOp_192"
  input: "^save_1/AssignVariableOp_193"
  input: "^save_1/AssignVariableOp_194"
  input: "^save_1/AssignVariableOp_195"
  input: "^save_1/AssignVariableOp_196"
  input: "^save_1/AssignVariableOp_197"
  input: "^save_1/AssignVariableOp_198"
  input: "^save_1/AssignVariableOp_199"
  input: "^save_1/AssignVariableOp_2"
  input: "^save_1/AssignVariableOp_20"
  input: "^save_1/AssignVariableOp_200"
  input: "^save_1/AssignVariableOp_201"
  input: "^save_1/AssignVariableOp_202"
  input: "^save_1/AssignVariableOp_203"
  input: "^save_1/AssignVariableOp_204"
  input: "^save_1/AssignVariableOp_205"
  input: "^save_1/AssignVariableOp_206"
  input: "^save_1/AssignVariableOp_207"
  input: "^save_1/AssignVariableOp_208"
  input: "^save_1/AssignVariableOp_209"
  input: "^save_1/AssignVariableOp_21"
  input: "^save_1/AssignVariableOp_210"
  input: "^save_1/AssignVariableOp_211"
  input: "^save_1/AssignVariableOp_212"
  input: "^save_1/AssignVariableOp_213"
  input: "^save_1/AssignVariableOp_214"
  input: "^save_1/AssignVariableOp_215"
  input: "^save_1/AssignVariableOp_216"
  input: "^save_1/AssignVariableOp_217"
  input: "^save_1/AssignVariableOp_218"
  input: "^save_1/AssignVariableOp_219"
  input: "^save_1/AssignVariableOp_22"
  input: "^save_1/AssignVariableOp_220"
  input: "^save_1/AssignVariableOp_221"
  input: "^save_1/AssignVariableOp_222"
  input: "^save_1/AssignVariableOp_223"
  input: "^save_1/AssignVariableOp_224"
  input: "^save_1/AssignVariableOp_225"
  input: "^save_1/AssignVariableOp_226"
  input: "^save_1/AssignVariableOp_227"
  input: "^save_1/AssignVariableOp_228"
  input: "^save_1/AssignVariableOp_229"
  input: "^save_1/AssignVariableOp_23"
  input: "^save_1/AssignVariableOp_230"
  input: "^save_1/AssignVariableOp_231"
  input: "^save_1/AssignVariableOp_232"
  input: "^save_1/AssignVariableOp_233"
  input: "^save_1/AssignVariableOp_234"
  input: "^save_1/AssignVariableOp_235"
  input: "^save_1/AssignVariableOp_236"
  input: "^save_1/AssignVariableOp_237"
  input: "^save_1/AssignVariableOp_238"
  input: "^save_1/AssignVariableOp_239"
  input: "^save_1/AssignVariableOp_24"
  input: "^save_1/AssignVariableOp_240"
  input: "^save_1/AssignVariableOp_241"
  input: "^save_1/AssignVariableOp_242"
  input: "^save_1/AssignVariableOp_243"
  input: "^save_1/AssignVariableOp_244"
  input: "^save_1/AssignVariableOp_245"
  input: "^save_1/AssignVariableOp_246"
  input: "^save_1/AssignVariableOp_247"
  input: "^save_1/AssignVariableOp_248"
  input: "^save_1/AssignVariableOp_249"
  input: "^save_1/AssignVariableOp_25"
  input: "^save_1/AssignVariableOp_250"
  input: "^save_1/AssignVariableOp_251"
  input: "^save_1/AssignVariableOp_252"
  input: "^save_1/AssignVariableOp_253"
  input: "^save_1/AssignVariableOp_254"
  input: "^save_1/AssignVariableOp_255"
  input: "^save_1/AssignVariableOp_256"
  input: "^save_1/AssignVariableOp_257"
  input: "^save_1/AssignVariableOp_258"
  input: "^save_1/AssignVariableOp_259"
  input: "^save_1/AssignVariableOp_26"
  input: "^save_1/AssignVariableOp_27"
  input: "^save_1/AssignVariableOp_28"
  input: "^save_1/AssignVariableOp_29"
  input: "^save_1/AssignVariableOp_3"
  input: "^save_1/AssignVariableOp_30"
  input: "^save_1/AssignVariableOp_31"
  input: "^save_1/AssignVariableOp_32"
  input: "^save_1/AssignVariableOp_33"
  input: "^save_1/AssignVariableOp_34"
  input: "^save_1/AssignVariableOp_35"
  input: "^save_1/AssignVariableOp_36"
  input: "^save_1/AssignVariableOp_37"
  input: "^save_1/AssignVariableOp_38"
  input: "^save_1/AssignVariableOp_39"
  input: "^save_1/AssignVariableOp_4"
  input: "^save_1/AssignVariableOp_40"
  input: "^save_1/AssignVariableOp_41"
  input: "^save_1/AssignVariableOp_42"
  input: "^save_1/AssignVariableOp_43"
  input: "^save_1/AssignVariableOp_44"
  input: "^save_1/AssignVariableOp_45"
  input: "^save_1/AssignVariableOp_46"
  input: "^save_1/AssignVariableOp_47"
  input: "^save_1/AssignVariableOp_48"
  input: "^save_1/AssignVariableOp_49"
  input: "^save_1/AssignVariableOp_5"
  input: "^save_1/AssignVariableOp_50"
  input: "^save_1/AssignVariableOp_51"
  input: "^save_1/AssignVariableOp_52"
  input: "^save_1/AssignVariableOp_53"
  input: "^save_1/AssignVariableOp_54"
  input: "^save_1/AssignVariableOp_55"
  input: "^save_1/AssignVariableOp_56"
  input: "^save_1/AssignVariableOp_57"
  input: "^save_1/AssignVariableOp_58"
  input: "^save_1/AssignVariableOp_59"
  input: "^save_1/AssignVariableOp_6"
  input: "^save_1/AssignVariableOp_60"
  input: "^save_1/AssignVariableOp_61"
  input: "^save_1/AssignVariableOp_62"
  input: "^save_1/AssignVariableOp_63"
  input: "^save_1/AssignVariableOp_64"
  input: "^save_1/AssignVariableOp_65"
  input: "^save_1/AssignVariableOp_66"
  input: "^save_1/AssignVariableOp_67"
  input: "^save_1/AssignVariableOp_68"
  input: "^save_1/AssignVariableOp_69"
  input: "^save_1/AssignVariableOp_7"
  input: "^save_1/AssignVariableOp_70"
  input: "^save_1/AssignVariableOp_71"
  input: "^save_1/AssignVariableOp_72"
  input: "^save_1/AssignVariableOp_73"
  input: "^save_1/AssignVariableOp_74"
  input: "^save_1/AssignVariableOp_75"
  input: "^save_1/AssignVariableOp_76"
  input: "^save_1/AssignVariableOp_77"
  input: "^save_1/AssignVariableOp_78"
  input: "^save_1/AssignVariableOp_79"
  input: "^save_1/AssignVariableOp_8"
  input: "^save_1/AssignVariableOp_80"
  input: "^save_1/AssignVariableOp_81"
  input: "^save_1/AssignVariableOp_82"
  input: "^save_1/AssignVariableOp_83"
  input: "^save_1/AssignVariableOp_84"
  input: "^save_1/AssignVariableOp_85"
  input: "^save_1/AssignVariableOp_86"
  input: "^save_1/AssignVariableOp_87"
  input: "^save_1/AssignVariableOp_88"
  input: "^save_1/AssignVariableOp_89"
  input: "^save_1/AssignVariableOp_9"
  input: "^save_1/AssignVariableOp_90"
  input: "^save_1/AssignVariableOp_91"
  input: "^save_1/AssignVariableOp_92"
  input: "^save_1/AssignVariableOp_93"
  input: "^save_1/AssignVariableOp_94"
  input: "^save_1/AssignVariableOp_95"
  input: "^save_1/AssignVariableOp_96"
  input: "^save_1/AssignVariableOp_97"
  input: "^save_1/AssignVariableOp_98"
  input: "^save_1/AssignVariableOp_99"
}
node {
  name: "save_1/restore_all"
  op: "NoOp"
  input: "^save_1/restore_shard"
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "map/Shape"
  op: "Shape"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/strided_slice"
  op: "StridedSlice"
  input: "map/Shape"
  input: "map/strided_slice/stack"
  input: "map/strided_slice/stack_1"
  input: "map/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/TensorArray"
  op: "TensorArrayV3"
  input: "map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map/TensorArrayUnstack/Shape"
  input: "map/TensorArrayUnstack/strided_slice/stack"
  input: "map/TensorArrayUnstack/strided_slice/stack_1"
  input: "map/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/range"
  op: "Range"
  input: "map/TensorArrayUnstack/range/start"
  input: "map/TensorArrayUnstack/strided_slice"
  input: "map/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/TensorArray"
  input: "map/TensorArrayUnstack/range"
  input: "Placeholder"
  input: "map/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Placeholder"
      }
    }
  }
}
node {
  name: "map/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArray_1"
  op: "TensorArrayV3"
  input: "map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/Enter"
  op: "Enter"
  input: "map/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Enter_1"
  op: "Enter"
  input: "map/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Enter_2"
  op: "Enter"
  input: "map/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Merge"
  op: "Merge"
  input: "map/while/Enter"
  input: "map/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/Merge_1"
  op: "Merge"
  input: "map/while/Enter_1"
  input: "map/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/Merge_2"
  op: "Merge"
  input: "map/while/Enter_2"
  input: "map/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/Less"
  op: "Less"
  input: "map/while/Merge"
  input: "map/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/Less/Enter"
  op: "Enter"
  input: "map/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Less_1"
  op: "Less"
  input: "map/while/Merge_1"
  input: "map/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map/while/Less"
  input: "map/while/Less_1"
}
node {
  name: "map/while/LoopCond"
  op: "LoopCond"
  input: "map/while/LogicalAnd"
}
node {
  name: "map/while/Switch"
  op: "Switch"
  input: "map/while/Merge"
  input: "map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Merge"
      }
    }
  }
}
node {
  name: "map/while/Switch_1"
  op: "Switch"
  input: "map/while/Merge_1"
  input: "map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Merge_1"
      }
    }
  }
}
node {
  name: "map/while/Switch_2"
  op: "Switch"
  input: "map/while/Merge_2"
  input: "map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Merge_2"
      }
    }
  }
}
node {
  name: "map/while/Identity"
  op: "Identity"
  input: "map/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/Identity_1"
  op: "Identity"
  input: "map/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/Identity_2"
  op: "Identity"
  input: "map/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/add/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/add"
  op: "Add"
  input: "map/while/Identity"
  input: "map/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map/while/TensorArrayReadV3/Enter"
  input: "map/while/Identity_1"
  input: "map/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/DecodeJpeg"
  op: "DecodeJpeg"
  input: "map/while/TensorArrayReadV3"
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/convert_image/Cast"
  op: "Cast"
  input: "map/while/DecodeJpeg"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/convert_image/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.003921568859368563
      }
    }
  }
}
node {
  name: "map/while/convert_image"
  op: "Mul"
  input: "map/while/convert_image/Cast"
  input: "map/while/convert_image/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/resize/ExpandDims/dim"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/resize/ExpandDims"
  op: "ExpandDims"
  input: "map/while/convert_image"
  input: "map/while/resize/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/resize/size"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "map/while/resize/ResizeBilinear"
  op: "ResizeBilinear"
  input: "map/while/resize/ExpandDims"
  input: "map/while/resize/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/resize/Squeeze"
  op: "Squeeze"
  input: "map/while/resize/ResizeBilinear"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "map/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map/while/Identity_1"
  input: "map/while/resize/Squeeze"
  input: "map/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/resize/Squeeze"
      }
    }
  }
}
node {
  name: "map/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/resize/Squeeze"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/add_1/y"
  op: "Const"
  input: "^map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/add_1"
  op: "Add"
  input: "map/while/Identity_1"
  input: "map/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/NextIteration"
  op: "NextIteration"
  input: "map/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/NextIteration_1"
  op: "NextIteration"
  input: "map/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/NextIteration_2"
  op: "NextIteration"
  input: "map/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/while/Exit"
  op: "Exit"
  input: "map/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/Exit_1"
  op: "Exit"
  input: "map/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/while/Exit_2"
  op: "Exit"
  input: "map/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "map/TensorArray_1"
  input: "map/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/range"
  op: "Range"
  input: "map/TensorArrayStack/range/start"
  input: "map/TensorArrayStack/TensorArraySizeV3"
  input: "map/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map/TensorArray_1"
  input: "map/TensorArrayStack/range"
  input: "map/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "module_apply_default/hub_input/images"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "module_apply_default/hub_input/Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "module_apply_default/hub_input/Mul"
  op: "Mul"
  input: "map/TensorArrayStack/TensorArrayGatherV3"
  input: "module_apply_default/hub_input/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/hub_input/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/hub_input/Sub"
  op: "Sub"
  input: "module_apply_default/hub_input/Mul"
  input: "module_apply_default/hub_input/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/input"
  op: "Identity"
  input: "module_apply_default/hub_input/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/Conv/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/Conv/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/Conv/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/Conv/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/Conv/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv/weights"
}
node {
  name: "module_apply_default/MobilenetV2/Conv/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/weights"
  input: "module_apply_default/MobilenetV2/Conv/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/input"
  input: "module_apply_default/MobilenetV2/Conv/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/Conv/Conv2D"
  input: "module_apply_default/MobilenetV2/Conv/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/Conv/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/Conv/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/Conv/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv/input"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\010\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_1/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_1/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\010\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/add"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/project/Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_2/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_2/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\010\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_3/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_3/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/add"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/project/Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_4/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_4/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/add"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/project/Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_5/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_5/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_6/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_6/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/add"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/project/Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_7/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_7/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/add"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/project/Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_8/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_8/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/add"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/project/Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_9/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_9/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_10/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_10/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/add"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/project/Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_11/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_11/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/add"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/project/Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_12/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_12/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\0008\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_13/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_13/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\000\000\000P\001\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 56
        }
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 336
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000P\001\000\0008\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 336
        }
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/add"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/project/Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_14/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_14/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\000\000\000P\001\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 56
        }
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 336
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000P\001\000\0008\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 336
        }
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 56
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 56
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/add"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/project/Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_15/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/input"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_15/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\000\000\000P\001\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 56
        }
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/input"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expand/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/expansion_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expand/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 336
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/expansion_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 336
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 336
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/depthwise"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise_output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000P\001\000\000p\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 336
        }
        dim {
          size: 112
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/depthwise_output"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 112
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 112
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 112
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 112
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/project/Identity"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/expanded_conv_16/output"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000p\000\000\000\000\005\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "module_apply_default/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "module_apply_default/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "module_apply_default/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/mul"
  input: "module_apply_default/MobilenetV2/Conv_1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 112
        }
        dim {
          size: 1280
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv_1/weights"
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/weights/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/weights"
  input: "module_apply_default/MobilenetV2/Conv_1/weights/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "module_apply_default/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "module_apply_default/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/scale"
  input: "module_apply_default/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/weights"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/Conv2D"
  op: "Conv2D"
  input: "module_apply_default/MobilenetV2/expanded_conv_16/output"
  input: "module_apply_default/MobilenetV2/Conv_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/gamma"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/beta"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta"
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "module_apply_default/MobilenetV2/Conv_1/Conv2D"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/ReadVariableOp_1"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm/ReadVariableOp"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Conv_1/Relu6"
  op: "Relu6"
  input: "module_apply_default/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/embedding"
  op: "Identity"
  input: "module_apply_default/MobilenetV2/Conv_1/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "module_apply_default/MobilenetV2/Logits/AvgPool"
  op: "AvgPool"
  input: "module_apply_default/MobilenetV2/embedding"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "module_apply_default/hub_output/feature_vector/SpatialSqueeze"
  op: "Squeeze"
  input: "module_apply_default/MobilenetV2/Logits/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06835859268903732
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06835859268903732
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Assign"
  op: "Assign"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/read"
  op: "Identity"
  input: "dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Assign"
  op: "Assign"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/read"
  op: "Identity"
  input: "dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "module_apply_default/hub_output/feature_vector/SpatialSqueeze"
  input: "dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Shape"
  op: "Shape"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Shape_1"
  op: "Shape"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits/Rank_1"
  input: "softmax_cross_entropy_with_logits/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits/Shape_1"
  input: "softmax_cross_entropy_with_logits/Slice/begin"
  input: "softmax_cross_entropy_with_logits/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits/concat/values_0"
  input: "softmax_cross_entropy_with_logits/Slice"
  input: "softmax_cross_entropy_with_logits/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Reshape"
  op: "Reshape"
  input: "dense/BiasAdd"
  input: "softmax_cross_entropy_with_logits/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Shape_2"
  op: "Shape"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits/Rank_2"
  input: "softmax_cross_entropy_with_logits/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits/Shape_2"
  input: "softmax_cross_entropy_with_logits/Slice_1/begin"
  input: "softmax_cross_entropy_with_logits/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits/concat_1/values_0"
  input: "softmax_cross_entropy_with_logits/Slice_1"
  input: "softmax_cross_entropy_with_logits/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Reshape_1"
  op: "Reshape"
  input: "Placeholder_1"
  input: "softmax_cross_entropy_with_logits/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_with_logits/Reshape"
  input: "softmax_cross_entropy_with_logits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits/Rank"
  input: "softmax_cross_entropy_with_logits/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits/Shape"
  input: "softmax_cross_entropy_with_logits/Slice_2/begin"
  input: "softmax_cross_entropy_with_logits/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_with_logits"
  input: "softmax_cross_entropy_with_logits/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "softmax_cross_entropy_with_logits/Reshape_2"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_grad/Reshape"
  input: "gradients/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_1"
  op: "Shape"
  input: "softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_1"
  input: "gradients/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_2"
  input: "gradients/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Mean_grad/Prod_1"
  input: "gradients/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Mean_grad/Prod"
  input: "gradients/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_grad/Tile"
  input: "gradients/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_with_logits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/Mean_grad/truediv"
  input: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims"
  input: "softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_with_logits/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_with_logits_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_with_logits_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_with_logits_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_grad/mul_1"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  op: "Shape"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  input: "dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "module_apply_default/hub_output/feature_vector/SpatialSqueeze"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dense/MatMul_grad/MatMul"
  input: "^gradients/dense/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense/MatMul_grad/MatMul"
  input: "^gradients/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/MatMul_grad/MatMul_1"
  input: "^gradients/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "GradientDescent/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "GradientDescent/update_dense/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dense/kernel"
  input: "GradientDescent/learning_rate"
  input: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_dense/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "dense/bias"
  input: "GradientDescent/learning_rate"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent"
  op: "NoOp"
  input: "^GradientDescent/update_dense/bias/ApplyGradientDescent"
  input: "^GradientDescent/update_dense/kernel/ApplyGradientDescent"
}
node {
  name: "Softmax"
  op: "Softmax"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "Softmax"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "Placeholder_1"
  input: "ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_1"
  op: "Mean"
  input: "Cast"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^AssignVariableOp"
  input: "^AssignVariableOp_1"
  input: "^AssignVariableOp_10"
  input: "^AssignVariableOp_100"
  input: "^AssignVariableOp_101"
  input: "^AssignVariableOp_102"
  input: "^AssignVariableOp_103"
  input: "^AssignVariableOp_104"
  input: "^AssignVariableOp_105"
  input: "^AssignVariableOp_106"
  input: "^AssignVariableOp_107"
  input: "^AssignVariableOp_108"
  input: "^AssignVariableOp_109"
  input: "^AssignVariableOp_11"
  input: "^AssignVariableOp_110"
  input: "^AssignVariableOp_111"
  input: "^AssignVariableOp_112"
  input: "^AssignVariableOp_113"
  input: "^AssignVariableOp_114"
  input: "^AssignVariableOp_115"
  input: "^AssignVariableOp_116"
  input: "^AssignVariableOp_117"
  input: "^AssignVariableOp_118"
  input: "^AssignVariableOp_119"
  input: "^AssignVariableOp_12"
  input: "^AssignVariableOp_120"
  input: "^AssignVariableOp_121"
  input: "^AssignVariableOp_122"
  input: "^AssignVariableOp_123"
  input: "^AssignVariableOp_124"
  input: "^AssignVariableOp_125"
  input: "^AssignVariableOp_126"
  input: "^AssignVariableOp_127"
  input: "^AssignVariableOp_128"
  input: "^AssignVariableOp_129"
  input: "^AssignVariableOp_13"
  input: "^AssignVariableOp_130"
  input: "^AssignVariableOp_131"
  input: "^AssignVariableOp_132"
  input: "^AssignVariableOp_133"
  input: "^AssignVariableOp_134"
  input: "^AssignVariableOp_135"
  input: "^AssignVariableOp_136"
  input: "^AssignVariableOp_137"
  input: "^AssignVariableOp_138"
  input: "^AssignVariableOp_139"
  input: "^AssignVariableOp_14"
  input: "^AssignVariableOp_140"
  input: "^AssignVariableOp_141"
  input: "^AssignVariableOp_142"
  input: "^AssignVariableOp_143"
  input: "^AssignVariableOp_144"
  input: "^AssignVariableOp_145"
  input: "^AssignVariableOp_146"
  input: "^AssignVariableOp_147"
  input: "^AssignVariableOp_148"
  input: "^AssignVariableOp_149"
  input: "^AssignVariableOp_15"
  input: "^AssignVariableOp_150"
  input: "^AssignVariableOp_151"
  input: "^AssignVariableOp_152"
  input: "^AssignVariableOp_153"
  input: "^AssignVariableOp_154"
  input: "^AssignVariableOp_155"
  input: "^AssignVariableOp_156"
  input: "^AssignVariableOp_157"
  input: "^AssignVariableOp_158"
  input: "^AssignVariableOp_159"
  input: "^AssignVariableOp_16"
  input: "^AssignVariableOp_160"
  input: "^AssignVariableOp_161"
  input: "^AssignVariableOp_162"
  input: "^AssignVariableOp_163"
  input: "^AssignVariableOp_164"
  input: "^AssignVariableOp_165"
  input: "^AssignVariableOp_166"
  input: "^AssignVariableOp_167"
  input: "^AssignVariableOp_168"
  input: "^AssignVariableOp_169"
  input: "^AssignVariableOp_17"
  input: "^AssignVariableOp_170"
  input: "^AssignVariableOp_171"
  input: "^AssignVariableOp_172"
  input: "^AssignVariableOp_173"
  input: "^AssignVariableOp_174"
  input: "^AssignVariableOp_175"
  input: "^AssignVariableOp_176"
  input: "^AssignVariableOp_177"
  input: "^AssignVariableOp_178"
  input: "^AssignVariableOp_179"
  input: "^AssignVariableOp_18"
  input: "^AssignVariableOp_180"
  input: "^AssignVariableOp_181"
  input: "^AssignVariableOp_182"
  input: "^AssignVariableOp_183"
  input: "^AssignVariableOp_184"
  input: "^AssignVariableOp_185"
  input: "^AssignVariableOp_186"
  input: "^AssignVariableOp_187"
  input: "^AssignVariableOp_188"
  input: "^AssignVariableOp_189"
  input: "^AssignVariableOp_19"
  input: "^AssignVariableOp_190"
  input: "^AssignVariableOp_191"
  input: "^AssignVariableOp_192"
  input: "^AssignVariableOp_193"
  input: "^AssignVariableOp_194"
  input: "^AssignVariableOp_195"
  input: "^AssignVariableOp_196"
  input: "^AssignVariableOp_197"
  input: "^AssignVariableOp_198"
  input: "^AssignVariableOp_199"
  input: "^AssignVariableOp_2"
  input: "^AssignVariableOp_20"
  input: "^AssignVariableOp_200"
  input: "^AssignVariableOp_201"
  input: "^AssignVariableOp_202"
  input: "^AssignVariableOp_203"
  input: "^AssignVariableOp_204"
  input: "^AssignVariableOp_205"
  input: "^AssignVariableOp_206"
  input: "^AssignVariableOp_207"
  input: "^AssignVariableOp_208"
  input: "^AssignVariableOp_209"
  input: "^AssignVariableOp_21"
  input: "^AssignVariableOp_210"
  input: "^AssignVariableOp_211"
  input: "^AssignVariableOp_212"
  input: "^AssignVariableOp_213"
  input: "^AssignVariableOp_214"
  input: "^AssignVariableOp_215"
  input: "^AssignVariableOp_216"
  input: "^AssignVariableOp_217"
  input: "^AssignVariableOp_218"
  input: "^AssignVariableOp_219"
  input: "^AssignVariableOp_22"
  input: "^AssignVariableOp_220"
  input: "^AssignVariableOp_221"
  input: "^AssignVariableOp_222"
  input: "^AssignVariableOp_223"
  input: "^AssignVariableOp_224"
  input: "^AssignVariableOp_225"
  input: "^AssignVariableOp_226"
  input: "^AssignVariableOp_227"
  input: "^AssignVariableOp_228"
  input: "^AssignVariableOp_229"
  input: "^AssignVariableOp_23"
  input: "^AssignVariableOp_230"
  input: "^AssignVariableOp_231"
  input: "^AssignVariableOp_232"
  input: "^AssignVariableOp_233"
  input: "^AssignVariableOp_234"
  input: "^AssignVariableOp_235"
  input: "^AssignVariableOp_236"
  input: "^AssignVariableOp_237"
  input: "^AssignVariableOp_238"
  input: "^AssignVariableOp_239"
  input: "^AssignVariableOp_24"
  input: "^AssignVariableOp_240"
  input: "^AssignVariableOp_241"
  input: "^AssignVariableOp_242"
  input: "^AssignVariableOp_243"
  input: "^AssignVariableOp_244"
  input: "^AssignVariableOp_245"
  input: "^AssignVariableOp_246"
  input: "^AssignVariableOp_247"
  input: "^AssignVariableOp_248"
  input: "^AssignVariableOp_249"
  input: "^AssignVariableOp_25"
  input: "^AssignVariableOp_250"
  input: "^AssignVariableOp_251"
  input: "^AssignVariableOp_252"
  input: "^AssignVariableOp_253"
  input: "^AssignVariableOp_254"
  input: "^AssignVariableOp_255"
  input: "^AssignVariableOp_256"
  input: "^AssignVariableOp_257"
  input: "^AssignVariableOp_258"
  input: "^AssignVariableOp_259"
  input: "^AssignVariableOp_26"
  input: "^AssignVariableOp_27"
  input: "^AssignVariableOp_28"
  input: "^AssignVariableOp_29"
  input: "^AssignVariableOp_3"
  input: "^AssignVariableOp_30"
  input: "^AssignVariableOp_31"
  input: "^AssignVariableOp_32"
  input: "^AssignVariableOp_33"
  input: "^AssignVariableOp_34"
  input: "^AssignVariableOp_35"
  input: "^AssignVariableOp_36"
  input: "^AssignVariableOp_37"
  input: "^AssignVariableOp_38"
  input: "^AssignVariableOp_39"
  input: "^AssignVariableOp_4"
  input: "^AssignVariableOp_40"
  input: "^AssignVariableOp_41"
  input: "^AssignVariableOp_42"
  input: "^AssignVariableOp_43"
  input: "^AssignVariableOp_44"
  input: "^AssignVariableOp_45"
  input: "^AssignVariableOp_46"
  input: "^AssignVariableOp_47"
  input: "^AssignVariableOp_48"
  input: "^AssignVariableOp_49"
  input: "^AssignVariableOp_5"
  input: "^AssignVariableOp_50"
  input: "^AssignVariableOp_51"
  input: "^AssignVariableOp_52"
  input: "^AssignVariableOp_53"
  input: "^AssignVariableOp_54"
  input: "^AssignVariableOp_55"
  input: "^AssignVariableOp_56"
  input: "^AssignVariableOp_57"
  input: "^AssignVariableOp_58"
  input: "^AssignVariableOp_59"
  input: "^AssignVariableOp_6"
  input: "^AssignVariableOp_60"
  input: "^AssignVariableOp_61"
  input: "^AssignVariableOp_62"
  input: "^AssignVariableOp_63"
  input: "^AssignVariableOp_64"
  input: "^AssignVariableOp_65"
  input: "^AssignVariableOp_66"
  input: "^AssignVariableOp_67"
  input: "^AssignVariableOp_68"
  input: "^AssignVariableOp_69"
  input: "^AssignVariableOp_7"
  input: "^AssignVariableOp_70"
  input: "^AssignVariableOp_71"
  input: "^AssignVariableOp_72"
  input: "^AssignVariableOp_73"
  input: "^AssignVariableOp_74"
  input: "^AssignVariableOp_75"
  input: "^AssignVariableOp_76"
  input: "^AssignVariableOp_77"
  input: "^AssignVariableOp_78"
  input: "^AssignVariableOp_79"
  input: "^AssignVariableOp_8"
  input: "^AssignVariableOp_80"
  input: "^AssignVariableOp_81"
  input: "^AssignVariableOp_82"
  input: "^AssignVariableOp_83"
  input: "^AssignVariableOp_84"
  input: "^AssignVariableOp_85"
  input: "^AssignVariableOp_86"
  input: "^AssignVariableOp_87"
  input: "^AssignVariableOp_88"
  input: "^AssignVariableOp_89"
  input: "^AssignVariableOp_9"
  input: "^AssignVariableOp_90"
  input: "^AssignVariableOp_91"
  input: "^AssignVariableOp_92"
  input: "^AssignVariableOp_93"
  input: "^AssignVariableOp_94"
  input: "^AssignVariableOp_95"
  input: "^AssignVariableOp_96"
  input: "^AssignVariableOp_97"
  input: "^AssignVariableOp_98"
  input: "^AssignVariableOp_99"
  input: "^dense/bias/Assign"
  input: "^dense/kernel/Assign"
}
node {
  name: "random_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "random_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "random_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "random_normal/mul"
  op: "Mul"
  input: "random_normal/RandomStandardNormal"
  input: "random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "random_normal"
  op: "Add"
  input: "random_normal/mul"
  input: "random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "w1/Assign"
  op: "Assign"
  input: "w1"
  input: "random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "w1/read"
  op: "Identity"
  input: "w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w1"
      }
    }
  }
}
node {
  name: "random_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "random_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "random_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "random_normal_1/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "random_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "random_normal_1/mul"
  op: "Mul"
  input: "random_normal_1/RandomStandardNormal"
  input: "random_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "random_normal_1"
  op: "Add"
  input: "random_normal_1/mul"
  input: "random_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "w2/Assign"
  op: "Assign"
  input: "w2"
  input: "random_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "w2/read"
  op: "Identity"
  input: "w2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w2"
      }
    }
  }
}
node {
  name: "save_2/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_2/filename"
  op: "PlaceholderWithDefault"
  input: "save_2/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_2/Const"
  op: "PlaceholderWithDefault"
  input: "save_2/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_2/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 264
          }
        }
        string_val: "dense/bias"
        string_val: "dense/kernel"
        string_val: "module/MobilenetV2/Conv/BatchNorm/beta"
        string_val: "module/MobilenetV2/Conv/BatchNorm/gamma"
        string_val: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/Conv/weights"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/beta"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/Conv_1/weights"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_1/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_10/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_11/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_12/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_13/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_14/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_15/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_16/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_2/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_3/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_4/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_5/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_6/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_7/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_8/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_9/project/weights"
        string_val: "w1"
        string_val: "w2"
      }
    }
  }
}
node {
  name: "save_2/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 264
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_2/SaveV2"
  op: "SaveV2"
  input: "save_2/Const"
  input: "save_2/SaveV2/tensor_names"
  input: "save_2/SaveV2/shape_and_slices"
  input: "dense/bias"
  input: "dense/kernel"
  input: "module/MobilenetV2/Conv/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/Conv_1/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights/Read/ReadVariableOp"
  input: "w1"
  input: "w2"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_2/control_dependency"
  op: "Identity"
  input: "save_2/Const"
  input: "^save_2/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_2/Const"
      }
    }
  }
}
node {
  name: "save_2/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 264
          }
        }
        string_val: "dense/bias"
        string_val: "dense/kernel"
        string_val: "module/MobilenetV2/Conv/BatchNorm/beta"
        string_val: "module/MobilenetV2/Conv/BatchNorm/gamma"
        string_val: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/Conv/weights"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/beta"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/Conv_1/weights"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_1/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_1/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_10/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_10/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_11/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_11/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_12/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_12/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_13/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_13/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_14/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_14/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_15/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_15/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_16/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_16/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_2/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_2/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_3/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_3/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_4/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_4/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_5/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_5/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_6/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_6/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_7/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_7/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_8/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_8/project/weights"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_9/expand/weights"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
        string_val: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
        string_val: "module/MobilenetV2/expanded_conv_9/project/weights"
        string_val: "w1"
        string_val: "w2"
      }
    }
  }
}
node {
  name: "save_2/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 264
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_2/RestoreV2"
  op: "RestoreV2"
  input: "save_2/Const"
  input: "save_2/RestoreV2/tensor_names"
  input: "save_2/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_2/Assign"
  op: "Assign"
  input: "dense/bias"
  input: "save_2/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_1"
  op: "Assign"
  input: "dense/kernel"
  input: "save_2/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Identity"
  op: "Identity"
  input: "save_2/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/beta"
  input: "save_2/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_1"
  op: "Identity"
  input: "save_2/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/gamma"
  input: "save_2/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_2"
  op: "Identity"
  input: "save_2/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_mean"
  input: "save_2/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_3"
  op: "Identity"
  input: "save_2/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/BatchNorm/moving_variance"
  input: "save_2/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_4"
  op: "Identity"
  input: "save_2/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv/weights"
  input: "save_2/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_5"
  op: "Identity"
  input: "save_2/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/beta"
  input: "save_2/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_6"
  op: "Identity"
  input: "save_2/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/gamma"
  input: "save_2/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_7"
  op: "Identity"
  input: "save_2/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  input: "save_2/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_8"
  op: "Identity"
  input: "save_2/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  input: "save_2/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_9"
  op: "Identity"
  input: "save_2/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/Conv_1/weights"
  input: "save_2/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_10"
  op: "Identity"
  input: "save_2/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  input: "save_2/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_11"
  op: "Identity"
  input: "save_2/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_12"
  op: "Identity"
  input: "save_2/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_13"
  op: "Identity"
  input: "save_2/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_14"
  op: "Identity"
  input: "save_2/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  input: "save_2/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_15"
  op: "Identity"
  input: "save_2/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  input: "save_2/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_16"
  op: "Identity"
  input: "save_2/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  input: "save_2/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_17"
  op: "Identity"
  input: "save_2/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  input: "save_2/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_18"
  op: "Identity"
  input: "save_2/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  input: "save_2/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_19"
  op: "Identity"
  input: "save_2/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv/project/weights"
  input: "save_2/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_20"
  op: "Identity"
  input: "save_2/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  input: "save_2/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_21"
  op: "Identity"
  input: "save_2/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_22"
  op: "Identity"
  input: "save_2/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_23"
  op: "Identity"
  input: "save_2/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_24"
  op: "Identity"
  input: "save_2/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  input: "save_2/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_25"
  op: "Identity"
  input: "save_2/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  input: "save_2/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_26"
  op: "Identity"
  input: "save_2/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  input: "save_2/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_27"
  op: "Identity"
  input: "save_2/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_28"
  op: "Identity"
  input: "save_2/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_29"
  op: "Identity"
  input: "save_2/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/expand/weights"
  input: "save_2/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_30"
  op: "Identity"
  input: "save_2/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  input: "save_2/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_31"
  op: "Identity"
  input: "save_2/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  input: "save_2/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_32"
  op: "Identity"
  input: "save_2/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  input: "save_2/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_33"
  op: "Identity"
  input: "save_2/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  input: "save_2/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_34"
  op: "Identity"
  input: "save_2/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_1/project/weights"
  input: "save_2/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_35"
  op: "Identity"
  input: "save_2/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  input: "save_2/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_36"
  op: "Identity"
  input: "save_2/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_37"
  op: "Identity"
  input: "save_2/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_38"
  op: "Identity"
  input: "save_2/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_39"
  op: "Identity"
  input: "save_2/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  input: "save_2/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_40"
  op: "Identity"
  input: "save_2/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  input: "save_2/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_41"
  op: "Identity"
  input: "save_2/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  input: "save_2/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_42"
  op: "Identity"
  input: "save_2/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_43"
  op: "Identity"
  input: "save_2/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_44"
  op: "Identity"
  input: "save_2/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/expand/weights"
  input: "save_2/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_45"
  op: "Identity"
  input: "save_2/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  input: "save_2/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_46"
  op: "Identity"
  input: "save_2/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  input: "save_2/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_47"
  op: "Identity"
  input: "save_2/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  input: "save_2/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_48"
  op: "Identity"
  input: "save_2/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  input: "save_2/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_49"
  op: "Identity"
  input: "save_2/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_10/project/weights"
  input: "save_2/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_50"
  op: "Identity"
  input: "save_2/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  input: "save_2/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_51"
  op: "Identity"
  input: "save_2/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_52"
  op: "Identity"
  input: "save_2/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_53"
  op: "Identity"
  input: "save_2/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_54"
  op: "Identity"
  input: "save_2/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  input: "save_2/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_55"
  op: "Identity"
  input: "save_2/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  input: "save_2/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_56"
  op: "Identity"
  input: "save_2/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  input: "save_2/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_57"
  op: "Identity"
  input: "save_2/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_58"
  op: "Identity"
  input: "save_2/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_59"
  op: "Identity"
  input: "save_2/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/expand/weights"
  input: "save_2/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_60"
  op: "Identity"
  input: "save_2/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  input: "save_2/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_61"
  op: "Identity"
  input: "save_2/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  input: "save_2/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_62"
  op: "Identity"
  input: "save_2/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  input: "save_2/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_63"
  op: "Identity"
  input: "save_2/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  input: "save_2/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_64"
  op: "Identity"
  input: "save_2/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_11/project/weights"
  input: "save_2/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_65"
  op: "Identity"
  input: "save_2/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  input: "save_2/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_66"
  op: "Identity"
  input: "save_2/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_67"
  op: "Identity"
  input: "save_2/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_68"
  op: "Identity"
  input: "save_2/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_69"
  op: "Identity"
  input: "save_2/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  input: "save_2/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_70"
  op: "Identity"
  input: "save_2/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  input: "save_2/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_71"
  op: "Identity"
  input: "save_2/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  input: "save_2/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_72"
  op: "Identity"
  input: "save_2/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_73"
  op: "Identity"
  input: "save_2/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_74"
  op: "Identity"
  input: "save_2/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/expand/weights"
  input: "save_2/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_75"
  op: "Identity"
  input: "save_2/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  input: "save_2/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_76"
  op: "Identity"
  input: "save_2/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  input: "save_2/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_77"
  op: "Identity"
  input: "save_2/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  input: "save_2/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_78"
  op: "Identity"
  input: "save_2/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  input: "save_2/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_79"
  op: "Identity"
  input: "save_2/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_12/project/weights"
  input: "save_2/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_80"
  op: "Identity"
  input: "save_2/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  input: "save_2/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_81"
  op: "Identity"
  input: "save_2/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_82"
  op: "Identity"
  input: "save_2/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_83"
  op: "Identity"
  input: "save_2/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_84"
  op: "Identity"
  input: "save_2/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  input: "save_2/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_85"
  op: "Identity"
  input: "save_2/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  input: "save_2/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_86"
  op: "Identity"
  input: "save_2/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  input: "save_2/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_87"
  op: "Identity"
  input: "save_2/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_88"
  op: "Identity"
  input: "save_2/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_89"
  op: "Identity"
  input: "save_2/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/expand/weights"
  input: "save_2/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_90"
  op: "Identity"
  input: "save_2/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  input: "save_2/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_91"
  op: "Identity"
  input: "save_2/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  input: "save_2/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_92"
  op: "Identity"
  input: "save_2/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  input: "save_2/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_93"
  op: "Identity"
  input: "save_2/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  input: "save_2/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_94"
  op: "Identity"
  input: "save_2/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_13/project/weights"
  input: "save_2/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_95"
  op: "Identity"
  input: "save_2/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  input: "save_2/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_96"
  op: "Identity"
  input: "save_2/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_97"
  op: "Identity"
  input: "save_2/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_98"
  op: "Identity"
  input: "save_2/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_99"
  op: "Identity"
  input: "save_2/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  input: "save_2/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_100"
  op: "Identity"
  input: "save_2/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  input: "save_2/Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_101"
  op: "Identity"
  input: "save_2/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  input: "save_2/Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_102"
  op: "Identity"
  input: "save_2/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_103"
  op: "Identity"
  input: "save_2/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_104"
  op: "Identity"
  input: "save_2/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/expand/weights"
  input: "save_2/Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_105"
  op: "Identity"
  input: "save_2/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  input: "save_2/Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_106"
  op: "Identity"
  input: "save_2/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  input: "save_2/Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_107"
  op: "Identity"
  input: "save_2/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  input: "save_2/Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_108"
  op: "Identity"
  input: "save_2/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  input: "save_2/Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_109"
  op: "Identity"
  input: "save_2/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_14/project/weights"
  input: "save_2/Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_110"
  op: "Identity"
  input: "save_2/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  input: "save_2/Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_111"
  op: "Identity"
  input: "save_2/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_112"
  op: "Identity"
  input: "save_2/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_113"
  op: "Identity"
  input: "save_2/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_114"
  op: "Identity"
  input: "save_2/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  input: "save_2/Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_115"
  op: "Identity"
  input: "save_2/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  input: "save_2/Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_116"
  op: "Identity"
  input: "save_2/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  input: "save_2/Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_117"
  op: "Identity"
  input: "save_2/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_118"
  op: "Identity"
  input: "save_2/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_119"
  op: "Identity"
  input: "save_2/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/expand/weights"
  input: "save_2/Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_120"
  op: "Identity"
  input: "save_2/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  input: "save_2/Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_121"
  op: "Identity"
  input: "save_2/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  input: "save_2/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_122"
  op: "Identity"
  input: "save_2/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  input: "save_2/Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_123"
  op: "Identity"
  input: "save_2/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  input: "save_2/Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_124"
  op: "Identity"
  input: "save_2/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_15/project/weights"
  input: "save_2/Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_125"
  op: "Identity"
  input: "save_2/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  input: "save_2/Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_126"
  op: "Identity"
  input: "save_2/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_127"
  op: "Identity"
  input: "save_2/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_128"
  op: "Identity"
  input: "save_2/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_129"
  op: "Identity"
  input: "save_2/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  input: "save_2/Identity_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_130"
  op: "Identity"
  input: "save_2/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  input: "save_2/Identity_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_131"
  op: "Identity"
  input: "save_2/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  input: "save_2/Identity_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_132"
  op: "Identity"
  input: "save_2/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_133"
  op: "Identity"
  input: "save_2/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_134"
  op: "Identity"
  input: "save_2/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/expand/weights"
  input: "save_2/Identity_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_135"
  op: "Identity"
  input: "save_2/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  input: "save_2/Identity_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_136"
  op: "Identity"
  input: "save_2/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  input: "save_2/Identity_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_137"
  op: "Identity"
  input: "save_2/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  input: "save_2/Identity_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_138"
  op: "Identity"
  input: "save_2/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  input: "save_2/Identity_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_139"
  op: "Identity"
  input: "save_2/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_16/project/weights"
  input: "save_2/Identity_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_140"
  op: "Identity"
  input: "save_2/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  input: "save_2/Identity_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_141"
  op: "Identity"
  input: "save_2/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_142"
  op: "Identity"
  input: "save_2/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_143"
  op: "Identity"
  input: "save_2/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_144"
  op: "Identity"
  input: "save_2/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  input: "save_2/Identity_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_145"
  op: "Identity"
  input: "save_2/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  input: "save_2/Identity_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_146"
  op: "Identity"
  input: "save_2/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  input: "save_2/Identity_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_147"
  op: "Identity"
  input: "save_2/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_148"
  op: "Identity"
  input: "save_2/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_149"
  op: "Identity"
  input: "save_2/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/expand/weights"
  input: "save_2/Identity_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_150"
  op: "Identity"
  input: "save_2/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  input: "save_2/Identity_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_151"
  op: "Identity"
  input: "save_2/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  input: "save_2/Identity_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_152"
  op: "Identity"
  input: "save_2/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  input: "save_2/Identity_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_153"
  op: "Identity"
  input: "save_2/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  input: "save_2/Identity_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_154"
  op: "Identity"
  input: "save_2/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_2/project/weights"
  input: "save_2/Identity_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_155"
  op: "Identity"
  input: "save_2/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  input: "save_2/Identity_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_156"
  op: "Identity"
  input: "save_2/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_157"
  op: "Identity"
  input: "save_2/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_158"
  op: "Identity"
  input: "save_2/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_159"
  op: "Identity"
  input: "save_2/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  input: "save_2/Identity_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_160"
  op: "Identity"
  input: "save_2/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  input: "save_2/Identity_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_161"
  op: "Identity"
  input: "save_2/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  input: "save_2/Identity_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_162"
  op: "Identity"
  input: "save_2/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_163"
  op: "Identity"
  input: "save_2/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_164"
  op: "Identity"
  input: "save_2/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/expand/weights"
  input: "save_2/Identity_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_165"
  op: "Identity"
  input: "save_2/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  input: "save_2/Identity_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_166"
  op: "Identity"
  input: "save_2/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  input: "save_2/Identity_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_167"
  op: "Identity"
  input: "save_2/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  input: "save_2/Identity_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_168"
  op: "Identity"
  input: "save_2/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  input: "save_2/Identity_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_169"
  op: "Identity"
  input: "save_2/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_3/project/weights"
  input: "save_2/Identity_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_170"
  op: "Identity"
  input: "save_2/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  input: "save_2/Identity_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_171"
  op: "Identity"
  input: "save_2/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_172"
  op: "Identity"
  input: "save_2/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_173"
  op: "Identity"
  input: "save_2/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_174"
  op: "Identity"
  input: "save_2/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  input: "save_2/Identity_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_175"
  op: "Identity"
  input: "save_2/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  input: "save_2/Identity_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_176"
  op: "Identity"
  input: "save_2/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  input: "save_2/Identity_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_177"
  op: "Identity"
  input: "save_2/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_178"
  op: "Identity"
  input: "save_2/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_179"
  op: "Identity"
  input: "save_2/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/expand/weights"
  input: "save_2/Identity_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_180"
  op: "Identity"
  input: "save_2/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  input: "save_2/Identity_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_181"
  op: "Identity"
  input: "save_2/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  input: "save_2/Identity_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_182"
  op: "Identity"
  input: "save_2/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  input: "save_2/Identity_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_183"
  op: "Identity"
  input: "save_2/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  input: "save_2/Identity_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_184"
  op: "Identity"
  input: "save_2/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_4/project/weights"
  input: "save_2/Identity_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_185"
  op: "Identity"
  input: "save_2/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  input: "save_2/Identity_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_186"
  op: "Identity"
  input: "save_2/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_187"
  op: "Identity"
  input: "save_2/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_188"
  op: "Identity"
  input: "save_2/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_189"
  op: "Identity"
  input: "save_2/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  input: "save_2/Identity_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_190"
  op: "Identity"
  input: "save_2/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  input: "save_2/Identity_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_191"
  op: "Identity"
  input: "save_2/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  input: "save_2/Identity_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_192"
  op: "Identity"
  input: "save_2/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_193"
  op: "Identity"
  input: "save_2/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_194"
  op: "Identity"
  input: "save_2/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/expand/weights"
  input: "save_2/Identity_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_195"
  op: "Identity"
  input: "save_2/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  input: "save_2/Identity_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_196"
  op: "Identity"
  input: "save_2/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  input: "save_2/Identity_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_197"
  op: "Identity"
  input: "save_2/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  input: "save_2/Identity_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_198"
  op: "Identity"
  input: "save_2/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  input: "save_2/Identity_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_199"
  op: "Identity"
  input: "save_2/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_199"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_5/project/weights"
  input: "save_2/Identity_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_200"
  op: "Identity"
  input: "save_2/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_200"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  input: "save_2/Identity_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_201"
  op: "Identity"
  input: "save_2/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_201"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_202"
  op: "Identity"
  input: "save_2/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_202"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_203"
  op: "Identity"
  input: "save_2/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_203"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_204"
  op: "Identity"
  input: "save_2/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_204"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  input: "save_2/Identity_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_205"
  op: "Identity"
  input: "save_2/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_205"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  input: "save_2/Identity_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_206"
  op: "Identity"
  input: "save_2/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_206"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  input: "save_2/Identity_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_207"
  op: "Identity"
  input: "save_2/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_207"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_208"
  op: "Identity"
  input: "save_2/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_208"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_209"
  op: "Identity"
  input: "save_2/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_209"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/expand/weights"
  input: "save_2/Identity_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_210"
  op: "Identity"
  input: "save_2/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_210"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  input: "save_2/Identity_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_211"
  op: "Identity"
  input: "save_2/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_211"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  input: "save_2/Identity_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_212"
  op: "Identity"
  input: "save_2/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_212"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  input: "save_2/Identity_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_213"
  op: "Identity"
  input: "save_2/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_213"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  input: "save_2/Identity_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_214"
  op: "Identity"
  input: "save_2/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_214"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_6/project/weights"
  input: "save_2/Identity_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_215"
  op: "Identity"
  input: "save_2/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_215"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  input: "save_2/Identity_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_216"
  op: "Identity"
  input: "save_2/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_216"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_217"
  op: "Identity"
  input: "save_2/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_217"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_218"
  op: "Identity"
  input: "save_2/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_218"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_219"
  op: "Identity"
  input: "save_2/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_219"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  input: "save_2/Identity_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_220"
  op: "Identity"
  input: "save_2/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_220"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  input: "save_2/Identity_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_221"
  op: "Identity"
  input: "save_2/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_221"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  input: "save_2/Identity_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_222"
  op: "Identity"
  input: "save_2/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_222"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_223"
  op: "Identity"
  input: "save_2/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_223"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_224"
  op: "Identity"
  input: "save_2/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_224"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/expand/weights"
  input: "save_2/Identity_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_225"
  op: "Identity"
  input: "save_2/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_225"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  input: "save_2/Identity_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_226"
  op: "Identity"
  input: "save_2/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_226"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  input: "save_2/Identity_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_227"
  op: "Identity"
  input: "save_2/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_227"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  input: "save_2/Identity_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_228"
  op: "Identity"
  input: "save_2/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_228"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  input: "save_2/Identity_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_229"
  op: "Identity"
  input: "save_2/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_229"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_7/project/weights"
  input: "save_2/Identity_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_230"
  op: "Identity"
  input: "save_2/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_230"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  input: "save_2/Identity_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_231"
  op: "Identity"
  input: "save_2/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_231"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_232"
  op: "Identity"
  input: "save_2/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_232"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_233"
  op: "Identity"
  input: "save_2/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_233"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_234"
  op: "Identity"
  input: "save_2/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_234"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  input: "save_2/Identity_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_235"
  op: "Identity"
  input: "save_2/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_235"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  input: "save_2/Identity_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_236"
  op: "Identity"
  input: "save_2/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_236"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  input: "save_2/Identity_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_237"
  op: "Identity"
  input: "save_2/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_237"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_238"
  op: "Identity"
  input: "save_2/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_238"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_239"
  op: "Identity"
  input: "save_2/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_239"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/expand/weights"
  input: "save_2/Identity_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_240"
  op: "Identity"
  input: "save_2/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_240"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  input: "save_2/Identity_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_241"
  op: "Identity"
  input: "save_2/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_241"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  input: "save_2/Identity_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_242"
  op: "Identity"
  input: "save_2/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_242"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  input: "save_2/Identity_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_243"
  op: "Identity"
  input: "save_2/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_243"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  input: "save_2/Identity_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_244"
  op: "Identity"
  input: "save_2/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_244"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_8/project/weights"
  input: "save_2/Identity_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_245"
  op: "Identity"
  input: "save_2/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_245"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  input: "save_2/Identity_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_246"
  op: "Identity"
  input: "save_2/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_246"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  input: "save_2/Identity_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_247"
  op: "Identity"
  input: "save_2/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_247"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  input: "save_2/Identity_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_248"
  op: "Identity"
  input: "save_2/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_248"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  input: "save_2/Identity_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_249"
  op: "Identity"
  input: "save_2/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_249"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  input: "save_2/Identity_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_250"
  op: "Identity"
  input: "save_2/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_250"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  input: "save_2/Identity_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_251"
  op: "Identity"
  input: "save_2/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_251"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  input: "save_2/Identity_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_252"
  op: "Identity"
  input: "save_2/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_252"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  input: "save_2/Identity_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_253"
  op: "Identity"
  input: "save_2/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_253"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  input: "save_2/Identity_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_254"
  op: "Identity"
  input: "save_2/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_254"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/expand/weights"
  input: "save_2/Identity_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_255"
  op: "Identity"
  input: "save_2/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_255"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  input: "save_2/Identity_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_256"
  op: "Identity"
  input: "save_2/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_256"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  input: "save_2/Identity_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_257"
  op: "Identity"
  input: "save_2/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_257"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  input: "save_2/Identity_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_258"
  op: "Identity"
  input: "save_2/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_258"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  input: "save_2/Identity_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_259"
  op: "Identity"
  input: "save_2/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_259"
  op: "AssignVariableOp"
  input: "module/MobilenetV2/expanded_conv_9/project/weights"
  input: "save_2/Identity_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Assign_2"
  op: "Assign"
  input: "w1"
  input: "save_2/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_3"
  op: "Assign"
  input: "w2"
  input: "save_2/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/restore_all"
  op: "NoOp"
  input: "^save_2/Assign"
  input: "^save_2/AssignVariableOp"
  input: "^save_2/AssignVariableOp_1"
  input: "^save_2/AssignVariableOp_10"
  input: "^save_2/AssignVariableOp_100"
  input: "^save_2/AssignVariableOp_101"
  input: "^save_2/AssignVariableOp_102"
  input: "^save_2/AssignVariableOp_103"
  input: "^save_2/AssignVariableOp_104"
  input: "^save_2/AssignVariableOp_105"
  input: "^save_2/AssignVariableOp_106"
  input: "^save_2/AssignVariableOp_107"
  input: "^save_2/AssignVariableOp_108"
  input: "^save_2/AssignVariableOp_109"
  input: "^save_2/AssignVariableOp_11"
  input: "^save_2/AssignVariableOp_110"
  input: "^save_2/AssignVariableOp_111"
  input: "^save_2/AssignVariableOp_112"
  input: "^save_2/AssignVariableOp_113"
  input: "^save_2/AssignVariableOp_114"
  input: "^save_2/AssignVariableOp_115"
  input: "^save_2/AssignVariableOp_116"
  input: "^save_2/AssignVariableOp_117"
  input: "^save_2/AssignVariableOp_118"
  input: "^save_2/AssignVariableOp_119"
  input: "^save_2/AssignVariableOp_12"
  input: "^save_2/AssignVariableOp_120"
  input: "^save_2/AssignVariableOp_121"
  input: "^save_2/AssignVariableOp_122"
  input: "^save_2/AssignVariableOp_123"
  input: "^save_2/AssignVariableOp_124"
  input: "^save_2/AssignVariableOp_125"
  input: "^save_2/AssignVariableOp_126"
  input: "^save_2/AssignVariableOp_127"
  input: "^save_2/AssignVariableOp_128"
  input: "^save_2/AssignVariableOp_129"
  input: "^save_2/AssignVariableOp_13"
  input: "^save_2/AssignVariableOp_130"
  input: "^save_2/AssignVariableOp_131"
  input: "^save_2/AssignVariableOp_132"
  input: "^save_2/AssignVariableOp_133"
  input: "^save_2/AssignVariableOp_134"
  input: "^save_2/AssignVariableOp_135"
  input: "^save_2/AssignVariableOp_136"
  input: "^save_2/AssignVariableOp_137"
  input: "^save_2/AssignVariableOp_138"
  input: "^save_2/AssignVariableOp_139"
  input: "^save_2/AssignVariableOp_14"
  input: "^save_2/AssignVariableOp_140"
  input: "^save_2/AssignVariableOp_141"
  input: "^save_2/AssignVariableOp_142"
  input: "^save_2/AssignVariableOp_143"
  input: "^save_2/AssignVariableOp_144"
  input: "^save_2/AssignVariableOp_145"
  input: "^save_2/AssignVariableOp_146"
  input: "^save_2/AssignVariableOp_147"
  input: "^save_2/AssignVariableOp_148"
  input: "^save_2/AssignVariableOp_149"
  input: "^save_2/AssignVariableOp_15"
  input: "^save_2/AssignVariableOp_150"
  input: "^save_2/AssignVariableOp_151"
  input: "^save_2/AssignVariableOp_152"
  input: "^save_2/AssignVariableOp_153"
  input: "^save_2/AssignVariableOp_154"
  input: "^save_2/AssignVariableOp_155"
  input: "^save_2/AssignVariableOp_156"
  input: "^save_2/AssignVariableOp_157"
  input: "^save_2/AssignVariableOp_158"
  input: "^save_2/AssignVariableOp_159"
  input: "^save_2/AssignVariableOp_16"
  input: "^save_2/AssignVariableOp_160"
  input: "^save_2/AssignVariableOp_161"
  input: "^save_2/AssignVariableOp_162"
  input: "^save_2/AssignVariableOp_163"
  input: "^save_2/AssignVariableOp_164"
  input: "^save_2/AssignVariableOp_165"
  input: "^save_2/AssignVariableOp_166"
  input: "^save_2/AssignVariableOp_167"
  input: "^save_2/AssignVariableOp_168"
  input: "^save_2/AssignVariableOp_169"
  input: "^save_2/AssignVariableOp_17"
  input: "^save_2/AssignVariableOp_170"
  input: "^save_2/AssignVariableOp_171"
  input: "^save_2/AssignVariableOp_172"
  input: "^save_2/AssignVariableOp_173"
  input: "^save_2/AssignVariableOp_174"
  input: "^save_2/AssignVariableOp_175"
  input: "^save_2/AssignVariableOp_176"
  input: "^save_2/AssignVariableOp_177"
  input: "^save_2/AssignVariableOp_178"
  input: "^save_2/AssignVariableOp_179"
  input: "^save_2/AssignVariableOp_18"
  input: "^save_2/AssignVariableOp_180"
  input: "^save_2/AssignVariableOp_181"
  input: "^save_2/AssignVariableOp_182"
  input: "^save_2/AssignVariableOp_183"
  input: "^save_2/AssignVariableOp_184"
  input: "^save_2/AssignVariableOp_185"
  input: "^save_2/AssignVariableOp_186"
  input: "^save_2/AssignVariableOp_187"
  input: "^save_2/AssignVariableOp_188"
  input: "^save_2/AssignVariableOp_189"
  input: "^save_2/AssignVariableOp_19"
  input: "^save_2/AssignVariableOp_190"
  input: "^save_2/AssignVariableOp_191"
  input: "^save_2/AssignVariableOp_192"
  input: "^save_2/AssignVariableOp_193"
  input: "^save_2/AssignVariableOp_194"
  input: "^save_2/AssignVariableOp_195"
  input: "^save_2/AssignVariableOp_196"
  input: "^save_2/AssignVariableOp_197"
  input: "^save_2/AssignVariableOp_198"
  input: "^save_2/AssignVariableOp_199"
  input: "^save_2/AssignVariableOp_2"
  input: "^save_2/AssignVariableOp_20"
  input: "^save_2/AssignVariableOp_200"
  input: "^save_2/AssignVariableOp_201"
  input: "^save_2/AssignVariableOp_202"
  input: "^save_2/AssignVariableOp_203"
  input: "^save_2/AssignVariableOp_204"
  input: "^save_2/AssignVariableOp_205"
  input: "^save_2/AssignVariableOp_206"
  input: "^save_2/AssignVariableOp_207"
  input: "^save_2/AssignVariableOp_208"
  input: "^save_2/AssignVariableOp_209"
  input: "^save_2/AssignVariableOp_21"
  input: "^save_2/AssignVariableOp_210"
  input: "^save_2/AssignVariableOp_211"
  input: "^save_2/AssignVariableOp_212"
  input: "^save_2/AssignVariableOp_213"
  input: "^save_2/AssignVariableOp_214"
  input: "^save_2/AssignVariableOp_215"
  input: "^save_2/AssignVariableOp_216"
  input: "^save_2/AssignVariableOp_217"
  input: "^save_2/AssignVariableOp_218"
  input: "^save_2/AssignVariableOp_219"
  input: "^save_2/AssignVariableOp_22"
  input: "^save_2/AssignVariableOp_220"
  input: "^save_2/AssignVariableOp_221"
  input: "^save_2/AssignVariableOp_222"
  input: "^save_2/AssignVariableOp_223"
  input: "^save_2/AssignVariableOp_224"
  input: "^save_2/AssignVariableOp_225"
  input: "^save_2/AssignVariableOp_226"
  input: "^save_2/AssignVariableOp_227"
  input: "^save_2/AssignVariableOp_228"
  input: "^save_2/AssignVariableOp_229"
  input: "^save_2/AssignVariableOp_23"
  input: "^save_2/AssignVariableOp_230"
  input: "^save_2/AssignVariableOp_231"
  input: "^save_2/AssignVariableOp_232"
  input: "^save_2/AssignVariableOp_233"
  input: "^save_2/AssignVariableOp_234"
  input: "^save_2/AssignVariableOp_235"
  input: "^save_2/AssignVariableOp_236"
  input: "^save_2/AssignVariableOp_237"
  input: "^save_2/AssignVariableOp_238"
  input: "^save_2/AssignVariableOp_239"
  input: "^save_2/AssignVariableOp_24"
  input: "^save_2/AssignVariableOp_240"
  input: "^save_2/AssignVariableOp_241"
  input: "^save_2/AssignVariableOp_242"
  input: "^save_2/AssignVariableOp_243"
  input: "^save_2/AssignVariableOp_244"
  input: "^save_2/AssignVariableOp_245"
  input: "^save_2/AssignVariableOp_246"
  input: "^save_2/AssignVariableOp_247"
  input: "^save_2/AssignVariableOp_248"
  input: "^save_2/AssignVariableOp_249"
  input: "^save_2/AssignVariableOp_25"
  input: "^save_2/AssignVariableOp_250"
  input: "^save_2/AssignVariableOp_251"
  input: "^save_2/AssignVariableOp_252"
  input: "^save_2/AssignVariableOp_253"
  input: "^save_2/AssignVariableOp_254"
  input: "^save_2/AssignVariableOp_255"
  input: "^save_2/AssignVariableOp_256"
  input: "^save_2/AssignVariableOp_257"
  input: "^save_2/AssignVariableOp_258"
  input: "^save_2/AssignVariableOp_259"
  input: "^save_2/AssignVariableOp_26"
  input: "^save_2/AssignVariableOp_27"
  input: "^save_2/AssignVariableOp_28"
  input: "^save_2/AssignVariableOp_29"
  input: "^save_2/AssignVariableOp_3"
  input: "^save_2/AssignVariableOp_30"
  input: "^save_2/AssignVariableOp_31"
  input: "^save_2/AssignVariableOp_32"
  input: "^save_2/AssignVariableOp_33"
  input: "^save_2/AssignVariableOp_34"
  input: "^save_2/AssignVariableOp_35"
  input: "^save_2/AssignVariableOp_36"
  input: "^save_2/AssignVariableOp_37"
  input: "^save_2/AssignVariableOp_38"
  input: "^save_2/AssignVariableOp_39"
  input: "^save_2/AssignVariableOp_4"
  input: "^save_2/AssignVariableOp_40"
  input: "^save_2/AssignVariableOp_41"
  input: "^save_2/AssignVariableOp_42"
  input: "^save_2/AssignVariableOp_43"
  input: "^save_2/AssignVariableOp_44"
  input: "^save_2/AssignVariableOp_45"
  input: "^save_2/AssignVariableOp_46"
  input: "^save_2/AssignVariableOp_47"
  input: "^save_2/AssignVariableOp_48"
  input: "^save_2/AssignVariableOp_49"
  input: "^save_2/AssignVariableOp_5"
  input: "^save_2/AssignVariableOp_50"
  input: "^save_2/AssignVariableOp_51"
  input: "^save_2/AssignVariableOp_52"
  input: "^save_2/AssignVariableOp_53"
  input: "^save_2/AssignVariableOp_54"
  input: "^save_2/AssignVariableOp_55"
  input: "^save_2/AssignVariableOp_56"
  input: "^save_2/AssignVariableOp_57"
  input: "^save_2/AssignVariableOp_58"
  input: "^save_2/AssignVariableOp_59"
  input: "^save_2/AssignVariableOp_6"
  input: "^save_2/AssignVariableOp_60"
  input: "^save_2/AssignVariableOp_61"
  input: "^save_2/AssignVariableOp_62"
  input: "^save_2/AssignVariableOp_63"
  input: "^save_2/AssignVariableOp_64"
  input: "^save_2/AssignVariableOp_65"
  input: "^save_2/AssignVariableOp_66"
  input: "^save_2/AssignVariableOp_67"
  input: "^save_2/AssignVariableOp_68"
  input: "^save_2/AssignVariableOp_69"
  input: "^save_2/AssignVariableOp_7"
  input: "^save_2/AssignVariableOp_70"
  input: "^save_2/AssignVariableOp_71"
  input: "^save_2/AssignVariableOp_72"
  input: "^save_2/AssignVariableOp_73"
  input: "^save_2/AssignVariableOp_74"
  input: "^save_2/AssignVariableOp_75"
  input: "^save_2/AssignVariableOp_76"
  input: "^save_2/AssignVariableOp_77"
  input: "^save_2/AssignVariableOp_78"
  input: "^save_2/AssignVariableOp_79"
  input: "^save_2/AssignVariableOp_8"
  input: "^save_2/AssignVariableOp_80"
  input: "^save_2/AssignVariableOp_81"
  input: "^save_2/AssignVariableOp_82"
  input: "^save_2/AssignVariableOp_83"
  input: "^save_2/AssignVariableOp_84"
  input: "^save_2/AssignVariableOp_85"
  input: "^save_2/AssignVariableOp_86"
  input: "^save_2/AssignVariableOp_87"
  input: "^save_2/AssignVariableOp_88"
  input: "^save_2/AssignVariableOp_89"
  input: "^save_2/AssignVariableOp_9"
  input: "^save_2/AssignVariableOp_90"
  input: "^save_2/AssignVariableOp_91"
  input: "^save_2/AssignVariableOp_92"
  input: "^save_2/AssignVariableOp_93"
  input: "^save_2/AssignVariableOp_94"
  input: "^save_2/AssignVariableOp_95"
  input: "^save_2/AssignVariableOp_96"
  input: "^save_2/AssignVariableOp_97"
  input: "^save_2/AssignVariableOp_98"
  input: "^save_2/AssignVariableOp_99"
  input: "^save_2/Assign_1"
  input: "^save_2/Assign_2"
  input: "^save_2/Assign_3"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^AssignVariableOp"
  input: "^AssignVariableOp_1"
  input: "^AssignVariableOp_10"
  input: "^AssignVariableOp_100"
  input: "^AssignVariableOp_101"
  input: "^AssignVariableOp_102"
  input: "^AssignVariableOp_103"
  input: "^AssignVariableOp_104"
  input: "^AssignVariableOp_105"
  input: "^AssignVariableOp_106"
  input: "^AssignVariableOp_107"
  input: "^AssignVariableOp_108"
  input: "^AssignVariableOp_109"
  input: "^AssignVariableOp_11"
  input: "^AssignVariableOp_110"
  input: "^AssignVariableOp_111"
  input: "^AssignVariableOp_112"
  input: "^AssignVariableOp_113"
  input: "^AssignVariableOp_114"
  input: "^AssignVariableOp_115"
  input: "^AssignVariableOp_116"
  input: "^AssignVariableOp_117"
  input: "^AssignVariableOp_118"
  input: "^AssignVariableOp_119"
  input: "^AssignVariableOp_12"
  input: "^AssignVariableOp_120"
  input: "^AssignVariableOp_121"
  input: "^AssignVariableOp_122"
  input: "^AssignVariableOp_123"
  input: "^AssignVariableOp_124"
  input: "^AssignVariableOp_125"
  input: "^AssignVariableOp_126"
  input: "^AssignVariableOp_127"
  input: "^AssignVariableOp_128"
  input: "^AssignVariableOp_129"
  input: "^AssignVariableOp_13"
  input: "^AssignVariableOp_130"
  input: "^AssignVariableOp_131"
  input: "^AssignVariableOp_132"
  input: "^AssignVariableOp_133"
  input: "^AssignVariableOp_134"
  input: "^AssignVariableOp_135"
  input: "^AssignVariableOp_136"
  input: "^AssignVariableOp_137"
  input: "^AssignVariableOp_138"
  input: "^AssignVariableOp_139"
  input: "^AssignVariableOp_14"
  input: "^AssignVariableOp_140"
  input: "^AssignVariableOp_141"
  input: "^AssignVariableOp_142"
  input: "^AssignVariableOp_143"
  input: "^AssignVariableOp_144"
  input: "^AssignVariableOp_145"
  input: "^AssignVariableOp_146"
  input: "^AssignVariableOp_147"
  input: "^AssignVariableOp_148"
  input: "^AssignVariableOp_149"
  input: "^AssignVariableOp_15"
  input: "^AssignVariableOp_150"
  input: "^AssignVariableOp_151"
  input: "^AssignVariableOp_152"
  input: "^AssignVariableOp_153"
  input: "^AssignVariableOp_154"
  input: "^AssignVariableOp_155"
  input: "^AssignVariableOp_156"
  input: "^AssignVariableOp_157"
  input: "^AssignVariableOp_158"
  input: "^AssignVariableOp_159"
  input: "^AssignVariableOp_16"
  input: "^AssignVariableOp_160"
  input: "^AssignVariableOp_161"
  input: "^AssignVariableOp_162"
  input: "^AssignVariableOp_163"
  input: "^AssignVariableOp_164"
  input: "^AssignVariableOp_165"
  input: "^AssignVariableOp_166"
  input: "^AssignVariableOp_167"
  input: "^AssignVariableOp_168"
  input: "^AssignVariableOp_169"
  input: "^AssignVariableOp_17"
  input: "^AssignVariableOp_170"
  input: "^AssignVariableOp_171"
  input: "^AssignVariableOp_172"
  input: "^AssignVariableOp_173"
  input: "^AssignVariableOp_174"
  input: "^AssignVariableOp_175"
  input: "^AssignVariableOp_176"
  input: "^AssignVariableOp_177"
  input: "^AssignVariableOp_178"
  input: "^AssignVariableOp_179"
  input: "^AssignVariableOp_18"
  input: "^AssignVariableOp_180"
  input: "^AssignVariableOp_181"
  input: "^AssignVariableOp_182"
  input: "^AssignVariableOp_183"
  input: "^AssignVariableOp_184"
  input: "^AssignVariableOp_185"
  input: "^AssignVariableOp_186"
  input: "^AssignVariableOp_187"
  input: "^AssignVariableOp_188"
  input: "^AssignVariableOp_189"
  input: "^AssignVariableOp_19"
  input: "^AssignVariableOp_190"
  input: "^AssignVariableOp_191"
  input: "^AssignVariableOp_192"
  input: "^AssignVariableOp_193"
  input: "^AssignVariableOp_194"
  input: "^AssignVariableOp_195"
  input: "^AssignVariableOp_196"
  input: "^AssignVariableOp_197"
  input: "^AssignVariableOp_198"
  input: "^AssignVariableOp_199"
  input: "^AssignVariableOp_2"
  input: "^AssignVariableOp_20"
  input: "^AssignVariableOp_200"
  input: "^AssignVariableOp_201"
  input: "^AssignVariableOp_202"
  input: "^AssignVariableOp_203"
  input: "^AssignVariableOp_204"
  input: "^AssignVariableOp_205"
  input: "^AssignVariableOp_206"
  input: "^AssignVariableOp_207"
  input: "^AssignVariableOp_208"
  input: "^AssignVariableOp_209"
  input: "^AssignVariableOp_21"
  input: "^AssignVariableOp_210"
  input: "^AssignVariableOp_211"
  input: "^AssignVariableOp_212"
  input: "^AssignVariableOp_213"
  input: "^AssignVariableOp_214"
  input: "^AssignVariableOp_215"
  input: "^AssignVariableOp_216"
  input: "^AssignVariableOp_217"
  input: "^AssignVariableOp_218"
  input: "^AssignVariableOp_219"
  input: "^AssignVariableOp_22"
  input: "^AssignVariableOp_220"
  input: "^AssignVariableOp_221"
  input: "^AssignVariableOp_222"
  input: "^AssignVariableOp_223"
  input: "^AssignVariableOp_224"
  input: "^AssignVariableOp_225"
  input: "^AssignVariableOp_226"
  input: "^AssignVariableOp_227"
  input: "^AssignVariableOp_228"
  input: "^AssignVariableOp_229"
  input: "^AssignVariableOp_23"
  input: "^AssignVariableOp_230"
  input: "^AssignVariableOp_231"
  input: "^AssignVariableOp_232"
  input: "^AssignVariableOp_233"
  input: "^AssignVariableOp_234"
  input: "^AssignVariableOp_235"
  input: "^AssignVariableOp_236"
  input: "^AssignVariableOp_237"
  input: "^AssignVariableOp_238"
  input: "^AssignVariableOp_239"
  input: "^AssignVariableOp_24"
  input: "^AssignVariableOp_240"
  input: "^AssignVariableOp_241"
  input: "^AssignVariableOp_242"
  input: "^AssignVariableOp_243"
  input: "^AssignVariableOp_244"
  input: "^AssignVariableOp_245"
  input: "^AssignVariableOp_246"
  input: "^AssignVariableOp_247"
  input: "^AssignVariableOp_248"
  input: "^AssignVariableOp_249"
  input: "^AssignVariableOp_25"
  input: "^AssignVariableOp_250"
  input: "^AssignVariableOp_251"
  input: "^AssignVariableOp_252"
  input: "^AssignVariableOp_253"
  input: "^AssignVariableOp_254"
  input: "^AssignVariableOp_255"
  input: "^AssignVariableOp_256"
  input: "^AssignVariableOp_257"
  input: "^AssignVariableOp_258"
  input: "^AssignVariableOp_259"
  input: "^AssignVariableOp_26"
  input: "^AssignVariableOp_27"
  input: "^AssignVariableOp_28"
  input: "^AssignVariableOp_29"
  input: "^AssignVariableOp_3"
  input: "^AssignVariableOp_30"
  input: "^AssignVariableOp_31"
  input: "^AssignVariableOp_32"
  input: "^AssignVariableOp_33"
  input: "^AssignVariableOp_34"
  input: "^AssignVariableOp_35"
  input: "^AssignVariableOp_36"
  input: "^AssignVariableOp_37"
  input: "^AssignVariableOp_38"
  input: "^AssignVariableOp_39"
  input: "^AssignVariableOp_4"
  input: "^AssignVariableOp_40"
  input: "^AssignVariableOp_41"
  input: "^AssignVariableOp_42"
  input: "^AssignVariableOp_43"
  input: "^AssignVariableOp_44"
  input: "^AssignVariableOp_45"
  input: "^AssignVariableOp_46"
  input: "^AssignVariableOp_47"
  input: "^AssignVariableOp_48"
  input: "^AssignVariableOp_49"
  input: "^AssignVariableOp_5"
  input: "^AssignVariableOp_50"
  input: "^AssignVariableOp_51"
  input: "^AssignVariableOp_52"
  input: "^AssignVariableOp_53"
  input: "^AssignVariableOp_54"
  input: "^AssignVariableOp_55"
  input: "^AssignVariableOp_56"
  input: "^AssignVariableOp_57"
  input: "^AssignVariableOp_58"
  input: "^AssignVariableOp_59"
  input: "^AssignVariableOp_6"
  input: "^AssignVariableOp_60"
  input: "^AssignVariableOp_61"
  input: "^AssignVariableOp_62"
  input: "^AssignVariableOp_63"
  input: "^AssignVariableOp_64"
  input: "^AssignVariableOp_65"
  input: "^AssignVariableOp_66"
  input: "^AssignVariableOp_67"
  input: "^AssignVariableOp_68"
  input: "^AssignVariableOp_69"
  input: "^AssignVariableOp_7"
  input: "^AssignVariableOp_70"
  input: "^AssignVariableOp_71"
  input: "^AssignVariableOp_72"
  input: "^AssignVariableOp_73"
  input: "^AssignVariableOp_74"
  input: "^AssignVariableOp_75"
  input: "^AssignVariableOp_76"
  input: "^AssignVariableOp_77"
  input: "^AssignVariableOp_78"
  input: "^AssignVariableOp_79"
  input: "^AssignVariableOp_8"
  input: "^AssignVariableOp_80"
  input: "^AssignVariableOp_81"
  input: "^AssignVariableOp_82"
  input: "^AssignVariableOp_83"
  input: "^AssignVariableOp_84"
  input: "^AssignVariableOp_85"
  input: "^AssignVariableOp_86"
  input: "^AssignVariableOp_87"
  input: "^AssignVariableOp_88"
  input: "^AssignVariableOp_89"
  input: "^AssignVariableOp_9"
  input: "^AssignVariableOp_90"
  input: "^AssignVariableOp_91"
  input: "^AssignVariableOp_92"
  input: "^AssignVariableOp_93"
  input: "^AssignVariableOp_94"
  input: "^AssignVariableOp_95"
  input: "^AssignVariableOp_96"
  input: "^AssignVariableOp_97"
  input: "^AssignVariableOp_98"
  input: "^AssignVariableOp_99"
  input: "^dense/bias/Assign"
  input: "^dense/kernel/Assign"
  input: "^w1/Assign"
  input: "^w2/Assign"
}
versions {
  producer: 26
}
